## ---------------------------------------- ##
## MATIO 1.5.2 test suite: matio testsuite. ##
## ---------------------------------------- ##

testsuite: command line was:
  $ ./testsuite GREP=/bin/grep MAT73=0 MATLABEXE= HAVE_UINT64=1 HAVE_INT64=1 EXTENDED_SPARSE=1 COMPRESSION_ZLIB=1 LIBTOOL=../libtool

## --------- ##
## Platform. ##
## --------- ##

hostname = marten-asus
uname -m = x86_64
uname -r = 4.2.0-22-generic
uname -s = Linux
uname -v = #27-Ubuntu SMP Thu Dec 17 22:57:08 UTC 2015

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/marten/Projects/matio-matio/test
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2012 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='test'
| abs_builddir='/home/marten/Projects/matio-matio/test'
| at_srcdir='.'
| abs_srcdir='/home/marten/Projects/matio-matio/test'
| at_top_srcdir='..'
| abs_top_srcdir='/home/marten/Projects/matio-matio'
| at_top_build_prefix='../'
| abs_top_builddir='/home/marten/Projects/matio-matio'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='test'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

## ---------------- ##
## Tested programs. ##
## ---------------- ##

./testsuite.at:27: /home/marten/Projects/matio-matio/test/test_mat --version
test_mat 1.5.2
Written by Christopher Hulbert

Copyright(C) 2006-2012 Christopher C. Hulbert

## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Thu Jan 14 06:21:13 CET 2016
1. Read 2d double-precision array (mat4_read.at:29): ok     (0m0.004s 0m0.000s)
2. Read 2d double-precision complex array (mat4_read.at:47): ok     (0m0.004s 0m0.000s)
3. Read 2D character array (mat4_read.at:65): ok     (0m0.000s 0m0.004s)
4. Read small v4 file (mat4_read.at:83): ok     (0m0.000s 0m0.000s)
5. Read linear slab of double-precision array (mat4_readslab_le.at:29): ok     (0m0.000s 0m0.000s)
6. Read 2d double-precision array (mat4_read_be.at:29): ok     (0m0.000s 0m0.000s)
7. Read 2d double-precision complex array (mat4_read_be.at:47): ok     (0m0.000s 0m0.000s)
8. Read 2D character array (mat4_read_be.at:65): ok     (0m0.000s 0m0.000s)
9. Read small v4 file (mat4_read_be.at:83): ok     (0m0.004s 0m0.000s)
10. Read linear slab of double-precision array (mat4_readslab_be.at:29): ok     (0m0.000s 0m0.000s)
11. Read 2D double-precision array (mat5_uncompressed_read_le.at:27): ok     (0m0.000s 0m0.004s)
12. Read 2D single-precision array (mat5_uncompressed_read_le.at:44): ok     (0m0.000s 0m0.000s)
13. Read 2D 64-bit integer array (mat5_uncompressed_read_le.at:61): ok     (0m0.004s 0m0.000s)
14. Read 2D 64-bit unsigned integer array (mat5_uncompressed_read_le.at:78): ok     (0m0.000s 0m0.000s)
15. Read 2D 32-bit integer array (mat5_uncompressed_read_le.at:95): ok     (0m0.000s 0m0.000s)
16. Read 2D 32-bit unsigned integer array (mat5_uncompressed_read_le.at:112): ok     (0m0.000s 0m0.000s)
17. Read 2D 16-bit integer array (mat5_uncompressed_read_le.at:129): ok     (0m0.000s 0m0.000s)
18. Read 2D 16-bit unsigned integer array (mat5_uncompressed_read_le.at:146): ok     (0m0.000s 0m0.000s)
19. Read 2D 8-bit integer array (mat5_uncompressed_read_le.at:163): ok     (0m0.000s 0m0.000s)
20. Read 2D 8-bit unsigned integer array (mat5_uncompressed_read_le.at:180): ok     (0m0.000s 0m0.000s)
21. Read 2D double-precision complex array (mat5_uncompressed_read_le.at:197): ok     (0m0.000s 0m0.000s)
22. Read 2D single-precision complex array (mat5_uncompressed_read_le.at:214): ok     (0m0.000s 0m0.000s)
23. Read 2D 64-bit integer complex array (mat5_uncompressed_read_le.at:231): ok     (0m0.000s 0m0.000s)
24. Read 2D 64-bit unsigned integer complex array (mat5_uncompressed_read_le.at:248): ok     (0m0.000s 0m0.000s)
25. Read 2D 32-bit integer complex array (mat5_uncompressed_read_le.at:265): ok     (0m0.000s 0m0.000s)
26. Read 2D 32-bit unsigned integer complex array (mat5_uncompressed_read_le.at:282): ok     (0m0.000s 0m0.000s)
27. Read 2D 16-bit integer complex array (mat5_uncompressed_read_le.at:299): ok     (0m0.000s 0m0.000s)
28. Read 2D 16-bit unsigned integer complex array (mat5_uncompressed_read_le.at:316): ok     (0m0.000s 0m0.000s)
29. Read 2D 8-bit integer complex array (mat5_uncompressed_read_le.at:333): ok     (0m0.000s 0m0.000s)
30. Read 2D 8-bit unsigned integer complex array (mat5_uncompressed_read_le.at:350): ok     (0m0.000s 0m0.000s)
31. Read 2D logical array (mat5_uncompressed_read_le.at:367): ok     (0m0.000s 0m0.000s)
32. Read double-precision sparse array (mat5_uncompressed_read_le.at:385): ok     (0m0.000s 0m0.000s)
33. Read double-precision sparse complex array (mat5_uncompressed_read_le.at:403): ok     (0m0.000s 0m0.000s)
34. Read empty array (mat5_uncompressed_read_le.at:421): ok     (0m0.000s 0m0.000s)
35. Read 2D character array (mat5_uncompressed_read_le.at:434): ok     (0m0.000s 0m0.000s)
36. Read empty structure array (mat5_uncompressed_read_le.at:451): ok     (0m0.000s 0m0.000s)
37. Read empty structure array with fields (mat5_uncompressed_read_le.at:464): ok     (0m0.000s 0m0.000s)
38. Read structure array with empty fields (mat5_uncompressed_read_le.at:481): ok     (0m0.000s 0m0.000s)
39. Read structure array with double-precision fields (mat5_uncompressed_read_le.at:519): ok     (0m0.000s 0m0.000s)
40. Read structure array with single-precision fields (mat5_uncompressed_read_le.at:568): ok     (0m0.000s 0m0.000s)
41. Read structure array with 64-bit integer fields (mat5_uncompressed_read_le.at:617): ok     (0m0.000s 0m0.000s)
42. Read structure array with 64-bit unsigned integer fields (mat5_uncompressed_read_le.at:666): ok     (0m0.000s 0m0.000s)
43. Read structure array with 32-bit integer fields (mat5_uncompressed_read_le.at:715): ok     (0m0.000s 0m0.000s)
44. Read structure array with 32-bit unsigned integer fields (mat5_uncompressed_read_le.at:764): ok     (0m0.000s 0m0.000s)
45. Read structure array with 16-bit integer fields (mat5_uncompressed_read_le.at:813): ok     (0m0.000s 0m0.000s)
46. Read structure array with 16-bit unsigned integer fields (mat5_uncompressed_read_le.at:862): ok     (0m0.000s 0m0.000s)
47. Read structure array with 8-bit integer fields (mat5_uncompressed_read_le.at:911): ok     (0m0.004s 0m0.000s)
48. Read structure array with 8-bit unsigned integer fields (mat5_uncompressed_read_le.at:960): ok     (0m0.000s 0m0.000s)
49. Read structure array with complex double-precision fields (mat5_uncompressed_read_le.at:1009): ok     (0m0.000s 0m0.000s)
50. Read structure array with complex single-precision fields (mat5_uncompressed_read_le.at:1058): ok     (0m0.000s 0m0.000s)
51. Read structure array with complex 64-bit integer fields (mat5_uncompressed_read_le.at:1107): ok     (0m0.000s 0m0.000s)
52. Read structure array with complex 64-bit unsigned integer fields (mat5_uncompressed_read_le.at:1156): ok     (0m0.000s 0m0.000s)
53. Read structure array with complex 32-bit integer fields (mat5_uncompressed_read_le.at:1205): ok     (0m0.000s 0m0.000s)
54. Read structure array with complex 32-bit unsigned integer fields (mat5_uncompressed_read_le.at:1254): ok     (0m0.000s 0m0.004s)
55. Read structure array with complex 16-bit integer fields (mat5_uncompressed_read_le.at:1303): ok     (0m0.000s 0m0.000s)
56. Read structure array with complex 16-bit unsigned integer fields (mat5_uncompressed_read_le.at:1352): ok     (0m0.004s 0m0.000s)
57. Read structure array with complex 8-bit integer fields (mat5_uncompressed_read_le.at:1401): ok     (0m0.000s 0m0.000s)
58. Read structure array with complex 8-bit unsigned integer fields (mat5_uncompressed_read_le.at:1450): ok     (0m0.000s 0m0.000s)
59. Read structure array with logical fields (mat5_uncompressed_read_le.at:1499): ok     (0m0.000s 0m0.000s)
60. Read structure array with double-precision sparse fields (mat5_uncompressed_read_le.at:1558): ok     (0m0.000s 0m0.000s)
61. Read structure array with complex double-precision sparse fields (mat5_uncompressed_read_le.at:1613): ok     (0m0.000s 0m0.000s)
62. Read structure array with character fields (mat5_uncompressed_read_le.at:1668): ok     (0m0.000s 0m0.000s)
63. Read empty cell array (mat5_uncompressed_read_le.at:1713): ok     (0m0.000s 0m0.000s)
64. Read cell array with empty arrays (mat5_uncompressed_read_le.at:1726): ok     (0m0.000s 0m0.000s)
65. Read cell array with double-precision arrays (mat5_uncompressed_read_le.at:1799): ok     (0m0.012s 0m0.004s)
66. Read cell array with single-precision arrays (mat5_uncompressed_read_le.at:1863): ok     (0m0.016s 0m0.000s)
67. Read cell array with 64-bit integer arrays (mat5_uncompressed_read_le.at:1927): ok     (0m0.000s 0m0.004s)
68. Read cell array with 64-bit unsigned integer arrays (mat5_uncompressed_read_le.at:1991): ok     (0m0.000s 0m0.004s)
69. Read cell array with 32-bit integer arrays (mat5_uncompressed_read_le.at:2055): ok     (0m0.004s 0m0.000s)
70. Read cell array with 32-bit unsigned integer arrays (mat5_uncompressed_read_le.at:2119): ok     (0m0.000s 0m0.004s)
71. Read cell array with 16-bit integer arrays (mat5_uncompressed_read_le.at:2183): ok     (0m0.004s 0m0.000s)
72. Read cell array with 16-bit unsigned integer arrays (mat5_uncompressed_read_le.at:2247): ok     (0m0.004s 0m0.000s)
73. Read cell array with 8-bit integer arrays (mat5_uncompressed_read_le.at:2311): ok     (0m0.004s 0m0.000s)
74. Read cell array with 8-bit unsigned integer arrays (mat5_uncompressed_read_le.at:2375): ok     (0m0.004s 0m0.000s)
75. Read cell array with logical arrays (mat5_uncompressed_read_le.at:2439): ok     (0m0.000s 0m0.004s)
76. Read cell array with double-precision sparse arrays (mat5_uncompressed_read_le.at:2494): ok     (0m0.000s 0m0.004s)
77. Read cell array with complex double-precision sparse arrays (mat5_uncompressed_read_le.at:2547): ok     (0m0.000s 0m0.000s)
78. Read cell array with character arrays (mat5_uncompressed_read_le.at:2600): ok     (0m0.000s 0m0.000s)
79. Read cell array with empty structure arrays (mat5_uncompressed_read_le.at:2641): ok     (0m0.000s 0m0.000s)
80. Read cell array with structure arrays (numeric fields) (mat5_uncompressed_read_le.at:2701): ok     (0m0.000s 0m0.004s)
81. Read cell array with structure arrays (sparse fields) (mat5_uncompressed_read_le.at:3554): ok     (0m0.004s 0m0.000s)
82. Read cell array structure arrays (character fields) (mat5_uncompressed_read_le.at:3663): ok     (0m0.000s 0m0.000s)
83. Read slab of double-precision array (mat5_uncompressed_readslab_le.at:1): ok     (0m0.000s 0m0.004s)
84. Read slab of single-precision array (mat5_uncompressed_readslab_le.at:33): ok     (0m0.000s 0m0.000s)
85. Read slab of 64-bit integer array (mat5_uncompressed_readslab_le.at:65): ok     (0m0.000s 0m0.000s)
86. Read slab of 64-bit unsigned integer array (mat5_uncompressed_readslab_le.at:97): ok     (0m0.000s 0m0.000s)
87. Read slab of 32-bit integer array (mat5_uncompressed_readslab_le.at:129): ok     (0m0.000s 0m0.000s)
88. Read slab of 32-bit unsigned integer array (mat5_uncompressed_readslab_le.at:161): ok     (0m0.000s 0m0.000s)
89. Read slab of 16-bit integer array (mat5_uncompressed_readslab_le.at:193): ok     (0m0.000s 0m0.000s)
90. Read slab of 16-bit unsigned integer array (mat5_uncompressed_readslab_le.at:225): ok     (0m0.000s 0m0.000s)
91. Read slab of 8-bit integer array (mat5_uncompressed_readslab_le.at:257): ok     (0m0.000s 0m0.000s)
92. Read slab of 8-bit unsigned integer array (mat5_uncompressed_readslab_le.at:289): ok     (0m0.000s 0m0.000s)
93. Read slab of double-precision complex array (mat5_uncompressed_readslab_le.at:321): ok     (0m0.000s 0m0.000s)
94. Read slab of single-precision complex array (mat5_uncompressed_readslab_le.at:353): ok     (0m0.000s 0m0.000s)
95. Read slab of 64-bit integer complex array (mat5_uncompressed_readslab_le.at:385): ok     (0m0.000s 0m0.000s)
96. Read slab of 64-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:417): ok     (0m0.000s 0m0.000s)
97. Read slab of 32-bit integer complex array (mat5_uncompressed_readslab_le.at:449): ok     (0m0.000s 0m0.000s)
98. Read slab of 32-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:481): ok     (0m0.000s 0m0.000s)
99. Read slab of 16-bit integer complex array (mat5_uncompressed_readslab_le.at:513): ok     (0m0.000s 0m0.000s)
100. Read slab of 16-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:545): ok     (0m0.000s 0m0.000s)
101. Read slab of 8-bit integer complex array (mat5_uncompressed_readslab_le.at:577): ok     (0m0.000s 0m0.000s)
102. Read slab of 8-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:609): ok     (0m0.000s 0m0.000s)
103. Read linear slab of double-precision array (mat5_uncompressed_readslab_le.at:641): ok     (0m0.000s 0m0.000s)
104. Read linear slab of single-precision array (mat5_uncompressed_readslab_le.at:674): ok     (0m0.000s 0m0.000s)
105. Read linear slab of 64-bit integer array (mat5_uncompressed_readslab_le.at:707): ok     (0m0.000s 0m0.000s)
106. Read linear slab of 64-bit unsigned integer array (mat5_uncompressed_readslab_le.at:740): ok     (0m0.000s 0m0.000s)
107. Read linear slab of 32-bit integer array (mat5_uncompressed_readslab_le.at:773): ok     (0m0.000s 0m0.000s)
108. Read linear slab of 32-bit unsigned integer array (mat5_uncompressed_readslab_le.at:806): ok     (0m0.000s 0m0.000s)
109. Read linear slab of 16-bit integer array (mat5_uncompressed_readslab_le.at:839): ok     (0m0.000s 0m0.000s)
110. Read linear slab of 16-bit unsigned integer array (mat5_uncompressed_readslab_le.at:872): ok     (0m0.000s 0m0.000s)
111. Read linear slab of 8-bit integer array (mat5_uncompressed_readslab_le.at:905): ok     (0m0.000s 0m0.000s)
112. Read linear slab of 8-bit unsigned integer array (mat5_uncompressed_readslab_le.at:938): ok     (0m0.000s 0m0.000s)
113. Read linear slab of double-precision complex array (mat5_uncompressed_readslab_le.at:971): ok     (0m0.000s 0m0.000s)
114. Read linear slab of single-precision complex array (mat5_uncompressed_readslab_le.at:1004): ok     (0m0.000s 0m0.000s)
115. Read linear slab of 64-bit integer complex array (mat5_uncompressed_readslab_le.at:1037): ok     (0m0.000s 0m0.000s)
116. Read linear slab of 64-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:1070): ok     (0m0.000s 0m0.000s)
117. Read linear slab of 32-bit integer complex array (mat5_uncompressed_readslab_le.at:1103): ok     (0m0.000s 0m0.000s)
118. Read linear slab of 32-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:1136): ok     (0m0.000s 0m0.000s)
119. Read linear slab of 16-bit integer complex array (mat5_uncompressed_readslab_le.at:1169): ok     (0m0.000s 0m0.000s)
120. Read linear slab of 16-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:1202): ok     (0m0.000s 0m0.000s)
121. Read linear slab of 8-bit integer complex array (mat5_uncompressed_readslab_le.at:1235): ok     (0m0.004s 0m0.000s)
122. Read linear slab of 8-bit unsigned integer complex array (mat5_uncompressed_readslab_le.at:1268): ok     (0m0.000s 0m0.000s)
123. Read 2D double-precision array (mat5_compressed_read_le.at:27): ok     (0m0.000s 0m0.000s)
124. Read 2D single-precision array (mat5_compressed_read_le.at:45): ok     (0m0.000s 0m0.000s)
125. Read 2D 64-bit integer array (mat5_compressed_read_le.at:63): ok     (0m0.000s 0m0.000s)
126. Read 2D 64-bit unsigned integer array (mat5_compressed_read_le.at:81): ok     (0m0.000s 0m0.000s)
127. Read 2D 32-bit integer array (mat5_compressed_read_le.at:99): ok     (0m0.000s 0m0.000s)
128. Read 2D 32-bit unsigned integer array (mat5_compressed_read_le.at:117): ok     (0m0.000s 0m0.000s)
129. Read 2D 16-bit integer array (mat5_compressed_read_le.at:135): ok     (0m0.000s 0m0.000s)
130. Read 2D 16-bit unsigned integer array (mat5_compressed_read_le.at:153): ok     (0m0.000s 0m0.000s)
131. Read 2D 8-bit integer array (mat5_compressed_read_le.at:171): ok     (0m0.000s 0m0.000s)
132. Read 2D 8-bit unsigned integer array (mat5_compressed_read_le.at:189): ok     (0m0.000s 0m0.000s)
133. Read 2D double-precision complex array (mat5_compressed_read_le.at:207): ok     (0m0.000s 0m0.000s)
134. Read 2D single-precision complex array (mat5_compressed_read_le.at:225): ok     (0m0.000s 0m0.000s)
135. Read 2D 64-bit integer complex array (mat5_compressed_read_le.at:243): ok     (0m0.000s 0m0.000s)
136. Read 2D 64-bit unsigned integer complex array (mat5_compressed_read_le.at:261): ok     (0m0.000s 0m0.000s)
137. Read 2D 32-bit integer complex array (mat5_compressed_read_le.at:279): ok     (0m0.000s 0m0.000s)
138. Read 2D 32-bit unsigned integer complex array (mat5_compressed_read_le.at:297): ok     (0m0.000s 0m0.000s)
139. Read 2D 16-bit integer complex array (mat5_compressed_read_le.at:315): ok     (0m0.000s 0m0.000s)
140. Read 2D 16-bit unsigned integer complex array (mat5_compressed_read_le.at:333): ok     (0m0.000s 0m0.000s)
141. Read 2D 8-bit integer complex array (mat5_compressed_read_le.at:351): ok     (0m0.000s 0m0.000s)
142. Read 2D 8-bit unsigned integer complex array (mat5_compressed_read_le.at:369): ok     (0m0.000s 0m0.000s)
143. Read 2D logical array (mat5_compressed_read_le.at:387): ok     (0m0.004s 0m0.000s)
144. Read double-precision sparse array (mat5_compressed_read_le.at:406): ok     (0m0.000s 0m0.000s)
145. Read double-precision sparse complex array (mat5_compressed_read_le.at:425): ok     (0m0.000s 0m0.000s)
146. Read empty array (mat5_compressed_read_le.at:444): ok     (0m0.000s 0m0.000s)
147. Read 2D character array (mat5_compressed_read_le.at:458): ok     (0m0.000s 0m0.000s)
148. Read empty structure array (mat5_compressed_read_le.at:476): ok     (0m0.000s 0m0.000s)
149. Read empty structure array with fields (mat5_compressed_read_le.at:490): ok     (0m0.000s 0m0.000s)
150. Read structure array with empty fields (mat5_compressed_read_le.at:508): ok     (0m0.000s 0m0.000s)
151. Read structure array with double-precision fields (mat5_compressed_read_le.at:547): ok     (0m0.000s 0m0.000s)
152. Read structure array with single-precision fields (mat5_compressed_read_le.at:597): ok     (0m0.000s 0m0.000s)
153. Read structure array with 64-bit integer fields (mat5_compressed_read_le.at:647): ok     (0m0.000s 0m0.000s)
154. Read structure array with 64-bit unsigned integer fields (mat5_compressed_read_le.at:697): ok     (0m0.000s 0m0.000s)
155. Read structure array with 32-bit integer fields (mat5_compressed_read_le.at:747): ok     (0m0.000s 0m0.000s)
156. Read structure array with 32-bit unsigned integer fields (mat5_compressed_read_le.at:797): ok     (0m0.000s 0m0.000s)
157. Read structure array with 16-bit integer fields (mat5_compressed_read_le.at:847): ok     (0m0.000s 0m0.004s)
158. Read structure array with 16-bit unsigned integer fields (mat5_compressed_read_le.at:897): ok     (0m0.000s 0m0.000s)
159. Read structure array with 8-bit integer fields (mat5_compressed_read_le.at:947): ok     (0m0.000s 0m0.004s)
160. Read structure array with 8-bit unsigned integer fields (mat5_compressed_read_le.at:997): ok     (0m0.004s 0m0.000s)
161. Read structure array with complex double-precision fields (mat5_compressed_read_le.at:1047): ok     (0m0.000s 0m0.004s)
162. Read structure array with complex single-precision fields (mat5_compressed_read_le.at:1097): ok     (0m0.004s 0m0.000s)
163. Read structure array with complex 64-bit integer fields (mat5_compressed_read_le.at:1147): ok     (0m0.000s 0m0.004s)
164. Read structure array with complex 64-bit unsigned integer fields (mat5_compressed_read_le.at:1197): ok     (0m0.000s 0m0.004s)
165. Read structure array with complex 32-bit integer fields (mat5_compressed_read_le.at:1247): ok     (0m0.000s 0m0.004s)
166. Read structure array with complex 32-bit unsigned integer fields (mat5_compressed_read_le.at:1297): ok     (0m0.000s 0m0.000s)
167. Read structure array with complex 16-bit integer fields (mat5_compressed_read_le.at:1347): ok     (0m0.000s 0m0.000s)
168. Read structure array with complex 16-bit unsigned integer fields (mat5_compressed_read_le.at:1397): ok     (0m0.004s 0m0.000s)
169. Read structure array with complex 8-bit integer fields (mat5_compressed_read_le.at:1447): ok     (0m0.000s 0m0.004s)
170. Read structure array with complex 8-bit unsigned integer fields (mat5_compressed_read_le.at:1497): ok     (0m0.004s 0m0.000s)
171. Read structure array with logical fields (mat5_compressed_read_le.at:1547): ok     (0m0.000s 0m0.004s)
172. Read structure array with double-precision sparse fields (mat5_compressed_read_le.at:1607): ok     (0m0.004s 0m0.000s)
173. Read structure array with complex double-precision sparse fields (mat5_compressed_read_le.at:1663): ok     (0m0.004s 0m0.000s)
174. Read structure array with character fields (mat5_compressed_read_le.at:1719): ok     (0m0.000s 0m0.000s)
175. Read empty cell array (mat5_compressed_read_le.at:1765): ok     (0m0.004s 0m0.000s)
176. Read cell array with empty arrays (mat5_compressed_read_le.at:1779): ok     (0m0.000s 0m0.000s)
177. Read cell array with double-precision arrays (mat5_compressed_read_le.at:1853): ok     (0m0.004s 0m0.000s)
178. Read cell array with single-precision arrays (mat5_compressed_read_le.at:1918): ok     (0m0.004s 0m0.000s)
179. Read cell array with 64-bit integer arrays (mat5_compressed_read_le.at:1983): ok     (0m0.000s 0m0.004s)
180. Read cell array with 64-bit unsigned integer arrays (mat5_compressed_read_le.at:2048): ok     (0m0.000s 0m0.000s)
181. Read cell array with 32-bit integer arrays (mat5_compressed_read_le.at:2113): ok     (0m0.004s 0m0.000s)
182. Read cell array with 32-bit unsigned integer arrays (mat5_compressed_read_le.at:2178): ok     (0m0.000s 0m0.004s)
183. Read cell array with 16-bit integer arrays (mat5_compressed_read_le.at:2243): ok     (0m0.000s 0m0.004s)
184. Read cell array with 16-bit unsigned integer arrays (mat5_compressed_read_le.at:2308): ok     (0m0.000s 0m0.004s)
185. Read cell array with 8-bit integer arrays (mat5_compressed_read_le.at:2373): ok     (0m0.000s 0m0.004s)
186. Read cell array with 8-bit unsigned integer arrays (mat5_compressed_read_le.at:2438): ok     (0m0.004s 0m0.000s)
187. Read cell array with logical arrays (mat5_compressed_read_le.at:2503): ok     (0m0.004s 0m0.000s)
188. Read cell array with double-precision sparse arrays (mat5_compressed_read_le.at:2559): ok     (0m0.004s 0m0.000s)
189. Read cell array with complex double-precision sparse arrays (mat5_compressed_read_le.at:2613): ok     (0m0.004s 0m0.000s)
190. Read cell array with character arrays (mat5_compressed_read_le.at:2667): ok     (0m0.004s 0m0.000s)
191. Read cell array with empty structure arrays (mat5_compressed_read_le.at:2709): ok     (0m0.004s 0m0.000s)
192. Read cell array with structure arrays (numeric fields) (mat5_compressed_read_le.at:2770): ok     (0m0.004s 0m0.000s)
193. Read cell array with structure arrays (sparse fields) (mat5_compressed_read_le.at:3624): ok     (0m0.000s 0m0.004s)
194. Read cell array structure arrays (character fields) (mat5_compressed_read_le.at:3734): ok     (0m0.004s 0m0.000s)
195. Read slab of double-precision array (mat5_compressed_readslab_le.at:1): ok     (0m0.000s 0m0.004s)
196. Read slab of single-precision array (mat5_compressed_readslab_le.at:34): ok     (0m0.000s 0m0.004s)
197. Read slab of 64-bit integer array (mat5_compressed_readslab_le.at:67): ok     (0m0.004s 0m0.000s)
198. Read slab of 64-bit unsigned integer array (mat5_compressed_readslab_le.at:100): ok     (0m0.004s 0m0.000s)
199. Read slab of 32-bit integer array (mat5_compressed_readslab_le.at:133): ok     (0m0.008s 0m0.000s)
200. Read slab of 32-bit unsigned integer array (mat5_compressed_readslab_le.at:166): ok     (0m0.000s 0m0.004s)
201. Read slab of 16-bit integer array (mat5_compressed_readslab_le.at:199): ok     (0m0.004s 0m0.000s)
202. Read slab of 16-bit unsigned integer array (mat5_compressed_readslab_le.at:232): ok     (0m0.004s 0m0.000s)
203. Read slab of 8-bit integer array (mat5_compressed_readslab_le.at:265): ok     (0m0.004s 0m0.000s)
204. Read slab of 8-bit unsigned integer array (mat5_compressed_readslab_le.at:298): ok     (0m0.004s 0m0.000s)
205. Read slab of double-precision complex array (mat5_compressed_readslab_le.at:331): ok     (0m0.008s 0m0.000s)
206. Read slab of single-precision complex array (mat5_compressed_readslab_le.at:364): ok     (0m0.008s 0m0.000s)
207. Read slab of 64-bit integer complex array (mat5_compressed_readslab_le.at:397): ok     (0m0.004s 0m0.004s)
208. Read slab of 64-bit unsigned integer complex array (mat5_compressed_readslab_le.at:430): ok     (0m0.008s 0m0.000s)
209. Read slab of 32-bit integer complex array (mat5_compressed_readslab_le.at:463): ok     (0m0.008s 0m0.000s)
210. Read slab of 32-bit unsigned integer complex array (mat5_compressed_readslab_le.at:496): ok     (0m0.004s 0m0.004s)
211. Read slab of 16-bit integer complex array (mat5_compressed_readslab_le.at:529): ok     (0m0.004s 0m0.000s)
212. Read slab of 16-bit unsigned integer complex array (mat5_compressed_readslab_le.at:562): ok     (0m0.004s 0m0.000s)
213. Read slab of 8-bit integer complex array (mat5_compressed_readslab_le.at:595): ok     (0m0.004s 0m0.000s)
214. Read slab of 8-bit unsigned integer complex array (mat5_compressed_readslab_le.at:628): ok     (0m0.004s 0m0.000s)
215. Read linear slab of double-precision array (mat5_compressed_readslab_le.at:661): ok     (0m0.004s 0m0.000s)
216. Read linear slab of single-precision array (mat5_compressed_readslab_le.at:694): ok     (0m0.004s 0m0.000s)
217. Read linear slab of 64-bit integer array (mat5_compressed_readslab_le.at:727): ok     (0m0.004s 0m0.000s)
218. Read linear slab of 64-bit unsigned integer array (mat5_compressed_readslab_le.at:760): ok     (0m0.004s 0m0.000s)
219. Read linear slab of 32-bit integer array (mat5_compressed_readslab_le.at:793): ok     (0m0.000s 0m0.004s)
220. Read linear slab of 32-bit unsigned integer array (mat5_compressed_readslab_le.at:826): ok     (0m0.004s 0m0.000s)
221. Read linear slab of 16-bit integer array (mat5_compressed_readslab_le.at:859): ok     (0m0.004s 0m0.000s)
222. Read linear slab of 16-bit unsigned integer array (mat5_compressed_readslab_le.at:892): ok     (0m0.004s 0m0.000s)
223. Read linear slab of 8-bit integer array (mat5_compressed_readslab_le.at:925): ok     (0m0.004s 0m0.000s)
224. Read linear slab of 8-bit unsigned integer array (mat5_compressed_readslab_le.at:958): ok     (0m0.004s 0m0.000s)
225. Read linear slab of double-precision complex array (mat5_compressed_readslab_le.at:991): ok     (0m0.004s 0m0.000s)
226. Read linear slab of single-precision complex array (mat5_compressed_readslab_le.at:1024): ok     (0m0.008s 0m0.000s)
227. Read linear slab of 64-bit integer complex array (mat5_compressed_readslab_le.at:1057): ok     (0m0.008s 0m0.000s)
228. Read linear slab of 64-bit unsigned integer complex array (mat5_compressed_readslab_le.at:1090): ok     (0m0.004s 0m0.004s)
229. Read linear slab of 32-bit integer complex array (mat5_compressed_readslab_le.at:1123): ok     (0m0.004s 0m0.000s)
230. Read linear slab of 32-bit unsigned integer complex array (mat5_compressed_readslab_le.at:1156): ok     (0m0.004s 0m0.004s)
231. Read linear slab of 16-bit integer complex array (mat5_compressed_readslab_le.at:1189): ok     (0m0.004s 0m0.000s)
232. Read linear slab of 16-bit unsigned integer complex array (mat5_compressed_readslab_le.at:1222): ok     (0m0.004s 0m0.000s)
233. Read linear slab of 8-bit integer complex array (mat5_compressed_readslab_le.at:1255): ok     (0m0.004s 0m0.000s)
234. Read linear slab of 8-bit unsigned integer complex array (mat5_compressed_readslab_le.at:1288): ok     (0m0.004s 0m0.000s)
235. Read 2D double-precision array (mat5_uncompressed_read_be.at:27): ok     (0m0.000s 0m0.000s)
236. Read 2D single-precision array (mat5_uncompressed_read_be.at:44): ok     (0m0.000s 0m0.000s)
237. Read 2D 64-bit integer array (mat5_uncompressed_read_be.at:61): ok     (0m0.000s 0m0.000s)
238. Read 2D 64-bit unsigned integer array (mat5_uncompressed_read_be.at:78): ok     (0m0.000s 0m0.000s)
239. Read 2D 32-bit integer array (mat5_uncompressed_read_be.at:95): ok     (0m0.000s 0m0.000s)
240. Read 2D 32-bit unsigned integer array (mat5_uncompressed_read_be.at:112): ok     (0m0.000s 0m0.000s)
241. Read 2D 16-bit integer array (mat5_uncompressed_read_be.at:129): ok     (0m0.000s 0m0.000s)
242. Read 2D 16-bit unsigned integer array (mat5_uncompressed_read_be.at:146): ok     (0m0.000s 0m0.000s)
243. Read 2D 8-bit integer array (mat5_uncompressed_read_be.at:163): ok     (0m0.000s 0m0.000s)
244. Read 2D 8-bit unsigned integer array (mat5_uncompressed_read_be.at:180): ok     (0m0.000s 0m0.000s)
245. Read 2D double-precision complex array (mat5_uncompressed_read_be.at:197): ok     (0m0.000s 0m0.000s)
246. Read 2D single-precision complex array (mat5_uncompressed_read_be.at:214): ok     (0m0.000s 0m0.000s)
247. Read 2D 64-bit integer complex array (mat5_uncompressed_read_be.at:231): ok     (0m0.000s 0m0.000s)
248. Read 2D 64-bit unsigned integer complex array (mat5_uncompressed_read_be.at:248): ok     (0m0.000s 0m0.000s)
249. Read 2D 32-bit integer complex array (mat5_uncompressed_read_be.at:265): ok     (0m0.000s 0m0.000s)
250. Read 2D 32-bit unsigned integer complex array (mat5_uncompressed_read_be.at:282): ok     (0m0.000s 0m0.000s)
251. Read 2D 16-bit integer complex array (mat5_uncompressed_read_be.at:299): ok     (0m0.000s 0m0.000s)
252. Read 2D 16-bit unsigned integer complex array (mat5_uncompressed_read_be.at:316): ok     (0m0.000s 0m0.000s)
253. Read 2D 8-bit integer complex array (mat5_uncompressed_read_be.at:333): ok     (0m0.000s 0m0.000s)
254. Read 2D 8-bit unsigned integer complex array (mat5_uncompressed_read_be.at:350): ok     (0m0.000s 0m0.000s)
255. Read 2D logical array (mat5_uncompressed_read_be.at:367): ok     (0m0.000s 0m0.000s)
256. Read double-precision sparse array (mat5_uncompressed_read_be.at:385): ok     (0m0.000s 0m0.000s)
257. Read double-precision sparse complex array (mat5_uncompressed_read_be.at:403): ok     (0m0.000s 0m0.000s)
258. Read empty array (mat5_uncompressed_read_be.at:421): ok     (0m0.000s 0m0.000s)
259. Read 2D character array (mat5_uncompressed_read_be.at:434): ok     (0m0.000s 0m0.000s)
260. Read empty structure array (mat5_uncompressed_read_be.at:451): ok     (0m0.000s 0m0.000s)
261. Read empty structure array with fields (mat5_uncompressed_read_be.at:463): ok     (0m0.000s 0m0.000s)
262. Read structure array with empty fields (mat5_uncompressed_read_be.at:479): ok     (0m0.000s 0m0.000s)
263. Read structure array with double-precision fields (mat5_uncompressed_read_be.at:516): ok     (0m0.000s 0m0.000s)
264. Read structure array with single-precision fields (mat5_uncompressed_read_be.at:564): ok     (0m0.000s 0m0.000s)
265. Read structure array with 64-bit integer fields (mat5_uncompressed_read_be.at:612): ok     (0m0.000s 0m0.000s)
266. Read structure array with 64-bit unsigned integer fields (mat5_uncompressed_read_be.at:660): ok     (0m0.000s 0m0.000s)
267. Read structure array with 32-bit integer fields (mat5_uncompressed_read_be.at:708): ok     (0m0.000s 0m0.000s)
268. Read structure array with 32-bit unsigned integer fields (mat5_uncompressed_read_be.at:756): ok     (0m0.000s 0m0.000s)
269. Read structure array with 16-bit integer fields (mat5_uncompressed_read_be.at:804): ok     (0m0.000s 0m0.000s)
270. Read structure array with 16-bit unsigned integer fields (mat5_uncompressed_read_be.at:852): ok     (0m0.000s 0m0.000s)
271. Read structure array with 8-bit integer fields (mat5_uncompressed_read_be.at:900): ok     (0m0.000s 0m0.000s)
272. Read structure array with 8-bit unsigned integer fields (mat5_uncompressed_read_be.at:948): ok     (0m0.000s 0m0.000s)
273. Read structure array with complex double-precision fields (mat5_uncompressed_read_be.at:996): ok     (0m0.000s 0m0.000s)
274. Read structure array with complex single-precision fields (mat5_uncompressed_read_be.at:1044): ok     (0m0.000s 0m0.000s)
275. Read structure array with complex 64-bit integer fields (mat5_uncompressed_read_be.at:1092): ok     (0m0.000s 0m0.000s)
276. Read structure array with complex 64-bit unsigned integer fields (mat5_uncompressed_read_be.at:1140): ok     (0m0.000s 0m0.000s)
277. Read structure array with complex 32-bit integer fields (mat5_uncompressed_read_be.at:1188): ok     (0m0.000s 0m0.000s)
278. Read structure array with complex 32-bit unsigned integer fields (mat5_uncompressed_read_be.at:1236): ok     (0m0.000s 0m0.000s)
279. Read structure array with complex 16-bit integer fields (mat5_uncompressed_read_be.at:1284): ok     (0m0.000s 0m0.000s)
280. Read structure array with complex 16-bit unsigned integer fields (mat5_uncompressed_read_be.at:1332): ok     (0m0.000s 0m0.000s)
281. Read structure array with complex 8-bit integer fields (mat5_uncompressed_read_be.at:1380): ok     (0m0.000s 0m0.000s)
282. Read structure array with complex 8-bit unsigned integer fields (mat5_uncompressed_read_be.at:1428): ok     (0m0.000s 0m0.000s)
283. Read structure array with logical fields (mat5_uncompressed_read_be.at:1477): ok     (0m0.000s 0m0.000s)
284. Read structure array with double-precision sparse fields (mat5_uncompressed_read_be.at:1536): ok     (0m0.000s 0m0.000s)
285. Read structure array with complex double-precision sparse fields (mat5_uncompressed_read_be.at:1591): ok     (0m0.000s 0m0.000s)
286. Read structure array with character fields (mat5_uncompressed_read_be.at:1646): ok     (0m0.000s 0m0.000s)
287. Read empty cell array (mat5_uncompressed_read_be.at:1691): ok     (0m0.000s 0m0.000s)
288. Read cell array with empty arrays (mat5_uncompressed_read_be.at:1704): ok     (0m0.000s 0m0.000s)
289. Read cell array with double-precision arrays (mat5_uncompressed_read_be.at:1777): ok     (0m0.000s 0m0.000s)
290. Read cell array with single-precision arrays (mat5_uncompressed_read_be.at:1841): ok     (0m0.000s 0m0.000s)
291. Read cell array with 64-bit integer arrays (mat5_uncompressed_read_be.at:1905): ok     (0m0.000s 0m0.000s)
292. Read cell array with 64-bit unsigned integer arrays (mat5_uncompressed_read_be.at:1969): ok     (0m0.000s 0m0.000s)
293. Read cell array with 32-bit integer arrays (mat5_uncompressed_read_be.at:2033): ok     (0m0.000s 0m0.000s)
294. Read cell array with 32-bit unsigned integer arrays (mat5_uncompressed_read_be.at:2097): ok     (0m0.000s 0m0.000s)
295. Read cell array with 16-bit integer arrays (mat5_uncompressed_read_be.at:2161): ok     (0m0.000s 0m0.000s)
296. Read cell array with 16-bit unsigned integer arrays (mat5_uncompressed_read_be.at:2225): ok     (0m0.000s 0m0.000s)
297. Read cell array with 8-bit integer arrays (mat5_uncompressed_read_be.at:2289): ok     (0m0.000s 0m0.000s)
298. Read cell array with 8-bit unsigned integer arrays (mat5_uncompressed_read_be.at:2353): ok     (0m0.000s 0m0.000s)
299. Read cell array with logical arrays (mat5_uncompressed_read_be.at:2417): ok     (0m0.000s 0m0.000s)
300. Read cell array with double-precision sparse arrays (mat5_uncompressed_read_be.at:2472): ok     (0m0.000s 0m0.004s)
301. Read cell array with complex double-precision sparse arrays (mat5_uncompressed_read_be.at:2525): ok     (0m0.000s 0m0.000s)
302. Read cell array with character arrays (mat5_uncompressed_read_be.at:2578): ok     (0m0.000s 0m0.000s)
303. Read cell array with empty structure arrays (mat5_uncompressed_read_be.at:2619): ok     (0m0.000s 0m0.000s)
304. Read cell array with structure arrays (numeric fields) (mat5_uncompressed_read_be.at:2679): ok     (0m0.000s 0m0.004s)
305. Read cell array with structure arrays (sparse fields) (mat5_uncompressed_read_be.at:3532): ok     (0m0.000s 0m0.000s)
306. Read cell array structure arrays (character fields) (mat5_uncompressed_read_be.at:3641): ok     (0m0.000s 0m0.000s)
307. Read slab of 2D double-precision array (mat5_uncompressed_readslab_be.at:1): ok     (0m0.000s 0m0.000s)
308. Read slab of single-precision array (mat5_uncompressed_readslab_be.at:33): ok     (0m0.000s 0m0.000s)
309. Read slab of 64-bit integer array (mat5_uncompressed_readslab_be.at:65): ok     (0m0.000s 0m0.000s)
310. Read slab of 64-bit unsigned integer array (mat5_uncompressed_readslab_be.at:97): ok     (0m0.000s 0m0.000s)
311. Read slab of 32-bit integer array (mat5_uncompressed_readslab_be.at:129): ok     (0m0.000s 0m0.000s)
312. Read slab of 32-bit unsigned integer array (mat5_uncompressed_readslab_be.at:161): ok     (0m0.000s 0m0.000s)
313. Read slab of 16-bit integer array (mat5_uncompressed_readslab_be.at:193): ok     (0m0.000s 0m0.000s)
314. Read slab of 16-bit unsigned integer array (mat5_uncompressed_readslab_be.at:225): ok     (0m0.004s 0m0.000s)
315. Read slab of 8-bit integer array (mat5_uncompressed_readslab_be.at:257): ok     (0m0.004s 0m0.000s)
316. Read slab of 8-bit unsigned integer array (mat5_uncompressed_readslab_be.at:289): ok     (0m0.000s 0m0.000s)
317. Read slab of double-precision complex array (mat5_uncompressed_readslab_be.at:321): ok     (0m0.004s 0m0.000s)
318. Read slab of single-precision complex array (mat5_uncompressed_readslab_be.at:353): ok     (0m0.000s 0m0.000s)
319. Read slab of 64-bit integer complex array (mat5_uncompressed_readslab_be.at:385): ok     (0m0.000s 0m0.000s)
320. Read slab of 64-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:417): ok     (0m0.000s 0m0.000s)
321. Read slab of 32-bit integer complex array (mat5_uncompressed_readslab_be.at:449): ok     (0m0.000s 0m0.000s)
322. Read slab of 32-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:481): ok     (0m0.000s 0m0.000s)
323. Read slab of 16-bit integer complex array (mat5_uncompressed_readslab_be.at:513): ok     (0m0.000s 0m0.000s)
324. Read slab of 16-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:545): ok     (0m0.000s 0m0.000s)
325. Read slab of 8-bit integer complex array (mat5_uncompressed_readslab_be.at:577): ok     (0m0.000s 0m0.000s)
326. Read slab of 8-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:609): ok     (0m0.000s 0m0.000s)
327. Read linear slab of double-precision array (mat5_uncompressed_readslab_be.at:641): ok     (0m0.000s 0m0.000s)
328. Read linear slab of single-precision array (mat5_uncompressed_readslab_be.at:674): ok     (0m0.000s 0m0.000s)
329. Read linear slab of 64-bit integer array (mat5_uncompressed_readslab_be.at:707): ok     (0m0.004s 0m0.004s)
330. Read linear slab of 64-bit unsigned integer array (mat5_uncompressed_readslab_be.at:740): ok     (0m0.008s 0m0.000s)
331. Read linear slab of 32-bit integer array (mat5_uncompressed_readslab_be.at:773): ok     (0m0.004s 0m0.000s)
332. Read linear slab of 32-bit unsigned integer array (mat5_uncompressed_readslab_be.at:806): ok     (0m0.004s 0m0.000s)
333. Read linear slab of 16-bit integer array (mat5_uncompressed_readslab_be.at:839): ok     (0m0.004s 0m0.000s)
334. Read linear slab of 16-bit unsigned integer array (mat5_uncompressed_readslab_be.at:872): ok     (0m0.000s 0m0.004s)
335. Read linear slab of 8-bit integer array (mat5_uncompressed_readslab_be.at:905): ok     (0m0.000s 0m0.004s)
336. Read linear slab of 8-bit unsigned integer array (mat5_uncompressed_readslab_be.at:938): ok     (0m0.000s 0m0.004s)
337. Read linear slab of double-precision complex array (mat5_uncompressed_readslab_be.at:971): ok     (0m0.004s 0m0.000s)
338. Read linear slab of single-precision complex array (mat5_uncompressed_readslab_be.at:1004): ok     (0m0.004s 0m0.000s)
339. Read linear slab of 64-bit integer complex array (mat5_uncompressed_readslab_be.at:1037): ok     (0m0.000s 0m0.004s)
340. Read linear slab of 64-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:1070): ok     (0m0.000s 0m0.004s)
341. Read linear slab of 32-bit integer complex array (mat5_uncompressed_readslab_be.at:1103): ok     (0m0.000s 0m0.004s)
342. Read linear slab of 32-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:1136): ok     (0m0.004s 0m0.000s)
343. Read linear slab of 16-bit integer complex array (mat5_uncompressed_readslab_be.at:1169): ok     (0m0.000s 0m0.004s)
344. Read linear slab of 16-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:1202): ok     (0m0.004s 0m0.000s)
345. Read linear slab of 8-bit integer complex array (mat5_uncompressed_readslab_be.at:1235): ok     (0m0.004s 0m0.000s)
346. Read linear slab of 8-bit unsigned integer complex array (mat5_uncompressed_readslab_be.at:1268): ok     (0m0.000s 0m0.004s)
347. Read 2D double-precision array (mat5_compressed_read_be.at:27): ok     (0m0.004s 0m0.000s)
348. Read 2D single-precision array (mat5_compressed_read_be.at:45): ok     (0m0.000s 0m0.004s)
349. Read 2D 64-bit integer array (mat5_compressed_read_be.at:63): ok     (0m0.004s 0m0.000s)
350. Read 2D 64-bit unsigned integer array (mat5_compressed_read_be.at:81): ok     (0m0.000s 0m0.004s)
351. Read 2D 32-bit integer array (mat5_compressed_read_be.at:99): ok     (0m0.000s 0m0.004s)
352. Read 2D 32-bit unsigned integer array (mat5_compressed_read_be.at:117): ok     (0m0.004s 0m0.000s)
353. Read 2D 16-bit integer array (mat5_compressed_read_be.at:135): ok     (0m0.000s 0m0.004s)
354. Read 2D 16-bit unsigned integer array (mat5_compressed_read_be.at:153): ok     (0m0.004s 0m0.000s)
355. Read 2D 8-bit integer array (mat5_compressed_read_be.at:171): ok     (0m0.000s 0m0.004s)
356. Read 2D 8-bit unsigned integer array (mat5_compressed_read_be.at:189): ok     (0m0.000s 0m0.004s)
357. Read 2D double-precision complex array (mat5_compressed_read_be.at:207): ok     (0m0.000s 0m0.004s)
358. Read 2D single-precision complex array (mat5_compressed_read_be.at:225): ok     (0m0.004s 0m0.000s)
359. Read 2D 64-bit integer complex array (mat5_compressed_read_be.at:243): ok     (0m0.004s 0m0.000s)
360. Read 2D 64-bit unsigned integer complex array (mat5_compressed_read_be.at:261): ok     (0m0.000s 0m0.004s)
361. Read 2D 32-bit integer complex array (mat5_compressed_read_be.at:279): ok     (0m0.004s 0m0.000s)
362. Read 2D 32-bit unsigned integer complex array (mat5_compressed_read_be.at:297): ok     (0m0.004s 0m0.000s)
363. Read 2D 16-bit integer complex array (mat5_compressed_read_be.at:315): ok     (0m0.004s 0m0.000s)
364. Read 2D 16-bit unsigned integer complex array (mat5_compressed_read_be.at:333): ok     (0m0.000s 0m0.000s)
365. Read 2D 8-bit integer complex array (mat5_compressed_read_be.at:351): ok     (0m0.000s 0m0.000s)
366. Read 2D 8-bit unsigned integer complex array (mat5_compressed_read_be.at:369): ok     (0m0.000s 0m0.000s)
367. Read 2D logical array (mat5_compressed_read_be.at:387): ok     (0m0.004s 0m0.000s)
368. Read double-precision sparse array (mat5_compressed_read_be.at:406): ok     (0m0.000s 0m0.000s)
369. Read double-precision sparse complex array (mat5_compressed_read_be.at:425): ok     (0m0.000s 0m0.000s)
370. Read empty array (mat5_compressed_read_be.at:444): ok     (0m0.000s 0m0.000s)
371. Read 2D character array (mat5_compressed_read_be.at:458): ok     (0m0.000s 0m0.000s)
372. Read empty structure array (mat5_compressed_read_be.at:476): ok     (0m0.000s 0m0.000s)
373. Read empty structure array with fields (mat5_compressed_read_be.at:489): ok     (0m0.000s 0m0.000s)
374. Read structure array with empty fields (mat5_compressed_read_be.at:506): ok     (0m0.000s 0m0.000s)
375. Read structure array with double-precision fields (mat5_compressed_read_be.at:544): ok     (0m0.000s 0m0.000s)
376. Read structure array with single-precision fields (mat5_compressed_read_be.at:593): ok     (0m0.000s 0m0.000s)
377. Read structure array with 64-bit integer fields (mat5_compressed_read_be.at:642): ok     (0m0.000s 0m0.004s)
378. Read structure array with 64-bit unsigned integer fields (mat5_compressed_read_be.at:691): ok     (0m0.000s 0m0.000s)
379. Read structure array with 32-bit integer fields (mat5_compressed_read_be.at:740): ok     (0m0.000s 0m0.000s)
380. Read structure array with 32-bit unsigned integer fields (mat5_compressed_read_be.at:789): ok     (0m0.000s 0m0.000s)
381. Read structure array with 16-bit integer fields (mat5_compressed_read_be.at:838): ok     (0m0.000s 0m0.000s)
382. Read structure array with 16-bit unsigned integer fields (mat5_compressed_read_be.at:887): ok     (0m0.000s 0m0.000s)
383. Read structure array with 8-bit integer fields (mat5_compressed_read_be.at:936): ok     (0m0.000s 0m0.000s)
384. Read structure array with 8-bit unsigned integer fields (mat5_compressed_read_be.at:985): ok     (0m0.000s 0m0.000s)
385. Read structure array with complex double-precision fields (mat5_compressed_read_be.at:1034): ok     (0m0.000s 0m0.000s)
386. Read structure array with complex single-precision fields (mat5_compressed_read_be.at:1083): ok     (0m0.000s 0m0.000s)
387. Read structure array with complex 64-bit integer fields (mat5_compressed_read_be.at:1132): ok     (0m0.000s 0m0.000s)
388. Read structure array with complex 64-bit unsigned integer fields (mat5_compressed_read_be.at:1181): ok     (0m0.000s 0m0.000s)
389. Read structure array with complex 32-bit integer fields (mat5_compressed_read_be.at:1230): ok     (0m0.000s 0m0.000s)
390. Read structure array with complex 32-bit unsigned integer fields (mat5_compressed_read_be.at:1279): ok     (0m0.000s 0m0.000s)
391. Read structure array with complex 16-bit integer fields (mat5_compressed_read_be.at:1328): ok     (0m0.000s 0m0.000s)
392. Read structure array with complex 16-bit unsigned integer fields (mat5_compressed_read_be.at:1377): ok     (0m0.000s 0m0.000s)
393. Read structure array with complex 8-bit integer fields (mat5_compressed_read_be.at:1426): ok     (0m0.000s 0m0.004s)
394. Read structure array with complex 8-bit unsigned integer fields (mat5_compressed_read_be.at:1475): ok     (0m0.000s 0m0.000s)
395. Read structure array with logical fields (mat5_compressed_read_be.at:1525): ok     (0m0.004s 0m0.000s)
396. Read structure array with double-precision sparse fields (mat5_compressed_read_be.at:1585): ok     (0m0.000s 0m0.000s)
397. Read structure array with complex double-precision sparse fields (mat5_compressed_read_be.at:1641): ok     (0m0.000s 0m0.000s)
398. Read structure array with character fields (mat5_compressed_read_be.at:1697): ok     (0m0.000s 0m0.000s)
399. Read empty cell array (mat5_compressed_read_be.at:1743): ok     (0m0.004s 0m0.000s)
400. Read cell array with empty arrays (mat5_compressed_read_be.at:1757): ok     (0m0.000s 0m0.000s)
401. Read cell array with double-precision arrays (mat5_compressed_read_be.at:1831): ok     (0m0.000s 0m0.000s)
402. Read cell array with single-precision arrays (mat5_compressed_read_be.at:1896): ok     (0m0.000s 0m0.004s)
403. Read cell array with 64-bit integer arrays (mat5_compressed_read_be.at:1961): ok     (0m0.004s 0m0.000s)
404. Read cell array with 64-bit unsigned integer arrays (mat5_compressed_read_be.at:2026): ok     (0m0.000s 0m0.000s)
405. Read cell array with 32-bit integer arrays (mat5_compressed_read_be.at:2091): ok     (0m0.000s 0m0.004s)
406. Read cell array with 32-bit unsigned integer arrays (mat5_compressed_read_be.at:2156): ok     (0m0.004s 0m0.000s)
407. Read cell array with 16-bit integer arrays (mat5_compressed_read_be.at:2221): ok     (0m0.004s 0m0.000s)
408. Read cell array with 16-bit unsigned integer arrays (mat5_compressed_read_be.at:2286): ok     (0m0.000s 0m0.000s)
409. Read cell array with 8-bit integer arrays (mat5_compressed_read_be.at:2351): ok     (0m0.004s 0m0.000s)
410. Read cell array with 8-bit unsigned integer arrays (mat5_compressed_read_be.at:2416): ok     (0m0.004s 0m0.000s)
411. Read cell array with logical arrays (mat5_compressed_read_be.at:2481): ok     (0m0.004s 0m0.000s)
412. Read cell array with double-precision sparse arrays (mat5_compressed_read_be.at:2537): ok     (0m0.004s 0m0.000s)
413. Read cell array with complex double-precision sparse arrays (mat5_compressed_read_be.at:2591): ok     (0m0.000s 0m0.004s)
414. Read cell array with character arrays (mat5_compressed_read_be.at:2645): ok     (0m0.004s 0m0.000s)
415. Read cell array with empty structure arrays (mat5_compressed_read_be.at:2687): ok     (0m0.004s 0m0.000s)
416. Read cell array with structure arrays (numeric fields) (mat5_compressed_read_be.at:2748): ok     (0m0.000s 0m0.004s)
417. Read cell array with structure arrays (sparse fields) (mat5_compressed_read_be.at:3602): ok     (0m0.004s 0m0.000s)
418. Read cell array structure arrays (character fields) (mat5_compressed_read_be.at:3712): ok     (0m0.000s 0m0.004s)
419. Read slab of double-precision array (mat5_compressed_readslab_be.at:1): ok     (0m0.004s 0m0.000s)
420. Read slab of single-precision array (mat5_compressed_readslab_be.at:34): ok     (0m0.004s 0m0.000s)
421. Read slab of 64-bit integer array (mat5_compressed_readslab_be.at:67): ok     (0m0.000s 0m0.004s)
422. Read slab of 64-bit unsigned integer array (mat5_compressed_readslab_be.at:100): ok     (0m0.000s 0m0.004s)
423. Read slab of 32-bit integer array (mat5_compressed_readslab_be.at:133): ok     (0m0.004s 0m0.000s)
424. Read slab of 32-bit unsigned integer array (mat5_compressed_readslab_be.at:166): ok     (0m0.000s 0m0.004s)
425. Read slab of 16-bit integer array (mat5_compressed_readslab_be.at:199): ok     (0m0.004s 0m0.000s)
426. Read slab of 16-bit unsigned integer array (mat5_compressed_readslab_be.at:232): ok     (0m0.000s 0m0.004s)
427. Read slab of 8-bit integer array (mat5_compressed_readslab_be.at:265): ok     (0m0.004s 0m0.000s)
428. Read slab of 8-bit unsigned integer array (mat5_compressed_readslab_be.at:298): ok     (0m0.000s 0m0.004s)
429. Read slab of double-precision complex array (mat5_compressed_readslab_be.at:331): ok     (0m0.008s 0m0.000s)
430. Read slab of single-precision complex array (mat5_compressed_readslab_be.at:364): ok     (0m0.008s 0m0.000s)
431. Read slab of 64-bit integer complex array (mat5_compressed_readslab_be.at:397): ok     (0m0.008s 0m0.000s)
432. Read slab of 64-bit unsigned integer complex array (mat5_compressed_readslab_be.at:430): ok     (0m0.008s 0m0.000s)
433. Read slab of 32-bit integer complex array (mat5_compressed_readslab_be.at:463): ok     (0m0.008s 0m0.000s)
434. Read slab of 32-bit unsigned integer complex array (mat5_compressed_readslab_be.at:496): ok     (0m0.000s 0m0.008s)
435. Read slab of 16-bit integer complex array (mat5_compressed_readslab_be.at:529): ok     (0m0.004s 0m0.000s)
436. Read slab of 16-bit unsigned integer complex array (mat5_compressed_readslab_be.at:562): ok     (0m0.000s 0m0.004s)
437. Read slab of 8-bit integer complex array (mat5_compressed_readslab_be.at:595): ok     (0m0.004s 0m0.000s)
438. Read slab of 8-bit unsigned integer complex array (mat5_compressed_readslab_be.at:628): ok     (0m0.004s 0m0.000s)
439. Read linear slab of double-precision array (mat5_compressed_readslab_be.at:661): ok     (0m0.004s 0m0.000s)
440. Read linear slab of single-precision array (mat5_compressed_readslab_be.at:694): ok     (0m0.000s 0m0.004s)
441. Read linear slab of 64-bit integer array (mat5_compressed_readslab_be.at:727): ok     (0m0.004s 0m0.000s)
442. Read linear slab of 64-bit unsigned integer array (mat5_compressed_readslab_be.at:760): ok     (0m0.004s 0m0.000s)
443. Read linear slab of 32-bit integer array (mat5_compressed_readslab_be.at:793): ok     (0m0.004s 0m0.000s)
444. Read linear slab of 32-bit unsigned integer array (mat5_compressed_readslab_be.at:826): ok     (0m0.000s 0m0.004s)
445. Read linear slab of 16-bit integer array (mat5_compressed_readslab_be.at:859): ok     (0m0.004s 0m0.000s)
446. Read linear slab of 16-bit unsigned integer array (mat5_compressed_readslab_be.at:892): ok     (0m0.004s 0m0.000s)
447. Read linear slab of 8-bit integer array (mat5_compressed_readslab_be.at:925): ok     (0m0.004s 0m0.000s)
448. Read linear slab of 8-bit unsigned integer array (mat5_compressed_readslab_be.at:958): ok     (0m0.004s 0m0.000s)
449. Read linear slab of double-precision complex array (mat5_compressed_readslab_be.at:991): ok     (0m0.004s 0m0.000s)
450. Read linear slab of single-precision complex array (mat5_compressed_readslab_be.at:1024): ok     (0m0.004s 0m0.004s)
451. Read linear slab of 64-bit integer complex array (mat5_compressed_readslab_be.at:1057): ok     (0m0.008s 0m0.000s)
452. Read linear slab of 64-bit unsigned integer complex array (mat5_compressed_readslab_be.at:1090): ok     (0m0.008s 0m0.000s)
453. Read linear slab of 32-bit integer complex array (mat5_compressed_readslab_be.at:1123): ok     (0m0.004s 0m0.004s)
454. Read linear slab of 32-bit unsigned integer complex array (mat5_compressed_readslab_be.at:1156): ok     (0m0.004s 0m0.004s)
455. Read linear slab of 16-bit integer complex array (mat5_compressed_readslab_be.at:1189): ok     (0m0.004s 0m0.000s)
456. Read linear slab of 16-bit unsigned integer complex array (mat5_compressed_readslab_be.at:1222): ok     (0m0.000s 0m0.004s)
457. Read linear slab of 8-bit integer complex array (mat5_compressed_readslab_be.at:1255): ok     (0m0.004s 0m0.000s)
458. Read linear slab of 8-bit unsigned integer complex array (mat5_compressed_readslab_be.at:1288): ok     (0m0.004s 0m0.000s)
459. Read 2D double-precision array (mat73_read_le.at:27): skipped (mat73_read_le.at:28)
460. Read 2D single-precision array (mat73_read_le.at:45): skipped (mat73_read_le.at:46)
461. Read 2D 64-bit integer array (mat73_read_le.at:63): skipped (mat73_read_le.at:64)
462. Read 2D 64-bit unsigned integer array (mat73_read_le.at:81): skipped (mat73_read_le.at:82)
463. Read 2D 32-bit integer array (mat73_read_le.at:99): skipped (mat73_read_le.at:100)
464. Read 2D 32-bit unsigned integer array (mat73_read_le.at:117): skipped (mat73_read_le.at:118)
465. Read 2D 16-bit integer array (mat73_read_le.at:135): skipped (mat73_read_le.at:136)
466. Read 2D 16-bit unsigned integer array (mat73_read_le.at:153): skipped (mat73_read_le.at:154)
467. Read 2D 8-bit integer array (mat73_read_le.at:171): skipped (mat73_read_le.at:172)
468. Read 2D 8-bit unsigned integer array (mat73_read_le.at:189): skipped (mat73_read_le.at:190)
469. Read 2D double-precision complex array (mat73_read_le.at:207): skipped (mat73_read_le.at:208)
470. Read 2D single-precision complex array (mat73_read_le.at:225): skipped (mat73_read_le.at:226)
471. Read 2D 64-bit integer complex array (mat73_read_le.at:243): skipped (mat73_read_le.at:244)
472. Read 2D 64-bit unsigned integer complex array (mat73_read_le.at:261): skipped (mat73_read_le.at:262)
473. Read 2D 32-bit integer complex array (mat73_read_le.at:279): skipped (mat73_read_le.at:280)
474. Read 2D 32-bit unsigned integer complex array (mat73_read_le.at:297): skipped (mat73_read_le.at:298)
475. Read 2D 16-bit integer complex array (mat73_read_le.at:315): skipped (mat73_read_le.at:316)
476. Read 2D 16-bit unsigned integer complex array (mat73_read_le.at:333): skipped (mat73_read_le.at:334)
477. Read 2D 8-bit integer complex array (mat73_read_le.at:351): skipped (mat73_read_le.at:352)
478. Read 2D 8-bit unsigned integer complex array (mat73_read_le.at:369): skipped (mat73_read_le.at:370)
479. Read 2D logical array (mat73_read_le.at:387): skipped (mat73_read_le.at:388)
480. Read double-precision sparse array (mat73_read_le.at:406): skipped (mat73_read_le.at:407)
481. Read double-precision sparse complex array (mat73_read_le.at:425): skipped (mat73_read_le.at:426)
482. Read empty array (mat73_read_le.at:444): skipped (mat73_read_le.at:445)
483. Read 2D character array (mat73_read_le.at:456): skipped (mat73_read_le.at:457)
484. Read empty structure array (mat73_read_le.at:474): skipped (mat73_read_le.at:475)
485. Read empty structure array with fields (mat73_read_le.at:488): skipped (mat73_read_le.at:489)
486. Read structure array with empty fields (mat73_read_le.at:506): skipped (mat73_read_le.at:507)
487. Read structure array with double-precision fields (mat73_read_le.at:544): skipped (mat73_read_le.at:545)
488. Read structure array with single-precision fields (mat73_read_le.at:594): skipped (mat73_read_le.at:595)
489. Read structure array with 64-bit integer fields (mat73_read_le.at:644): skipped (mat73_read_le.at:645)
490. Read structure array with 64-bit unsigned integer fields (mat73_read_le.at:694): skipped (mat73_read_le.at:695)
491. Read structure array with 32-bit integer fields (mat73_read_le.at:744): skipped (mat73_read_le.at:745)
492. Read structure array with 32-bit unsigned integer fields (mat73_read_le.at:794): skipped (mat73_read_le.at:795)
493. Read structure array with 16-bit integer fields (mat73_read_le.at:844): skipped (mat73_read_le.at:845)
494. Read structure array with 16-bit unsigned integer fields (mat73_read_le.at:894): skipped (mat73_read_le.at:895)
495. Read structure array with 8-bit integer fields (mat73_read_le.at:944): skipped (mat73_read_le.at:945)
496. Read structure array with 8-bit unsigned integer fields (mat73_read_le.at:994): skipped (mat73_read_le.at:995)
497. Read structure array with complex double-precision fields (mat73_read_le.at:1044): skipped (mat73_read_le.at:1045)
498. Read structure array with complex single-precision fields (mat73_read_le.at:1094): skipped (mat73_read_le.at:1095)
499. Read structure array with complex 64-bit integer fields (mat73_read_le.at:1144): skipped (mat73_read_le.at:1145)
500. Read structure array with complex 64-bit unsigned integer fields (mat73_read_le.at:1194): skipped (mat73_read_le.at:1195)
501. Read structure array with complex 32-bit integer fields (mat73_read_le.at:1244): skipped (mat73_read_le.at:1245)
502. Read structure array with complex 32-bit unsigned integer fields (mat73_read_le.at:1294): skipped (mat73_read_le.at:1295)
503. Read structure array with complex 16-bit integer fields (mat73_read_le.at:1344): skipped (mat73_read_le.at:1345)
504. Read structure array with complex 16-bit unsigned integer fields (mat73_read_le.at:1394): skipped (mat73_read_le.at:1395)
505. Read structure array with complex 8-bit integer fields (mat73_read_le.at:1444): skipped (mat73_read_le.at:1445)
506. Read structure array with complex 8-bit unsigned integer fields (mat73_read_le.at:1494): skipped (mat73_read_le.at:1495)
507. Read structure array with logical fields (mat73_read_le.at:1544): skipped (mat73_read_le.at:1545)
508. Read structure array with double-precision sparse fields (mat73_read_le.at:1604): skipped (mat73_read_le.at:1605)
509. Read structure array with complex double-precision sparse fields (mat73_read_le.at:1660): skipped (mat73_read_le.at:1661)
510. Read structure array with character fields (mat73_read_le.at:1716): skipped (mat73_read_le.at:1717)
511. Read empty cell array (mat73_read_le.at:1762): skipped (mat73_read_le.at:1763)
512. Read cell array with empty arrays (mat73_read_le.at:1776): skipped (mat73_read_le.at:1777)
513. Read cell array with double-precision arrays (mat73_read_le.at:1830): skipped (mat73_read_le.at:1831)
514. Read cell array with single-precision arrays (mat73_read_le.at:1895): skipped (mat73_read_le.at:1896)
515. Read cell array with 64-bit integer arrays (mat73_read_le.at:1960): skipped (mat73_read_le.at:1961)
516. Read cell array with 64-bit unsigned integer arrays (mat73_read_le.at:2025): skipped (mat73_read_le.at:2026)
517. Read cell array with 32-bit integer arrays (mat73_read_le.at:2090): skipped (mat73_read_le.at:2091)
518. Read cell array with 32-bit unsigned integer arrays (mat73_read_le.at:2155): skipped (mat73_read_le.at:2156)
519. Read cell array with 16-bit integer arrays (mat73_read_le.at:2220): skipped (mat73_read_le.at:2221)
520. Read cell array with 16-bit unsigned integer arrays (mat73_read_le.at:2285): skipped (mat73_read_le.at:2286)
521. Read cell array with 8-bit integer arrays (mat73_read_le.at:2350): skipped (mat73_read_le.at:2351)
522. Read cell array with 8-bit unsigned integer arrays (mat73_read_le.at:2415): skipped (mat73_read_le.at:2416)
523. Read cell array with logical arrays (mat73_read_le.at:2480): skipped (mat73_read_le.at:2481)
524. Read cell array with double-precision sparse arrays (mat73_read_le.at:2536): skipped (mat73_read_le.at:2537)
525. Read cell array with complex double-precision sparse arrays (mat73_read_le.at:2590): skipped (mat73_read_le.at:2591)
526. Read cell array with character arrays (mat73_read_le.at:2644): skipped (mat73_read_le.at:2645)
527. Read cell array with empty structure arrays (mat73_read_le.at:2686): skipped (mat73_read_le.at:2687)
528. Read cell array with structure arrays (numeric fields) (mat73_read_le.at:2746): skipped (mat73_read_le.at:2747)
529. Read cell array with structure arrays (sparse fields) (mat73_read_le.at:3600): skipped (mat73_read_le.at:3601)
530. Read cell array structure arrays (character fields) (mat73_read_le.at:3710): skipped (mat73_read_le.at:3711)
531. Read slab of double-precision array (mat73_readslab_le.at:1): skipped (mat73_readslab_le.at:3)
532. Read slab of single-precision array (mat73_readslab_le.at:34): skipped (mat73_readslab_le.at:36)
533. Read slab of 64-bit integer array (mat73_readslab_le.at:67): skipped (mat73_readslab_le.at:69)
534. Read slab of 64-bit unsigned integer array (mat73_readslab_le.at:100): skipped (mat73_readslab_le.at:102)
535. Read slab of 32-bit integer array (mat73_readslab_le.at:133): skipped (mat73_readslab_le.at:135)
536. Read slab of 32-bit unsigned integer array (mat73_readslab_le.at:166): skipped (mat73_readslab_le.at:168)
537. Read slab of 16-bit integer array (mat73_readslab_le.at:199): skipped (mat73_readslab_le.at:201)
538. Read slab of 16-bit unsigned integer array (mat73_readslab_le.at:232): skipped (mat73_readslab_le.at:234)
539. Read slab of 8-bit integer array (mat73_readslab_le.at:265): skipped (mat73_readslab_le.at:267)
540. Read slab of 8-bit unsigned integer array (mat73_readslab_le.at:298): skipped (mat73_readslab_le.at:300)
541. Read slab of double-precision complex array (mat73_readslab_le.at:331): skipped (mat73_readslab_le.at:333)
542. Read slab of single-precision complex array (mat73_readslab_le.at:364): skipped (mat73_readslab_le.at:366)
543. Read slab of 64-bit integer complex array (mat73_readslab_le.at:397): skipped (mat73_readslab_le.at:399)
544. Read slab of 64-bit unsigned integer complex array (mat73_readslab_le.at:430): skipped (mat73_readslab_le.at:432)
545. Read slab of 32-bit integer complex array (mat73_readslab_le.at:463): skipped (mat73_readslab_le.at:465)
546. Read slab of 32-bit unsigned integer complex array (mat73_readslab_le.at:496): skipped (mat73_readslab_le.at:498)
547. Read slab of 16-bit integer complex array (mat73_readslab_le.at:529): skipped (mat73_readslab_le.at:531)
548. Read slab of 16-bit unsigned integer complex array (mat73_readslab_le.at:562): skipped (mat73_readslab_le.at:564)
549. Read slab of 8-bit integer complex array (mat73_readslab_le.at:595): skipped (mat73_readslab_le.at:597)
550. Read slab of 8-bit unsigned integer complex array (mat73_readslab_le.at:628): skipped (mat73_readslab_le.at:630)
551. Read linear slab of double-precision array (mat73_readslab_le.at:661): skipped (mat73_readslab_le.at:663)
552. Read linear slab of single-precision array (mat73_readslab_le.at:695): skipped (mat73_readslab_le.at:697)
553. Read linear slab of 64-bit integer array (mat73_readslab_le.at:729): skipped (mat73_readslab_le.at:731)
554. Read linear slab of 64-bit unsigned integer array (mat73_readslab_le.at:763): skipped (mat73_readslab_le.at:765)
555. Read linear slab of 32-bit integer array (mat73_readslab_le.at:797): skipped (mat73_readslab_le.at:799)
556. Read linear slab of 32-bit unsigned integer array (mat73_readslab_le.at:831): skipped (mat73_readslab_le.at:833)
557. Read linear slab of 16-bit integer array (mat73_readslab_le.at:865): skipped (mat73_readslab_le.at:867)
558. Read linear slab of 16-bit unsigned integer array (mat73_readslab_le.at:899): skipped (mat73_readslab_le.at:901)
559. Read linear slab of 8-bit integer array (mat73_readslab_le.at:933): skipped (mat73_readslab_le.at:935)
560. Read linear slab of 8-bit unsigned integer array (mat73_readslab_le.at:967): skipped (mat73_readslab_le.at:969)
561. Read linear slab of double-precision complex array (mat73_readslab_le.at:1001): skipped (mat73_readslab_le.at:1003)
562. Read linear slab of single-precision complex array (mat73_readslab_le.at:1035): skipped (mat73_readslab_le.at:1037)
563. Read linear slab of 64-bit integer complex array (mat73_readslab_le.at:1069): skipped (mat73_readslab_le.at:1071)
564. Read linear slab of 64-bit unsigned integer complex array (mat73_readslab_le.at:1103): skipped (mat73_readslab_le.at:1105)
565. Read linear slab of 32-bit integer complex array (mat73_readslab_le.at:1137): skipped (mat73_readslab_le.at:1139)
566. Read linear slab of 32-bit unsigned integer complex array (mat73_readslab_le.at:1171): skipped (mat73_readslab_le.at:1173)
567. Read linear slab of 16-bit integer complex array (mat73_readslab_le.at:1205): skipped (mat73_readslab_le.at:1207)
568. Read linear slab of 16-bit unsigned integer complex array (mat73_readslab_le.at:1239): skipped (mat73_readslab_le.at:1241)
569. Read linear slab of 8-bit integer complex array (mat73_readslab_le.at:1273): skipped (mat73_readslab_le.at:1275)
570. Read linear slab of 8-bit unsigned integer complex array (mat73_readslab_le.at:1307): skipped (mat73_readslab_le.at:1309)
571. Read 2D double-precision array (mat73_read_be.at:27): skipped (mat73_read_be.at:28)
572. Read 2D single-precision array (mat73_read_be.at:45): skipped (mat73_read_be.at:46)
573. Read 2D 64-bit integer array (mat73_read_be.at:63): skipped (mat73_read_be.at:64)
574. Read 2D 64-bit unsigned integer array (mat73_read_be.at:81): skipped (mat73_read_be.at:82)
575. Read 2D 32-bit integer array (mat73_read_be.at:99): skipped (mat73_read_be.at:100)
576. Read 2D 32-bit unsigned integer array (mat73_read_be.at:117): skipped (mat73_read_be.at:118)
577. Read 2D 16-bit integer array (mat73_read_be.at:135): skipped (mat73_read_be.at:136)
578. Read 2D 16-bit unsigned integer array (mat73_read_be.at:153): skipped (mat73_read_be.at:154)
579. Read 2D 8-bit integer array (mat73_read_be.at:171): skipped (mat73_read_be.at:172)
580. Read 2D 8-bit unsigned integer array (mat73_read_be.at:189): skipped (mat73_read_be.at:190)
581. Read 2D double-precision complex array (mat73_read_be.at:207): skipped (mat73_read_be.at:208)
582. Read 2D single-precision complex array (mat73_read_be.at:225): skipped (mat73_read_be.at:226)
583. Read 2D 64-bit integer complex array (mat73_read_be.at:243): skipped (mat73_read_be.at:244)
584. Read 2D 64-bit unsigned integer complex array (mat73_read_be.at:261): skipped (mat73_read_be.at:262)
585. Read 2D 32-bit integer complex array (mat73_read_be.at:279): skipped (mat73_read_be.at:280)
586. Read 2D 32-bit unsigned integer complex array (mat73_read_be.at:297): skipped (mat73_read_be.at:298)
587. Read 2D 16-bit integer complex array (mat73_read_be.at:315): skipped (mat73_read_be.at:316)
588. Read 2D 16-bit unsigned integer complex array (mat73_read_be.at:333): skipped (mat73_read_be.at:334)
589. Read 2D 8-bit integer complex array (mat73_read_be.at:351): skipped (mat73_read_be.at:352)
590. Read 2D 8-bit unsigned integer complex array (mat73_read_be.at:369): skipped (mat73_read_be.at:370)
591. Read 2D logical array (mat73_read_be.at:387): skipped (mat73_read_be.at:388)
592. Read double-precision sparse array (mat73_read_be.at:406): skipped (mat73_read_be.at:407)
593. Read double-precision sparse complex array (mat73_read_be.at:425): skipped (mat73_read_be.at:426)
594. Read empty array (mat73_read_be.at:444): skipped (mat73_read_be.at:445)
595. Read 2D character array (mat73_read_be.at:456): skipped (mat73_read_be.at:457)
596. Read empty structure array (mat73_read_be.at:474): skipped (mat73_read_be.at:475)
597. Read empty structure array with fields (mat73_read_be.at:487): skipped (mat73_read_be.at:488)
598. Read structure array with empty fields (mat73_read_be.at:504): skipped (mat73_read_be.at:505)
599. Read structure array with double-precision fields (mat73_read_be.at:541): skipped (mat73_read_be.at:542)
600. Read structure array with single-precision fields (mat73_read_be.at:590): skipped (mat73_read_be.at:591)
601. Read structure array with 64-bit integer fields (mat73_read_be.at:639): skipped (mat73_read_be.at:640)
602. Read structure array with 64-bit unsigned integer fields (mat73_read_be.at:688): skipped (mat73_read_be.at:689)
603. Read structure array with 32-bit integer fields (mat73_read_be.at:737): skipped (mat73_read_be.at:738)
604. Read structure array with 32-bit unsigned integer fields (mat73_read_be.at:786): skipped (mat73_read_be.at:787)
605. Read structure array with 16-bit integer fields (mat73_read_be.at:835): skipped (mat73_read_be.at:836)
606. Read structure array with 16-bit unsigned integer fields (mat73_read_be.at:884): skipped (mat73_read_be.at:885)
607. Read structure array with 8-bit integer fields (mat73_read_be.at:933): skipped (mat73_read_be.at:934)
608. Read structure array with 8-bit unsigned integer fields (mat73_read_be.at:982): skipped (mat73_read_be.at:983)
609. Read structure array with complex double-precision fields (mat73_read_be.at:1031): skipped (mat73_read_be.at:1032)
610. Read structure array with complex single-precision fields (mat73_read_be.at:1080): skipped (mat73_read_be.at:1081)
611. Read structure array with complex 64-bit integer fields (mat73_read_be.at:1129): skipped (mat73_read_be.at:1130)
612. Read structure array with complex 64-bit unsigned integer fields (mat73_read_be.at:1178): skipped (mat73_read_be.at:1179)
613. Read structure array with complex 32-bit integer fields (mat73_read_be.at:1227): skipped (mat73_read_be.at:1228)
614. Read structure array with complex 32-bit unsigned integer fields (mat73_read_be.at:1276): skipped (mat73_read_be.at:1277)
615. Read structure array with complex 16-bit integer fields (mat73_read_be.at:1325): skipped (mat73_read_be.at:1326)
616. Read structure array with complex 16-bit unsigned integer fields (mat73_read_be.at:1374): skipped (mat73_read_be.at:1375)
617. Read structure array with complex 8-bit integer fields (mat73_read_be.at:1423): skipped (mat73_read_be.at:1424)
618. Read structure array with complex 8-bit unsigned integer fields (mat73_read_be.at:1472): skipped (mat73_read_be.at:1473)
619. Read structure array with logical fields (mat73_read_be.at:1522): skipped (mat73_read_be.at:1523)
620. Read structure array with double-precision sparse fields (mat73_read_be.at:1582): skipped (mat73_read_be.at:1583)
621. Read structure array with complex double-precision sparse fields (mat73_read_be.at:1638): skipped (mat73_read_be.at:1639)
622. Read structure array with character fields (mat73_read_be.at:1694): skipped (mat73_read_be.at:1695)
623. Read cell array with empty arrays (mat73_read_be.at:1740): skipped (mat73_read_be.at:1741)
624. Read cell array with double-precision arrays (mat73_read_be.at:1794): skipped (mat73_read_be.at:1795)
625. Read cell array with single-precision arrays (mat73_read_be.at:1859): skipped (mat73_read_be.at:1860)
626. Read cell array with 64-bit integer arrays (mat73_read_be.at:1924): skipped (mat73_read_be.at:1925)
627. Read cell array with 64-bit unsigned integer arrays (mat73_read_be.at:1989): skipped (mat73_read_be.at:1990)
628. Read cell array with 32-bit integer arrays (mat73_read_be.at:2054): skipped (mat73_read_be.at:2055)
629. Read cell array with 32-bit unsigned integer arrays (mat73_read_be.at:2119): skipped (mat73_read_be.at:2120)
630. Read cell array with 16-bit integer arrays (mat73_read_be.at:2184): skipped (mat73_read_be.at:2185)
631. Read cell array with 16-bit unsigned integer arrays (mat73_read_be.at:2249): skipped (mat73_read_be.at:2250)
632. Read cell array with 8-bit integer arrays (mat73_read_be.at:2314): skipped (mat73_read_be.at:2315)
633. Read cell array with 8-bit unsigned integer arrays (mat73_read_be.at:2379): skipped (mat73_read_be.at:2380)
634. Read cell array with logical arrays (mat73_read_be.at:2444): skipped (mat73_read_be.at:2445)
635. Read cell array with double-precision sparse arrays (mat73_read_be.at:2500): skipped (mat73_read_be.at:2501)
636. Read cell array with complex double-precision sparse arrays (mat73_read_be.at:2554): skipped (mat73_read_be.at:2555)
637. Read cell array with character arrays (mat73_read_be.at:2608): skipped (mat73_read_be.at:2609)
638. Read cell array with empty structure arrays (mat73_read_be.at:2650): skipped (mat73_read_be.at:2651)
639. Read cell array with structure arrays (numeric fields) (mat73_read_be.at:2710): skipped (mat73_read_be.at:2711)
640. Read cell array with structure arrays (sparse fields) (mat73_read_be.at:3564): skipped (mat73_read_be.at:3565)
641. Read cell array structure arrays (character fields) (mat73_read_be.at:3674): skipped (mat73_read_be.at:3675)
642. Read slab of double-precision array (mat73_readslab_be.at:1): skipped (mat73_readslab_be.at:3)
643. Read slab of single-precision array (mat73_readslab_be.at:34): skipped (mat73_readslab_be.at:36)
644. Read slab of 64-bit integer array (mat73_readslab_be.at:67): skipped (mat73_readslab_be.at:69)
645. Read slab of 64-bit unsigned integer array (mat73_readslab_be.at:100): skipped (mat73_readslab_be.at:102)
646. Read slab of 32-bit integer array (mat73_readslab_be.at:133): skipped (mat73_readslab_be.at:135)
647. Read slab of 32-bit unsigned integer array (mat73_readslab_be.at:166): skipped (mat73_readslab_be.at:168)
648. Read slab of 16-bit integer array (mat73_readslab_be.at:199): skipped (mat73_readslab_be.at:201)
649. Read slab of 16-bit unsigned integer array (mat73_readslab_be.at:232): skipped (mat73_readslab_be.at:234)
650. Read slab of 8-bit integer array (mat73_readslab_be.at:265): skipped (mat73_readslab_be.at:267)
651. Read slab of 8-bit unsigned integer array (mat73_readslab_be.at:298): skipped (mat73_readslab_be.at:300)
652. Read slab of double-precision complex array (mat73_readslab_be.at:331): skipped (mat73_readslab_be.at:333)
653. Read slab of single-precision complex array (mat73_readslab_be.at:364): skipped (mat73_readslab_be.at:366)
654. Read slab of 64-bit integer complex array (mat73_readslab_be.at:397): skipped (mat73_readslab_be.at:399)
655. Read slab of 64-bit unsigned integer complex array (mat73_readslab_be.at:430): skipped (mat73_readslab_be.at:432)
656. Read slab of 32-bit integer complex array (mat73_readslab_be.at:463): skipped (mat73_readslab_be.at:465)
657. Read slab of 32-bit unsigned integer complex array (mat73_readslab_be.at:496): skipped (mat73_readslab_be.at:498)
658. Read slab of 16-bit integer complex array (mat73_readslab_be.at:529): skipped (mat73_readslab_be.at:531)
659. Read slab of 16-bit unsigned integer complex array (mat73_readslab_be.at:562): skipped (mat73_readslab_be.at:564)
660. Read slab of 8-bit integer complex array (mat73_readslab_be.at:595): skipped (mat73_readslab_be.at:597)
661. Read slab of 8-bit unsigned integer complex array (mat73_readslab_be.at:628): skipped (mat73_readslab_be.at:630)
662. Read linear slab of double-precision array (mat73_readslab_be.at:661): skipped (mat73_readslab_be.at:663)
663. Read linear slab of single-precision array (mat73_readslab_be.at:695): skipped (mat73_readslab_be.at:697)
664. Read linear slab of 64-bit integer array (mat73_readslab_be.at:729): skipped (mat73_readslab_be.at:731)
665. Read linear slab of 64-bit unsigned integer array (mat73_readslab_be.at:763): skipped (mat73_readslab_be.at:765)
666. Read linear slab of 32-bit integer array (mat73_readslab_be.at:797): skipped (mat73_readslab_be.at:799)
667. Read linear slab of 32-bit unsigned integer array (mat73_readslab_be.at:831): skipped (mat73_readslab_be.at:833)
668. Read linear slab of 16-bit integer array (mat73_readslab_be.at:865): skipped (mat73_readslab_be.at:867)
669. Read linear slab of 16-bit unsigned integer array (mat73_readslab_be.at:899): skipped (mat73_readslab_be.at:901)
670. Read linear slab of 8-bit integer array (mat73_readslab_be.at:933): skipped (mat73_readslab_be.at:935)
671. Read linear slab of 8-bit unsigned integer array (mat73_readslab_be.at:967): skipped (mat73_readslab_be.at:969)
672. Read linear slab of double-precision complex array (mat73_readslab_be.at:1001): skipped (mat73_readslab_be.at:1003)
673. Read linear slab of single-precision complex array (mat73_readslab_be.at:1035): skipped (mat73_readslab_be.at:1037)
674. Read linear slab of 64-bit integer complex array (mat73_readslab_be.at:1069): skipped (mat73_readslab_be.at:1071)
675. Read linear slab of 64-bit unsigned integer complex array (mat73_readslab_be.at:1103): skipped (mat73_readslab_be.at:1105)
676. Read linear slab of 32-bit integer complex array (mat73_readslab_be.at:1137): skipped (mat73_readslab_be.at:1139)
677. Read linear slab of 32-bit unsigned integer complex array (mat73_readslab_be.at:1171): skipped (mat73_readslab_be.at:1173)
678. Read linear slab of 16-bit integer complex array (mat73_readslab_be.at:1205): skipped (mat73_readslab_be.at:1207)
679. Read linear slab of 16-bit unsigned integer complex array (mat73_readslab_be.at:1239): skipped (mat73_readslab_be.at:1241)
680. Read linear slab of 8-bit integer complex array (mat73_readslab_be.at:1273): skipped (mat73_readslab_be.at:1275)
681. Read linear slab of 8-bit unsigned integer complex array (mat73_readslab_be.at:1307): skipped (mat73_readslab_be.at:1309)
682. Write 2D double-precision array (mat5_uncompressed_write.at:27): skipped (mat5_uncompressed_write.at:46)
683. Write 2D single-precision array (mat5_uncompressed_write.at:69): skipped (mat5_uncompressed_write.at:88)
684. Write 2D 64-bit integer array (mat5_uncompressed_write.at:111): skipped (mat5_uncompressed_write.at:131)
685. Write 2D 64-bit unsigned integer array (mat5_uncompressed_write.at:154): skipped (mat5_uncompressed_write.at:174)
686. Write 2D 32-bit integer array (mat5_uncompressed_write.at:197): skipped (mat5_uncompressed_write.at:216)
687. Write 2D 32-bit unsigned integer array (mat5_uncompressed_write.at:239): skipped (mat5_uncompressed_write.at:258)
688. Write 2D 16-bit integer array (mat5_uncompressed_write.at:281): skipped (mat5_uncompressed_write.at:300)
689. Write 2D 16-bit unsigned integer array (mat5_uncompressed_write.at:323): skipped (mat5_uncompressed_write.at:342)
690. Write 2D 8-bit integer array (mat5_uncompressed_write.at:365): skipped (mat5_uncompressed_write.at:384)
691. Write 2D 8-bit unsigned integer array (mat5_uncompressed_write.at:407): skipped (mat5_uncompressed_write.at:426)
692. Write 2D double-precision complex array (mat5_uncompressed_write.at:449): skipped (mat5_uncompressed_write.at:468)
693. Write 2D single-precision complex array (mat5_uncompressed_write.at:491): skipped (mat5_uncompressed_write.at:510)
694. Write 2D 64-bit integer complex array (mat5_uncompressed_write.at:533): skipped (mat5_uncompressed_write.at:553)
695. Write 2D 64-bit unsigned integer complex array (mat5_uncompressed_write.at:576): skipped (mat5_uncompressed_write.at:596)
696. Write 2D 32-bit integer complex array (mat5_uncompressed_write.at:619): skipped (mat5_uncompressed_write.at:638)
697. Write 2D 32-bit unsigned integer complex array (mat5_uncompressed_write.at:661): skipped (mat5_uncompressed_write.at:680)
698. Write 2D 16-bit integer complex array (mat5_uncompressed_write.at:703): skipped (mat5_uncompressed_write.at:722)
699. Write 2D 16-bit unsigned integer complex array (mat5_uncompressed_write.at:745): skipped (mat5_uncompressed_write.at:764)
700. Write 2D 8-bit integer complex array (mat5_uncompressed_write.at:787): skipped (mat5_uncompressed_write.at:806)
701. Write 2D 8-bit unsigned integer complex array (mat5_uncompressed_write.at:829): skipped (mat5_uncompressed_write.at:848)
702. Write 2D logical array (mat5_uncompressed_write.at:871): skipped (mat5_uncompressed_write.at:922)
703. Write 2D sparse double-precision array (mat5_uncompressed_write.at:960): skipped (mat5_uncompressed_write.at:999)
704. Write 2D sparse complex double-precision array (mat5_uncompressed_write.at:1026): skipped (mat5_uncompressed_write.at:1065)
705. Write 2D empty array (mat5_uncompressed_write.at:1092): skipped (mat5_uncompressed_write.at:1106)
706. Write character array (mat5_uncompressed_write.at:1130): skipped (mat5_uncompressed_write.at:1147)
707. Write empty structure array (mat5_uncompressed_write.at:1171): skipped (mat5_uncompressed_write.at:1261)
728. Write structure array with 2D logical fields (mat5_uncompressed_write.at:2935): skipped (mat5_uncompressed_write.at:2992)
729. Write empty cell array (mat5_uncompressed_write.at:3020): skipped (mat5_uncompressed_write.at:3056)
750. Write cell array with 2D logical fields (mat5_uncompressed_write.at:4623): skipped (mat5_uncompressed_write.at:4676)
751. Write 2D double-precision array (mat5_compressed_write.at:27): skipped (mat5_compressed_write.at:47)
752. Write 2D single-precision array (mat5_compressed_write.at:70): skipped (mat5_compressed_write.at:90)
753. Write 2D 64-bit integer array (mat5_compressed_write.at:113): skipped (mat5_compressed_write.at:134)
754. Write 2D 64-bit unsigned integer array (mat5_compressed_write.at:157): skipped (mat5_compressed_write.at:178)
755. Write 2D 32-bit integer array (mat5_compressed_write.at:201): skipped (mat5_compressed_write.at:221)
756. Write 2D 32-bit unsigned integer array (mat5_compressed_write.at:244): skipped (mat5_compressed_write.at:264)
757. Write 2D 16-bit integer array (mat5_compressed_write.at:287): skipped (mat5_compressed_write.at:307)
758. Write 2D 16-bit unsigned integer array (mat5_compressed_write.at:330): skipped (mat5_compressed_write.at:350)
759. Write 2D 8-bit integer array (mat5_compressed_write.at:373): skipped (mat5_compressed_write.at:393)
760. Write 2D 8-bit unsigned integer array (mat5_compressed_write.at:416): skipped (mat5_compressed_write.at:436)
771. Write 2D logical array (mat5_compressed_write.at:891): skipped (mat5_compressed_write.at:943)
772. Write 2D sparse double-precision array (mat5_compressed_write.at:981): skipped (mat5_compressed_write.at:1021)
774. Write 2D empty array (mat5_compressed_write.at:1115): skipped (mat5_compressed_write.at:1130)
775. Write character array (mat5_compressed_write.at:1154): skipped (mat5_compressed_write.at:1172)
776. Write empty structure array (mat5_compressed_write.at:1196): skipped (mat5_compressed_write.at:1287)
797. Write structure array with 2D logical fields (mat5_compressed_write.at:2981): skipped (mat5_compressed_write.at:3039)
798. Write empty cell array (mat5_compressed_write.at:3067): skipped (mat5_compressed_write.at:3104)
819. Write cell array with 2D logical fields (mat5_compressed_write.at:4691): skipped (mat5_compressed_write.at:4745)
820. Write 2D double-precision array (mat73_write.at:27): skipped (mat73_write.at:28)
821. Write 2D single-precision array (mat73_write.at:70): skipped (mat73_write.at:71)
822. Write 2D 64-bit integer array (mat73_write.at:113): skipped (mat73_write.at:114)
823. Write 2D 64-bit unsigned integer array (mat73_write.at:157): skipped (mat73_write.at:158)
824. Write 2D 32-bit integer array (mat73_write.at:201): skipped (mat73_write.at:202)
825. Write 2D 32-bit unsigned integer array (mat73_write.at:244): skipped (mat73_write.at:245)
826. Write 2D 16-bit integer array (mat73_write.at:287): skipped (mat73_write.at:288)
827. Write 2D 16-bit unsigned integer array (mat73_write.at:330): skipped (mat73_write.at:331)
828. Write 2D 8-bit integer array (mat73_write.at:373): skipped (mat73_write.at:374)
829. Write 2D 8-bit unsigned integer array (mat73_write.at:416): skipped (mat73_write.at:417)
830. Write 2D double-precision complex array (mat73_write.at:459): skipped (mat73_write.at:460)
831. Write 2D single-precision complex array (mat73_write.at:502): skipped (mat73_write.at:503)
832. Write 2D 64-bit integer complex array (mat73_write.at:545): skipped (mat73_write.at:546)
833. Write 2D 64-bit unsigned integer complex array (mat73_write.at:589): skipped (mat73_write.at:590)
834. Write 2D 32-bit integer complex array (mat73_write.at:633): skipped (mat73_write.at:634)
835. Write 2D 32-bit unsigned integer complex array (mat73_write.at:676): skipped (mat73_write.at:677)
836. Write 2D 16-bit integer complex array (mat73_write.at:719): skipped (mat73_write.at:720)
837. Write 2D 16-bit unsigned integer complex array (mat73_write.at:762): skipped (mat73_write.at:763)
838. Write 2D 8-bit integer complex array (mat73_write.at:805): skipped (mat73_write.at:806)
839. Write 2D 8-bit unsigned integer complex array (mat73_write.at:848): skipped (mat73_write.at:849)
840. Write 2D logical array (mat73_write.at:891): skipped (mat73_write.at:892)
841. Write 2D sparse double-precision array (mat73_write.at:981): skipped (mat73_write.at:982)
842. Write 2D sparse complex double-precision array (mat73_write.at:1048): skipped (mat73_write.at:1049)
843. Write 2D empty array (mat73_write.at:1115): skipped (mat73_write.at:1116)
844. Write character array (mat73_write.at:1152): skipped (mat73_write.at:1153)
845. Write empty structure array (mat73_write.at:1194): skipped (mat73_write.at:1195)
846. Write structure array with 2D double-precision fields (mat73_write.at:1310): skipped (mat73_write.at:1311)
847. Write structure array with 2D single-precision fields (mat73_write.at:1393): skipped (mat73_write.at:1394)
848. Write structure array with 2D 64-bit signed integer fields (mat73_write.at:1476): skipped (mat73_write.at:1477)
849. Write structure array with 2D 64-bit unsigned integer fields (mat73_write.at:1560): skipped (mat73_write.at:1561)
850. Write structure array with 2D 32-bit signed integer fields (mat73_write.at:1644): skipped (mat73_write.at:1645)
851. Write structure array with 2D 32-bit unsigned integer fields (mat73_write.at:1727): skipped (mat73_write.at:1728)
852. Write structure array with 2D 16-bit signed integer fields (mat73_write.at:1810): skipped (mat73_write.at:1811)
853. Write structure array with 2D 16-bit unsigned integer fields (mat73_write.at:1893): skipped (mat73_write.at:1894)
854. Write structure array with 2D 8-bit signed integer fields (mat73_write.at:1976): skipped (mat73_write.at:1977)
855. Write structure array with 2D 8-bit unsigned integer fields (mat73_write.at:2059): skipped (mat73_write.at:2060)
856. Write structure array with 2D double-precision complex fields (mat73_write.at:2142): skipped (mat73_write.at:2143)
857. Write structure array with 2D single-precision complex fields (mat73_write.at:2225): skipped (mat73_write.at:2226)
858. Write structure array with 2D 64-bit signed integer complex fields (mat73_write.at:2308): skipped (mat73_write.at:2309)
859. Write structure array with 2D 64-bit unsigned integer complex fields (mat73_write.at:2392): skipped (mat73_write.at:2393)
860. Write structure array with 2D 32-bit signed integer complex fields (mat73_write.at:2476): skipped (mat73_write.at:2477)
861. Write structure array with 2D 32-bit unsigned integer complex fields (mat73_write.at:2559): skipped (mat73_write.at:2560)
862. Write structure array with 2D 16-bit signed integer complex fields (mat73_write.at:2642): skipped (mat73_write.at:2643)
863. Write structure array with 2D 16-bit unsigned integer complex fields (mat73_write.at:2725): skipped (mat73_write.at:2726)
864. Write structure array with 2D 8-bit signed integer complex fields (mat73_write.at:2808): skipped (mat73_write.at:2809)
865. Write structure array with 2D 8-bit unsigned integer complex fields (mat73_write.at:2891): skipped (mat73_write.at:2892)
866. Write structure array with 2D logical fields (mat73_write.at:2974): skipped (mat73_write.at:2975)
867. Write empty cell array (mat73_write.at:3058): skipped (mat73_write.at:3059)
868. Write cell array with 2D double-precision fields (mat73_write.at:3114): skipped (mat73_write.at:3115)
869. Write cell array with 2D single-precision fields (mat73_write.at:3191): skipped (mat73_write.at:3192)
870. Write cell array with 2D 64-bit signed integer fields (mat73_write.at:3268): skipped (mat73_write.at:3270)
871. Write cell array with 2D 64-bit unsigned integer fields (mat73_write.at:3346): skipped (mat73_write.at:3348)
872. Write cell array with 2D 32-bit signed integer fields (mat73_write.at:3424): skipped (mat73_write.at:3425)
873. Write cell array with 2D 32-bit unsigned integer fields (mat73_write.at:3501): skipped (mat73_write.at:3502)
874. Write cell array with 2D 16-bit signed integer fields (mat73_write.at:3578): skipped (mat73_write.at:3579)
875. Write cell array with 2D 16-bit unsigned integer fields (mat73_write.at:3655): skipped (mat73_write.at:3656)
876. Write cell array with 2D 8-bit signed integer fields (mat73_write.at:3732): skipped (mat73_write.at:3733)
877. Write cell array with 2D 8-bit unsigned integer fields (mat73_write.at:3809): skipped (mat73_write.at:3810)
878. Write cell array with 2D double-precision complex fields (mat73_write.at:3886): skipped (mat73_write.at:3887)
879. Write cell array with 2D single-precision complex fields (mat73_write.at:3965): skipped (mat73_write.at:3966)
880. Write cell array with 2D 64-bit signed integer complex fields (mat73_write.at:4044): skipped (mat73_write.at:4046)
881. Write cell array with 2D 64-bit unsigned integer complex fields (mat73_write.at:4124): skipped (mat73_write.at:4126)
882. Write cell array with 2D 32-bit signed integer complex fields (mat73_write.at:4204): skipped (mat73_write.at:4205)
883. Write cell array with 2D 32-bit unsigned integer complex fields (mat73_write.at:4283): skipped (mat73_write.at:4284)
884. Write cell array with 2D 16-bit signed integer complex fields (mat73_write.at:4362): skipped (mat73_write.at:4363)
885. Write cell array with 2D 16-bit unsigned integer complex fields (mat73_write.at:4441): skipped (mat73_write.at:4442)
886. Write cell array with 2D 8-bit signed integer complex fields (mat73_write.at:4520): skipped (mat73_write.at:4521)
887. Write cell array with 2D 8-bit unsigned integer complex fields (mat73_write.at:4599): skipped (mat73_write.at:4600)
888. Write cell array with 2D logical fields (mat73_write.at:4678): skipped (mat73_write.at:4679)
889. Write 2D double-precision array (mat73_compressed_write.at:27): skipped (mat73_compressed_write.at:28)
890. Write 2D single-precision array (mat73_compressed_write.at:71): skipped (mat73_compressed_write.at:72)
891. Write 2D 64-bit integer array (mat73_compressed_write.at:115): skipped (mat73_compressed_write.at:116)
892. Write 2D 64-bit unsigned integer array (mat73_compressed_write.at:160): skipped (mat73_compressed_write.at:161)
893. Write 2D 32-bit integer array (mat73_compressed_write.at:205): skipped (mat73_compressed_write.at:206)
894. Write 2D 32-bit unsigned integer array (mat73_compressed_write.at:249): skipped (mat73_compressed_write.at:250)
895. Write 2D 16-bit integer array (mat73_compressed_write.at:293): skipped (mat73_compressed_write.at:294)
896. Write 2D 16-bit unsigned integer array (mat73_compressed_write.at:337): skipped (mat73_compressed_write.at:338)
897. Write 2D 8-bit integer array (mat73_compressed_write.at:381): skipped (mat73_compressed_write.at:382)
898. Write 2D 8-bit unsigned integer array (mat73_compressed_write.at:425): skipped (mat73_compressed_write.at:426)
899. Write 2D double-precision complex array (mat73_compressed_write.at:469): skipped (mat73_compressed_write.at:470)
900. Write 2D single-precision complex array (mat73_compressed_write.at:513): skipped (mat73_compressed_write.at:514)
901. Write 2D 64-bit integer complex array (mat73_compressed_write.at:557): skipped (mat73_compressed_write.at:558)
902. Write 2D 64-bit unsigned integer complex array (mat73_compressed_write.at:602): skipped (mat73_compressed_write.at:603)
903. Write 2D 32-bit integer complex array (mat73_compressed_write.at:647): skipped (mat73_compressed_write.at:648)
904. Write 2D 32-bit unsigned integer complex array (mat73_compressed_write.at:691): skipped (mat73_compressed_write.at:692)
905. Write 2D 16-bit integer complex array (mat73_compressed_write.at:735): skipped (mat73_compressed_write.at:736)
906. Write 2D 16-bit unsigned integer complex array (mat73_compressed_write.at:779): skipped (mat73_compressed_write.at:780)
907. Write 2D 8-bit integer complex array (mat73_compressed_write.at:823): skipped (mat73_compressed_write.at:824)
908. Write 2D 8-bit unsigned integer complex array (mat73_compressed_write.at:867): skipped (mat73_compressed_write.at:868)
909. Write 2D logical array (mat73_compressed_write.at:911): skipped (mat73_compressed_write.at:912)
910. Write 2D sparse double-precision array (mat73_compressed_write.at:1002): skipped (mat73_compressed_write.at:1003)
911. Write 2D sparse complex double-precision array (mat73_compressed_write.at:1070): skipped (mat73_compressed_write.at:1071)
912. Write 2D empty array (mat73_compressed_write.at:1138): skipped (mat73_compressed_write.at:1139)
913. Write character array (mat73_compressed_write.at:1176): skipped (mat73_compressed_write.at:1177)
914. Write empty structure array (mat73_compressed_write.at:1219): skipped (mat73_compressed_write.at:1220)
915. Write structure array with 2D double-precision fields (mat73_compressed_write.at:1336): skipped (mat73_compressed_write.at:1337)
916. Write structure array with 2D single-precision fields (mat73_compressed_write.at:1420): skipped (mat73_compressed_write.at:1421)
917. Write structure array with 2D 64-bit signed integer fields (mat73_compressed_write.at:1504): skipped (mat73_compressed_write.at:1505)
918. Write structure array with 2D 64-bit unsigned integer fields (mat73_compressed_write.at:1589): skipped (mat73_compressed_write.at:1590)
919. Write structure array with 2D 32-bit signed integer fields (mat73_compressed_write.at:1674): skipped (mat73_compressed_write.at:1675)
920. Write structure array with 2D 32-bit unsigned integer fields (mat73_compressed_write.at:1758): skipped (mat73_compressed_write.at:1759)
921. Write structure array with 2D 16-bit signed integer fields (mat73_compressed_write.at:1842): skipped (mat73_compressed_write.at:1843)
922. Write structure array with 2D 16-bit unsigned integer fields (mat73_compressed_write.at:1926): skipped (mat73_compressed_write.at:1927)
923. Write structure array with 2D 8-bit signed integer fields (mat73_compressed_write.at:2010): skipped (mat73_compressed_write.at:2011)
924. Write structure array with 2D 8-bit unsigned integer fields (mat73_compressed_write.at:2094): skipped (mat73_compressed_write.at:2095)
925. Write structure array with 2D double-precision complex fields (mat73_compressed_write.at:2178): skipped (mat73_compressed_write.at:2179)
926. Write structure array with 2D single-precision complex fields (mat73_compressed_write.at:2262): skipped (mat73_compressed_write.at:2263)
927. Write structure array with 2D 64-bit signed integer complex fields (mat73_compressed_write.at:2346): skipped (mat73_compressed_write.at:2347)
928. Write structure array with 2D 64-bit unsigned integer complex fields (mat73_compressed_write.at:2431): skipped (mat73_compressed_write.at:2432)
929. Write structure array with 2D 32-bit signed integer complex fields (mat73_compressed_write.at:2516): skipped (mat73_compressed_write.at:2517)
930. Write structure array with 2D 32-bit unsigned integer complex fields (mat73_compressed_write.at:2600): skipped (mat73_compressed_write.at:2601)
931. Write structure array with 2D 16-bit signed integer complex fields (mat73_compressed_write.at:2684): skipped (mat73_compressed_write.at:2685)
932. Write structure array with 2D 16-bit unsigned integer complex fields (mat73_compressed_write.at:2768): skipped (mat73_compressed_write.at:2769)
933. Write structure array with 2D 8-bit signed integer complex fields (mat73_compressed_write.at:2852): skipped (mat73_compressed_write.at:2853)
934. Write structure array with 2D 8-bit unsigned integer complex fields (mat73_compressed_write.at:2936): skipped (mat73_compressed_write.at:2937)
935. Write structure array with 2D logical fields (mat73_compressed_write.at:3020): skipped (mat73_compressed_write.at:3021)
936. Write empty cell array (mat73_compressed_write.at:3105): skipped (mat73_compressed_write.at:3106)
937. Write cell array with 2D double-precision fields (mat73_compressed_write.at:3162): skipped (mat73_compressed_write.at:3163)
938. Write cell array with 2D single-precision fields (mat73_compressed_write.at:3240): skipped (mat73_compressed_write.at:3241)
939. Write cell array with 2D 64-bit signed integer fields (mat73_compressed_write.at:3318): skipped (mat73_compressed_write.at:3320)
940. Write cell array with 2D 64-bit unsigned integer fields (mat73_compressed_write.at:3397): skipped (mat73_compressed_write.at:3399)
941. Write cell array with 2D 32-bit signed integer fields (mat73_compressed_write.at:3476): skipped (mat73_compressed_write.at:3477)
942. Write cell array with 2D 32-bit unsigned integer fields (mat73_compressed_write.at:3554): skipped (mat73_compressed_write.at:3555)
943. Write cell array with 2D 16-bit signed integer fields (mat73_compressed_write.at:3632): skipped (mat73_compressed_write.at:3633)
944. Write cell array with 2D 16-bit unsigned integer fields (mat73_compressed_write.at:3710): skipped (mat73_compressed_write.at:3711)
945. Write cell array with 2D 8-bit signed integer fields (mat73_compressed_write.at:3788): skipped (mat73_compressed_write.at:3789)
946. Write cell array with 2D 8-bit unsigned integer fields (mat73_compressed_write.at:3866): skipped (mat73_compressed_write.at:3867)
947. Write cell array with 2D double-precision complex fields (mat73_compressed_write.at:3944): skipped (mat73_compressed_write.at:3945)
948. Write cell array with 2D single-precision complex fields (mat73_compressed_write.at:4024): skipped (mat73_compressed_write.at:4025)
949. Write cell array with 2D 64-bit signed integer complex fields (mat73_compressed_write.at:4104): skipped (mat73_compressed_write.at:4106)
950. Write cell array with 2D 64-bit unsigned integer complex fields (mat73_compressed_write.at:4185): skipped (mat73_compressed_write.at:4187)
951. Write cell array with 2D 32-bit signed integer complex fields (mat73_compressed_write.at:4266): skipped (mat73_compressed_write.at:4267)
952. Write cell array with 2D 32-bit unsigned integer complex fields (mat73_compressed_write.at:4346): skipped (mat73_compressed_write.at:4347)
953. Write cell array with 2D 16-bit signed integer complex fields (mat73_compressed_write.at:4426): skipped (mat73_compressed_write.at:4427)
954. Write cell array with 2D 16-bit unsigned integer complex fields (mat73_compressed_write.at:4506): skipped (mat73_compressed_write.at:4507)
955. Write cell array with 2D 8-bit signed integer complex fields (mat73_compressed_write.at:4586): skipped (mat73_compressed_write.at:4587)
956. Write cell array with 2D 8-bit unsigned integer complex fields (mat73_compressed_write.at:4666): skipped (mat73_compressed_write.at:4667)
957. Write cell array with 2D logical fields (mat73_compressed_write.at:4746): skipped (mat73_compressed_write.at:4748)
958. Write 2D sparse single-precision array (mat5_uncompressed_extended_sparse.at:1): ok     (0m0.000s 0m0.000s)
959. Write 2D sparse 64-bit integer array (mat5_uncompressed_extended_sparse.at:43): ok     (0m0.000s 0m0.000s)
960. Write 2D sparse 64-bit unsigned integer array (mat5_uncompressed_extended_sparse.at:86): ok     (0m0.000s 0m0.000s)
961. Write 2D sparse 32-bit integer array (mat5_uncompressed_extended_sparse.at:129): ok     (0m0.000s 0m0.000s)
962. Write 2D sparse 32-bit unsigned integer array (mat5_uncompressed_extended_sparse.at:171): ok     (0m0.000s 0m0.000s)
963. Write 2D sparse 16-bit integer array (mat5_uncompressed_extended_sparse.at:213): ok     (0m0.000s 0m0.000s)
964. Write 2D sparse 16-bit unsigned integer array (mat5_uncompressed_extended_sparse.at:255): ok     (0m0.000s 0m0.000s)
965. Write 2D sparse 8-bit integer array (mat5_uncompressed_extended_sparse.at:297): ok     (0m0.000s 0m0.000s)
966. Write 2D sparse 8-bit unsigned integer array (mat5_uncompressed_extended_sparse.at:339): ok     (0m0.000s 0m0.000s)
967. Write 2D sparse complex single-precision array (mat5_uncompressed_extended_sparse.at:381): ok     (0m0.000s 0m0.000s)
968. Write 2D sparse complex 64-bit integer complex array (mat5_uncompressed_extended_sparse.at:423): ok     (0m0.000s 0m0.000s)
969. Write 2D sparse complex 64-bit unsigned integer complex array (mat5_uncompressed_extended_sparse.at:466): ok     (0m0.000s 0m0.000s)
970. Write 2D sparse complex 32-bit integer complex array (mat5_uncompressed_extended_sparse.at:509): ok     (0m0.000s 0m0.000s)
971. Write 2D sparse complex 32-bit unsigned integer complex array (mat5_uncompressed_extended_sparse.at:551): ok     (0m0.012s 0m0.008s)
972. Write 2D sparse complex 16-bit integer complex array (mat5_uncompressed_extended_sparse.at:593): ok     (0m0.000s 0m0.004s)
973. Write 2D sparse complex 16-bit unsigned integer complex array (mat5_uncompressed_extended_sparse.at:635): ok     (0m0.000s 0m0.000s)
974. Write 2D sparse complex 8-bit integer complex array (mat5_uncompressed_extended_sparse.at:677): ok     (0m0.000s 0m0.000s)
975. Write 2D sparse complex 8-bit unsigned integer complex array (mat5_uncompressed_extended_sparse.at:719): ok     (0m0.000s 0m0.000s)
976. Write 2D sparse single-precision array (mat5_compressed_extended_sparse.at:1): ok     (0m0.000s 0m0.000s)
977. Write 2D sparse 64-bit integer array (mat5_compressed_extended_sparse.at:44): ok     (0m0.000s 0m0.000s)
978. Write 2D sparse 64-bit unsigned integer array (mat5_compressed_extended_sparse.at:88): ok     (0m0.000s 0m0.000s)
979. Write 2D sparse 32-bit integer array (mat5_compressed_extended_sparse.at:132): ok     (0m0.000s 0m0.000s)
980. Write 2D sparse 32-bit unsigned integer array (mat5_compressed_extended_sparse.at:175): ok     (0m0.000s 0m0.000s)
981. Write 2D sparse 16-bit integer array (mat5_compressed_extended_sparse.at:218): ok     (0m0.000s 0m0.000s)
982. Write 2D sparse 16-bit unsigned integer array (mat5_compressed_extended_sparse.at:261): ok     (0m0.000s 0m0.000s)
983. Write 2D sparse 8-bit integer array (mat5_compressed_extended_sparse.at:304): ok     (0m0.000s 0m0.000s)
984. Write 2D sparse 8-bit unsigned integer array (mat5_compressed_extended_sparse.at:347): ok     (0m0.000s 0m0.000s)
994. Write 2D sparse single-precision array (mat73_uncompressed_extended_sparse.at:1): skipped (mat73_uncompressed_extended_sparse.at:3)
995. Write 2D sparse 64-bit integer array (mat73_uncompressed_extended_sparse.at:44): skipped (mat73_uncompressed_extended_sparse.at:47)
996. Write 2D sparse 64-bit unsigned integer array (mat73_uncompressed_extended_sparse.at:88): skipped (mat73_uncompressed_extended_sparse.at:91)
997. Write 2D sparse 32-bit integer array (mat73_uncompressed_extended_sparse.at:132): skipped (mat73_uncompressed_extended_sparse.at:134)
998. Write 2D sparse 32-bit unsigned integer array (mat73_uncompressed_extended_sparse.at:175): skipped (mat73_uncompressed_extended_sparse.at:177)
999. Write 2D sparse 16-bit integer array (mat73_uncompressed_extended_sparse.at:218): skipped (mat73_uncompressed_extended_sparse.at:220)
1000. Write 2D sparse 16-bit unsigned integer array (mat73_uncompressed_extended_sparse.at:261): skipped (mat73_uncompressed_extended_sparse.at:263)
1001. Write 2D sparse 8-bit integer array (mat73_uncompressed_extended_sparse.at:304): skipped (mat73_uncompressed_extended_sparse.at:306)
1002. Write 2D sparse 8-bit unsigned integer array (mat73_uncompressed_extended_sparse.at:347): skipped (mat73_uncompressed_extended_sparse.at:349)
1003. Write 2D sparse complex single-precision array (mat73_uncompressed_extended_sparse.at:390): skipped (mat73_uncompressed_extended_sparse.at:392)
1004. Write 2D sparse complex 64-bit integer complex array (mat73_uncompressed_extended_sparse.at:433): skipped (mat73_uncompressed_extended_sparse.at:436)
1005. Write 2D sparse complex 64-bit unsigned integer complex array (mat73_uncompressed_extended_sparse.at:477): skipped (mat73_uncompressed_extended_sparse.at:480)
1006. Write 2D sparse complex 32-bit integer complex array (mat73_uncompressed_extended_sparse.at:521): skipped (mat73_uncompressed_extended_sparse.at:523)
1007. Write 2D sparse complex 32-bit unsigned integer complex array (mat73_uncompressed_extended_sparse.at:564): skipped (mat73_uncompressed_extended_sparse.at:566)
1008. Write 2D sparse complex 16-bit integer complex array (mat73_uncompressed_extended_sparse.at:607): skipped (mat73_uncompressed_extended_sparse.at:609)
1009. Write 2D sparse complex 16-bit unsigned integer complex array (mat73_uncompressed_extended_sparse.at:650): skipped (mat73_uncompressed_extended_sparse.at:652)
1010. Write 2D sparse complex 8-bit integer complex array (mat73_uncompressed_extended_sparse.at:693): skipped (mat73_uncompressed_extended_sparse.at:695)
1011. Write 2D sparse complex 8-bit unsigned integer complex array (mat73_uncompressed_extended_sparse.at:736): skipped (mat73_uncompressed_extended_sparse.at:738)
1012. Write 2D sparse single-precision array (mat73_compressed_extended_sparse.at:1): skipped (mat73_compressed_extended_sparse.at:3)
1013. Write 2D sparse 64-bit integer array (mat73_compressed_extended_sparse.at:45): skipped (mat73_compressed_extended_sparse.at:48)
1014. Write 2D sparse 64-bit unsigned integer array (mat73_compressed_extended_sparse.at:90): skipped (mat73_compressed_extended_sparse.at:93)
1015. Write 2D sparse 32-bit integer array (mat73_compressed_extended_sparse.at:135): skipped (mat73_compressed_extended_sparse.at:137)
1016. Write 2D sparse 32-bit unsigned integer array (mat73_compressed_extended_sparse.at:179): skipped (mat73_compressed_extended_sparse.at:181)
1017. Write 2D sparse 16-bit integer array (mat73_compressed_extended_sparse.at:223): skipped (mat73_compressed_extended_sparse.at:225)
1018. Write 2D sparse 16-bit unsigned integer array (mat73_compressed_extended_sparse.at:267): skipped (mat73_compressed_extended_sparse.at:269)
1019. Write 2D sparse 8-bit integer array (mat73_compressed_extended_sparse.at:311): skipped (mat73_compressed_extended_sparse.at:313)
1020. Write 2D sparse 8-bit unsigned integer array (mat73_compressed_extended_sparse.at:355): skipped (mat73_compressed_extended_sparse.at:357)
1021. Write 2D sparse complex single-precision array (mat73_compressed_extended_sparse.at:399): skipped (mat73_compressed_extended_sparse.at:401)
1022. Write 2D sparse complex 64-bit integer complex array (mat73_compressed_extended_sparse.at:443): skipped (mat73_compressed_extended_sparse.at:446)
1023. Write 2D sparse complex 64-bit unsigned integer complex array (mat73_compressed_extended_sparse.at:488): skipped (mat73_compressed_extended_sparse.at:491)
1024. Write 2D sparse complex 32-bit integer complex array (mat73_compressed_extended_sparse.at:533): skipped (mat73_compressed_extended_sparse.at:535)
1025. Write 2D sparse complex 32-bit unsigned integer complex array (mat73_compressed_extended_sparse.at:577): skipped (mat73_compressed_extended_sparse.at:579)
1026. Write 2D sparse complex 16-bit integer complex array (mat73_compressed_extended_sparse.at:621): skipped (mat73_compressed_extended_sparse.at:623)
1027. Write 2D sparse complex 16-bit unsigned integer complex array (mat73_compressed_extended_sparse.at:665): skipped (mat73_compressed_extended_sparse.at:667)
1028. Write 2D sparse complex 8-bit integer complex array (mat73_compressed_extended_sparse.at:709): skipped (mat73_compressed_extended_sparse.at:711)
1029. Write 2D sparse complex 8-bit unsigned integer complex array (mat73_compressed_extended_sparse.at:753): skipped (mat73_compressed_extended_sparse.at:755)
1030. Create structure array (struct_api.at:27): ok     (0m0.000s 0m0.000s)
1031. Set structure field (struct_api.at:67): ok     (0m0.000s 0m0.000s)
1032. Get structure fieldnames (struct_api.at:158): ok     (0m0.000s 0m0.000s)
1033. Add fields to structure array (struct_api.at:174): ok     (0m0.000s 0m0.000s)
1035. Index structure via dimension slices (struct_api.at:491): ok     (0m0.000s 0m0.000s)
1036. Set cell array elements (cell_api.at:27): ok     (0m0.000s 0m0.000s)
1038. Index cell array via dimension slices (cell_api.at:265): ok     (0m0.000s 0m0.000s)
testsuite: ending at: Thu Jan 14 06:21:43 CET 2016
testsuite: test suite duration: 0h 0m 30s

## ------------- ##
## Test results. ##
## ------------- ##

ERROR: 594 tests were run,
102 failed unexpectedly.
444 tests were skipped.

## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
Failed tests:
MATIO 1.5.2 test suite: matio testsuite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

 708: mat5_uncompressed_write.at:1291 Write structure array with 2D double-precision fields
 709: mat5_uncompressed_write.at:1373 Write structure array with 2D single-precision fields
 710: mat5_uncompressed_write.at:1455 Write structure array with 2D 64-bit signed integer fields
 711: mat5_uncompressed_write.at:1538 Write structure array with 2D 64-bit unsigned integer fields
 712: mat5_uncompressed_write.at:1621 Write structure array with 2D 32-bit signed integer fields
 713: mat5_uncompressed_write.at:1703 Write structure array with 2D 32-bit unsigned integer fields
 714: mat5_uncompressed_write.at:1785 Write structure array with 2D 16-bit signed integer fields
 715: mat5_uncompressed_write.at:1867 Write structure array with 2D 16-bit unsigned integer fields
 716: mat5_uncompressed_write.at:1949 Write structure array with 2D 8-bit signed integer fields
 717: mat5_uncompressed_write.at:2031 Write structure array with 2D 8-bit unsigned integer fields
 718: mat5_uncompressed_write.at:2113 Write structure array with 2D double-precision complex fields
 719: mat5_uncompressed_write.at:2195 Write structure array with 2D single-precision complex fields
 720: mat5_uncompressed_write.at:2277 Write structure array with 2D 64-bit signed integer complex fields
 721: mat5_uncompressed_write.at:2360 Write structure array with 2D 64-bit unsigned integer complex fields
 722: mat5_uncompressed_write.at:2443 Write structure array with 2D 32-bit signed integer complex fields
 723: mat5_uncompressed_write.at:2525 Write structure array with 2D 32-bit unsigned integer complex fields
 724: mat5_uncompressed_write.at:2607 Write structure array with 2D 16-bit signed integer complex fields
 725: mat5_uncompressed_write.at:2689 Write structure array with 2D 16-bit unsigned integer complex fields
 726: mat5_uncompressed_write.at:2771 Write structure array with 2D 8-bit signed integer complex fields
 727: mat5_uncompressed_write.at:2853 Write structure array with 2D 8-bit unsigned integer complex fields
 730: mat5_uncompressed_write.at:3079 Write cell array with 2D double-precision fields
 731: mat5_uncompressed_write.at:3155 Write cell array with 2D single-precision fields
 732: mat5_uncompressed_write.at:3231 Write cell array with 2D 64-bit signed integer fields
 733: mat5_uncompressed_write.at:3308 Write cell array with 2D 64-bit unsigned integer fields
 734: mat5_uncompressed_write.at:3385 Write cell array with 2D 32-bit signed integer fields
 735: mat5_uncompressed_write.at:3461 Write cell array with 2D 32-bit unsigned integer fields
 736: mat5_uncompressed_write.at:3537 Write cell array with 2D 16-bit signed integer fields
 737: mat5_uncompressed_write.at:3613 Write cell array with 2D 16-bit unsigned integer fields
 738: mat5_uncompressed_write.at:3689 Write cell array with 2D 8-bit signed integer fields
 739: mat5_uncompressed_write.at:3765 Write cell array with 2D 8-bit unsigned integer fields
 740: mat5_uncompressed_write.at:3841 Write cell array with 2D double-precision complex fields
 741: mat5_uncompressed_write.at:3919 Write cell array with 2D single-precision complex fields
 742: mat5_uncompressed_write.at:3997 Write cell array with 2D 64-bit signed integer complex fields
 743: mat5_uncompressed_write.at:4076 Write cell array with 2D 64-bit unsigned integer complex fields
 744: mat5_uncompressed_write.at:4155 Write cell array with 2D 32-bit signed integer complex fields
 745: mat5_uncompressed_write.at:4233 Write cell array with 2D 32-bit unsigned integer complex fields
 746: mat5_uncompressed_write.at:4311 Write cell array with 2D 16-bit signed integer complex fields
 747: mat5_uncompressed_write.at:4389 Write cell array with 2D 16-bit unsigned integer complex fields
 748: mat5_uncompressed_write.at:4467 Write cell array with 2D 8-bit signed integer complex fields
 749: mat5_uncompressed_write.at:4545 Write cell array with 2D 8-bit unsigned integer complex fields
 761: mat5_compressed_write.at:459 Write 2D double-precision complex array
 762: mat5_compressed_write.at:502 Write 2D single-precision complex array
 763: mat5_compressed_write.at:545 Write 2D 64-bit integer complex array
 764: mat5_compressed_write.at:589 Write 2D 64-bit unsigned integer complex array
 765: mat5_compressed_write.at:633 Write 2D 32-bit integer complex array
 766: mat5_compressed_write.at:676 Write 2D 32-bit unsigned integer complex array
 767: mat5_compressed_write.at:719 Write 2D 16-bit integer complex array
 768: mat5_compressed_write.at:762 Write 2D 16-bit unsigned integer complex array
 769: mat5_compressed_write.at:805 Write 2D 8-bit integer complex array
 770: mat5_compressed_write.at:848 Write 2D 8-bit unsigned integer complex array
 773: mat5_compressed_write.at:1048 Write 2D sparse complex double-precision array
 777: mat5_compressed_write.at:1317 Write structure array with 2D double-precision fields
 778: mat5_compressed_write.at:1400 Write structure array with 2D single-precision fields
 779: mat5_compressed_write.at:1483 Write structure array with 2D 64-bit signed integer fields
 780: mat5_compressed_write.at:1567 Write structure array with 2D 64-bit unsigned integer fields
 781: mat5_compressed_write.at:1651 Write structure array with 2D 32-bit signed integer fields
 782: mat5_compressed_write.at:1734 Write structure array with 2D 32-bit unsigned integer fields
 783: mat5_compressed_write.at:1817 Write structure array with 2D 16-bit signed integer fields
 784: mat5_compressed_write.at:1900 Write structure array with 2D 16-bit unsigned integer fields
 785: mat5_compressed_write.at:1983 Write structure array with 2D 8-bit signed integer fields
 786: mat5_compressed_write.at:2066 Write structure array with 2D 8-bit unsigned integer fields
 787: mat5_compressed_write.at:2149 Write structure array with 2D double-precision complex fields
 788: mat5_compressed_write.at:2232 Write structure array with 2D single-precision complex fields
 789: mat5_compressed_write.at:2315 Write structure array with 2D 64-bit signed integer complex fields
 790: mat5_compressed_write.at:2399 Write structure array with 2D 64-bit unsigned integer complex fields
 791: mat5_compressed_write.at:2483 Write structure array with 2D 32-bit signed integer complex fields
 792: mat5_compressed_write.at:2566 Write structure array with 2D 32-bit unsigned integer complex fields
 793: mat5_compressed_write.at:2649 Write structure array with 2D 16-bit signed integer complex fields
 794: mat5_compressed_write.at:2732 Write structure array with 2D 16-bit unsigned integer complex fields
 795: mat5_compressed_write.at:2815 Write structure array with 2D 8-bit signed integer complex fields
 796: mat5_compressed_write.at:2898 Write structure array with 2D 8-bit unsigned integer complex fields
 799: mat5_compressed_write.at:3127 Write cell array with 2D double-precision fields
 800: mat5_compressed_write.at:3204 Write cell array with 2D single-precision fields
 801: mat5_compressed_write.at:3281 Write cell array with 2D 64-bit signed integer fields
 802: mat5_compressed_write.at:3359 Write cell array with 2D 64-bit unsigned integer fields
 803: mat5_compressed_write.at:3437 Write cell array with 2D 32-bit signed integer fields
 804: mat5_compressed_write.at:3514 Write cell array with 2D 32-bit unsigned integer fields
 805: mat5_compressed_write.at:3591 Write cell array with 2D 16-bit signed integer fields
 806: mat5_compressed_write.at:3668 Write cell array with 2D 16-bit unsigned integer fields
 807: mat5_compressed_write.at:3745 Write cell array with 2D 8-bit signed integer fields
 808: mat5_compressed_write.at:3822 Write cell array with 2D 8-bit unsigned integer fields
 809: mat5_compressed_write.at:3899 Write cell array with 2D double-precision complex fields
 810: mat5_compressed_write.at:3978 Write cell array with 2D single-precision complex fields
 811: mat5_compressed_write.at:4057 Write cell array with 2D 64-bit signed integer complex fields
 812: mat5_compressed_write.at:4137 Write cell array with 2D 64-bit unsigned integer complex fields
 813: mat5_compressed_write.at:4217 Write cell array with 2D 32-bit signed integer complex fields
 814: mat5_compressed_write.at:4296 Write cell array with 2D 32-bit unsigned integer complex fields
 815: mat5_compressed_write.at:4375 Write cell array with 2D 16-bit signed integer complex fields
 816: mat5_compressed_write.at:4454 Write cell array with 2D 16-bit unsigned integer complex fields
 817: mat5_compressed_write.at:4533 Write cell array with 2D 8-bit signed integer complex fields
 818: mat5_compressed_write.at:4612 Write cell array with 2D 8-bit unsigned integer complex fields
 985: mat5_compressed_extended_sparse.at:390 Write 2D sparse complex single-precision array
 986: mat5_compressed_extended_sparse.at:433 Write 2D sparse complex 64-bit integer complex array
 987: mat5_compressed_extended_sparse.at:477 Write 2D sparse complex 64-bit unsigned integer complex array
 988: mat5_compressed_extended_sparse.at:521 Write 2D sparse complex 32-bit integer complex array
 989: mat5_compressed_extended_sparse.at:564 Write 2D sparse complex 32-bit unsigned integer complex array
 990: mat5_compressed_extended_sparse.at:607 Write 2D sparse complex 16-bit integer complex array
 991: mat5_compressed_extended_sparse.at:650 Write 2D sparse complex 16-bit unsigned integer complex array
 992: mat5_compressed_extended_sparse.at:693 Write 2D sparse complex 8-bit integer complex array
 993: mat5_compressed_extended_sparse.at:736 Write 2D sparse complex 8-bit unsigned integer complex array
 1034: struct_api.at:223  Linearly index a structure
      struct_api
 1037: cell_api.at:132    Linearly index cell array
      cell_api

Skipped tests:
MATIO 1.5.2 test suite: matio testsuite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

 459: mat73_read_le.at:27 Read 2D double-precision array
 460: mat73_read_le.at:45 Read 2D single-precision array
 461: mat73_read_le.at:63 Read 2D 64-bit integer array
 462: mat73_read_le.at:81 Read 2D 64-bit unsigned integer array
 463: mat73_read_le.at:99 Read 2D 32-bit integer array
 464: mat73_read_le.at:117 Read 2D 32-bit unsigned integer array
 465: mat73_read_le.at:135 Read 2D 16-bit integer array
 466: mat73_read_le.at:153 Read 2D 16-bit unsigned integer array
 467: mat73_read_le.at:171 Read 2D 8-bit integer array
 468: mat73_read_le.at:189 Read 2D 8-bit unsigned integer array
 469: mat73_read_le.at:207 Read 2D double-precision complex array
 470: mat73_read_le.at:225 Read 2D single-precision complex array
 471: mat73_read_le.at:243 Read 2D 64-bit integer complex array
 472: mat73_read_le.at:261 Read 2D 64-bit unsigned integer complex array
 473: mat73_read_le.at:279 Read 2D 32-bit integer complex array
 474: mat73_read_le.at:297 Read 2D 32-bit unsigned integer complex array
 475: mat73_read_le.at:315 Read 2D 16-bit integer complex array
 476: mat73_read_le.at:333 Read 2D 16-bit unsigned integer complex array
 477: mat73_read_le.at:351 Read 2D 8-bit integer complex array
 478: mat73_read_le.at:369 Read 2D 8-bit unsigned integer complex array
 479: mat73_read_le.at:387 Read 2D logical array
 480: mat73_read_le.at:406 Read double-precision sparse array
 481: mat73_read_le.at:425 Read double-precision sparse complex array
 482: mat73_read_le.at:444 Read empty array
 483: mat73_read_le.at:456 Read 2D character array
 484: mat73_read_le.at:474 Read empty structure array
 485: mat73_read_le.at:488 Read empty structure array with fields
 486: mat73_read_le.at:506 Read structure array with empty fields
 487: mat73_read_le.at:544 Read structure array with double-precision fields
 488: mat73_read_le.at:594 Read structure array with single-precision fields
 489: mat73_read_le.at:644 Read structure array with 64-bit integer fields
 490: mat73_read_le.at:694 Read structure array with 64-bit unsigned integer fields
 491: mat73_read_le.at:744 Read structure array with 32-bit integer fields
 492: mat73_read_le.at:794 Read structure array with 32-bit unsigned integer fields
 493: mat73_read_le.at:844 Read structure array with 16-bit integer fields
 494: mat73_read_le.at:894 Read structure array with 16-bit unsigned integer fields
 495: mat73_read_le.at:944 Read structure array with 8-bit integer fields
 496: mat73_read_le.at:994 Read structure array with 8-bit unsigned integer fields
 497: mat73_read_le.at:1044 Read structure array with complex double-precision fields
 498: mat73_read_le.at:1094 Read structure array with complex single-precision fields
 499: mat73_read_le.at:1144 Read structure array with complex 64-bit integer fields
 500: mat73_read_le.at:1194 Read structure array with complex 64-bit unsigned integer fields
 501: mat73_read_le.at:1244 Read structure array with complex 32-bit integer fields
 502: mat73_read_le.at:1294 Read structure array with complex 32-bit unsigned integer fields
 503: mat73_read_le.at:1344 Read structure array with complex 16-bit integer fields
 504: mat73_read_le.at:1394 Read structure array with complex 16-bit unsigned integer fields
 505: mat73_read_le.at:1444 Read structure array with complex 8-bit integer fields
 506: mat73_read_le.at:1494 Read structure array with complex 8-bit unsigned integer fields
 507: mat73_read_le.at:1544 Read structure array with logical fields
 508: mat73_read_le.at:1604 Read structure array with double-precision sparse fields
 509: mat73_read_le.at:1660 Read structure array with complex double-precision sparse fields
 510: mat73_read_le.at:1716 Read structure array with character fields
 511: mat73_read_le.at:1762 Read empty cell array
 512: mat73_read_le.at:1776 Read cell array with empty arrays
 513: mat73_read_le.at:1830 Read cell array with double-precision arrays
 514: mat73_read_le.at:1895 Read cell array with single-precision arrays
 515: mat73_read_le.at:1960 Read cell array with 64-bit integer arrays
 516: mat73_read_le.at:2025 Read cell array with 64-bit unsigned integer arrays
 517: mat73_read_le.at:2090 Read cell array with 32-bit integer arrays
 518: mat73_read_le.at:2155 Read cell array with 32-bit unsigned integer arrays
 519: mat73_read_le.at:2220 Read cell array with 16-bit integer arrays
 520: mat73_read_le.at:2285 Read cell array with 16-bit unsigned integer arrays
 521: mat73_read_le.at:2350 Read cell array with 8-bit integer arrays
 522: mat73_read_le.at:2415 Read cell array with 8-bit unsigned integer arrays
 523: mat73_read_le.at:2480 Read cell array with logical arrays
 524: mat73_read_le.at:2536 Read cell array with double-precision sparse arrays
 525: mat73_read_le.at:2590 Read cell array with complex double-precision sparse arrays
 526: mat73_read_le.at:2644 Read cell array with character arrays
 527: mat73_read_le.at:2686 Read cell array with empty structure arrays
 528: mat73_read_le.at:2746 Read cell array with structure arrays (numeric fields)
 529: mat73_read_le.at:3600 Read cell array with structure arrays (sparse fields)
 530: mat73_read_le.at:3710 Read cell array structure arrays (character fields)
 531: mat73_readslab_le.at:1 Read slab of double-precision array
      mat73_readslab readslab
 532: mat73_readslab_le.at:34 Read slab of single-precision array
      mat73_readslab readslab
 533: mat73_readslab_le.at:67 Read slab of 64-bit integer array
      mat73_readslab readslab
 534: mat73_readslab_le.at:100 Read slab of 64-bit unsigned integer array
      mat73_readslab readslab
 535: mat73_readslab_le.at:133 Read slab of 32-bit integer array
      mat73_readslab readslab
 536: mat73_readslab_le.at:166 Read slab of 32-bit unsigned integer array
      mat73_readslab readslab
 537: mat73_readslab_le.at:199 Read slab of 16-bit integer array
      mat73_readslab readslab
 538: mat73_readslab_le.at:232 Read slab of 16-bit unsigned integer array
      mat73_readslab readslab
 539: mat73_readslab_le.at:265 Read slab of 8-bit integer array
      mat73_readslab readslab
 540: mat73_readslab_le.at:298 Read slab of 8-bit unsigned integer array
      mat73_readslab readslab
 541: mat73_readslab_le.at:331 Read slab of double-precision complex array
      mat73_readslab readslab
 542: mat73_readslab_le.at:364 Read slab of single-precision complex array
      mat73_readslab readslab
 543: mat73_readslab_le.at:397 Read slab of 64-bit integer complex array
      mat73_readslab readslab
 544: mat73_readslab_le.at:430 Read slab of 64-bit unsigned integer complex array
      mat73_readslab readslab
 545: mat73_readslab_le.at:463 Read slab of 32-bit integer complex array
      mat73_readslab readslab
 546: mat73_readslab_le.at:496 Read slab of 32-bit unsigned integer complex array
      mat73_readslab readslab
 547: mat73_readslab_le.at:529 Read slab of 16-bit integer complex array
      mat73_readslab readslab
 548: mat73_readslab_le.at:562 Read slab of 16-bit unsigned integer complex array
      mat73_readslab readslab
 549: mat73_readslab_le.at:595 Read slab of 8-bit integer complex array
      mat73_readslab readslab
 550: mat73_readslab_le.at:628 Read slab of 8-bit unsigned integer complex array
      mat73_readslab readslab
 551: mat73_readslab_le.at:661 Read linear slab of double-precision array
      mat73_readslab readslab read_data_linear
 552: mat73_readslab_le.at:695 Read linear slab of single-precision array
      mat73_readslab readslab read_data_linear
 553: mat73_readslab_le.at:729 Read linear slab of 64-bit integer array
      mat73_readslab readslab read_data_linear
 554: mat73_readslab_le.at:763 Read linear slab of 64-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 555: mat73_readslab_le.at:797 Read linear slab of 32-bit integer array
      mat73_readslab readslab read_data_linear
 556: mat73_readslab_le.at:831 Read linear slab of 32-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 557: mat73_readslab_le.at:865 Read linear slab of 16-bit integer array
      mat73_readslab readslab read_data_linear
 558: mat73_readslab_le.at:899 Read linear slab of 16-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 559: mat73_readslab_le.at:933 Read linear slab of 8-bit integer array
      mat73_readslab readslab read_data_linear
 560: mat73_readslab_le.at:967 Read linear slab of 8-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 561: mat73_readslab_le.at:1001 Read linear slab of double-precision complex array
      mat73_readslab readslab read_data_linear
 562: mat73_readslab_le.at:1035 Read linear slab of single-precision complex array
      mat73_readslab readslab read_data_linear
 563: mat73_readslab_le.at:1069 Read linear slab of 64-bit integer complex array
      mat73_readslab readslab read_data_linear
 564: mat73_readslab_le.at:1103 Read linear slab of 64-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 565: mat73_readslab_le.at:1137 Read linear slab of 32-bit integer complex array
      mat73_readslab readslab read_data_linear
 566: mat73_readslab_le.at:1171 Read linear slab of 32-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 567: mat73_readslab_le.at:1205 Read linear slab of 16-bit integer complex array
      mat73_readslab readslab read_data_linear
 568: mat73_readslab_le.at:1239 Read linear slab of 16-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 569: mat73_readslab_le.at:1273 Read linear slab of 8-bit integer complex array
      mat73_readslab readslab read_data_linear
 570: mat73_readslab_le.at:1307 Read linear slab of 8-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 571: mat73_read_be.at:27 Read 2D double-precision array
 572: mat73_read_be.at:45 Read 2D single-precision array
 573: mat73_read_be.at:63 Read 2D 64-bit integer array
 574: mat73_read_be.at:81 Read 2D 64-bit unsigned integer array
 575: mat73_read_be.at:99 Read 2D 32-bit integer array
 576: mat73_read_be.at:117 Read 2D 32-bit unsigned integer array
 577: mat73_read_be.at:135 Read 2D 16-bit integer array
 578: mat73_read_be.at:153 Read 2D 16-bit unsigned integer array
 579: mat73_read_be.at:171 Read 2D 8-bit integer array
 580: mat73_read_be.at:189 Read 2D 8-bit unsigned integer array
 581: mat73_read_be.at:207 Read 2D double-precision complex array
 582: mat73_read_be.at:225 Read 2D single-precision complex array
 583: mat73_read_be.at:243 Read 2D 64-bit integer complex array
 584: mat73_read_be.at:261 Read 2D 64-bit unsigned integer complex array
 585: mat73_read_be.at:279 Read 2D 32-bit integer complex array
 586: mat73_read_be.at:297 Read 2D 32-bit unsigned integer complex array
 587: mat73_read_be.at:315 Read 2D 16-bit integer complex array
 588: mat73_read_be.at:333 Read 2D 16-bit unsigned integer complex array
 589: mat73_read_be.at:351 Read 2D 8-bit integer complex array
 590: mat73_read_be.at:369 Read 2D 8-bit unsigned integer complex array
 591: mat73_read_be.at:387 Read 2D logical array
 592: mat73_read_be.at:406 Read double-precision sparse array
 593: mat73_read_be.at:425 Read double-precision sparse complex array
 594: mat73_read_be.at:444 Read empty array
 595: mat73_read_be.at:456 Read 2D character array
 596: mat73_read_be.at:474 Read empty structure array
 597: mat73_read_be.at:487 Read empty structure array with fields
 598: mat73_read_be.at:504 Read structure array with empty fields
 599: mat73_read_be.at:541 Read structure array with double-precision fields
 600: mat73_read_be.at:590 Read structure array with single-precision fields
 601: mat73_read_be.at:639 Read structure array with 64-bit integer fields
 602: mat73_read_be.at:688 Read structure array with 64-bit unsigned integer fields
 603: mat73_read_be.at:737 Read structure array with 32-bit integer fields
 604: mat73_read_be.at:786 Read structure array with 32-bit unsigned integer fields
 605: mat73_read_be.at:835 Read structure array with 16-bit integer fields
 606: mat73_read_be.at:884 Read structure array with 16-bit unsigned integer fields
 607: mat73_read_be.at:933 Read structure array with 8-bit integer fields
 608: mat73_read_be.at:982 Read structure array with 8-bit unsigned integer fields
 609: mat73_read_be.at:1031 Read structure array with complex double-precision fields
 610: mat73_read_be.at:1080 Read structure array with complex single-precision fields
 611: mat73_read_be.at:1129 Read structure array with complex 64-bit integer fields
 612: mat73_read_be.at:1178 Read structure array with complex 64-bit unsigned integer fields
 613: mat73_read_be.at:1227 Read structure array with complex 32-bit integer fields
 614: mat73_read_be.at:1276 Read structure array with complex 32-bit unsigned integer fields
 615: mat73_read_be.at:1325 Read structure array with complex 16-bit integer fields
 616: mat73_read_be.at:1374 Read structure array with complex 16-bit unsigned integer fields
 617: mat73_read_be.at:1423 Read structure array with complex 8-bit integer fields
 618: mat73_read_be.at:1472 Read structure array with complex 8-bit unsigned integer fields
 619: mat73_read_be.at:1522 Read structure array with logical fields
 620: mat73_read_be.at:1582 Read structure array with double-precision sparse fields
 621: mat73_read_be.at:1638 Read structure array with complex double-precision sparse fields
 622: mat73_read_be.at:1694 Read structure array with character fields
 623: mat73_read_be.at:1740 Read cell array with empty arrays
 624: mat73_read_be.at:1794 Read cell array with double-precision arrays
 625: mat73_read_be.at:1859 Read cell array with single-precision arrays
 626: mat73_read_be.at:1924 Read cell array with 64-bit integer arrays
 627: mat73_read_be.at:1989 Read cell array with 64-bit unsigned integer arrays
 628: mat73_read_be.at:2054 Read cell array with 32-bit integer arrays
 629: mat73_read_be.at:2119 Read cell array with 32-bit unsigned integer arrays
 630: mat73_read_be.at:2184 Read cell array with 16-bit integer arrays
 631: mat73_read_be.at:2249 Read cell array with 16-bit unsigned integer arrays
 632: mat73_read_be.at:2314 Read cell array with 8-bit integer arrays
 633: mat73_read_be.at:2379 Read cell array with 8-bit unsigned integer arrays
 634: mat73_read_be.at:2444 Read cell array with logical arrays
 635: mat73_read_be.at:2500 Read cell array with double-precision sparse arrays
 636: mat73_read_be.at:2554 Read cell array with complex double-precision sparse arrays
 637: mat73_read_be.at:2608 Read cell array with character arrays
 638: mat73_read_be.at:2650 Read cell array with empty structure arrays
 639: mat73_read_be.at:2710 Read cell array with structure arrays (numeric fields)
 640: mat73_read_be.at:3564 Read cell array with structure arrays (sparse fields)
 641: mat73_read_be.at:3674 Read cell array structure arrays (character fields)
 642: mat73_readslab_be.at:1 Read slab of double-precision array
      mat73_readslab readslab
 643: mat73_readslab_be.at:34 Read slab of single-precision array
      mat73_readslab readslab
 644: mat73_readslab_be.at:67 Read slab of 64-bit integer array
      mat73_readslab readslab
 645: mat73_readslab_be.at:100 Read slab of 64-bit unsigned integer array
      mat73_readslab readslab
 646: mat73_readslab_be.at:133 Read slab of 32-bit integer array
      mat73_readslab readslab
 647: mat73_readslab_be.at:166 Read slab of 32-bit unsigned integer array
      mat73_readslab readslab
 648: mat73_readslab_be.at:199 Read slab of 16-bit integer array
      mat73_readslab readslab
 649: mat73_readslab_be.at:232 Read slab of 16-bit unsigned integer array
      mat73_readslab readslab
 650: mat73_readslab_be.at:265 Read slab of 8-bit integer array
      mat73_readslab readslab
 651: mat73_readslab_be.at:298 Read slab of 8-bit unsigned integer array
      mat73_readslab readslab
 652: mat73_readslab_be.at:331 Read slab of double-precision complex array
      mat73_readslab readslab
 653: mat73_readslab_be.at:364 Read slab of single-precision complex array
      mat73_readslab readslab
 654: mat73_readslab_be.at:397 Read slab of 64-bit integer complex array
      mat73_readslab readslab
 655: mat73_readslab_be.at:430 Read slab of 64-bit unsigned integer complex array
      mat73_readslab readslab
 656: mat73_readslab_be.at:463 Read slab of 32-bit integer complex array
      mat73_readslab readslab
 657: mat73_readslab_be.at:496 Read slab of 32-bit unsigned integer complex array
      mat73_readslab readslab
 658: mat73_readslab_be.at:529 Read slab of 16-bit integer complex array
      mat73_readslab readslab
 659: mat73_readslab_be.at:562 Read slab of 16-bit unsigned integer complex array
      mat73_readslab readslab
 660: mat73_readslab_be.at:595 Read slab of 8-bit integer complex array
      mat73_readslab readslab
 661: mat73_readslab_be.at:628 Read slab of 8-bit unsigned integer complex array
      mat73_readslab readslab
 662: mat73_readslab_be.at:661 Read linear slab of double-precision array
      mat73_readslab readslab read_data_linear
 663: mat73_readslab_be.at:695 Read linear slab of single-precision array
      mat73_readslab readslab read_data_linear
 664: mat73_readslab_be.at:729 Read linear slab of 64-bit integer array
      mat73_readslab readslab read_data_linear
 665: mat73_readslab_be.at:763 Read linear slab of 64-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 666: mat73_readslab_be.at:797 Read linear slab of 32-bit integer array
      mat73_readslab readslab read_data_linear
 667: mat73_readslab_be.at:831 Read linear slab of 32-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 668: mat73_readslab_be.at:865 Read linear slab of 16-bit integer array
      mat73_readslab readslab read_data_linear
 669: mat73_readslab_be.at:899 Read linear slab of 16-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 670: mat73_readslab_be.at:933 Read linear slab of 8-bit integer array
      mat73_readslab readslab read_data_linear
 671: mat73_readslab_be.at:967 Read linear slab of 8-bit unsigned integer array
      mat73_readslab readslab read_data_linear
 672: mat73_readslab_be.at:1001 Read linear slab of double-precision complex array
      mat73_readslab readslab read_data_linear
 673: mat73_readslab_be.at:1035 Read linear slab of single-precision complex array
      mat73_readslab readslab read_data_linear
 674: mat73_readslab_be.at:1069 Read linear slab of 64-bit integer complex array
      mat73_readslab readslab read_data_linear
 675: mat73_readslab_be.at:1103 Read linear slab of 64-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 676: mat73_readslab_be.at:1137 Read linear slab of 32-bit integer complex array
      mat73_readslab readslab read_data_linear
 677: mat73_readslab_be.at:1171 Read linear slab of 32-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 678: mat73_readslab_be.at:1205 Read linear slab of 16-bit integer complex array
      mat73_readslab readslab read_data_linear
 679: mat73_readslab_be.at:1239 Read linear slab of 16-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 680: mat73_readslab_be.at:1273 Read linear slab of 8-bit integer complex array
      mat73_readslab readslab read_data_linear
 681: mat73_readslab_be.at:1307 Read linear slab of 8-bit unsigned integer complex array
      mat73_readslab readslab read_data_linear
 682: mat5_uncompressed_write.at:27 Write 2D double-precision array
 683: mat5_uncompressed_write.at:69 Write 2D single-precision array
 684: mat5_uncompressed_write.at:111 Write 2D 64-bit integer array
 685: mat5_uncompressed_write.at:154 Write 2D 64-bit unsigned integer array
 686: mat5_uncompressed_write.at:197 Write 2D 32-bit integer array
 687: mat5_uncompressed_write.at:239 Write 2D 32-bit unsigned integer array
 688: mat5_uncompressed_write.at:281 Write 2D 16-bit integer array
 689: mat5_uncompressed_write.at:323 Write 2D 16-bit unsigned integer array
 690: mat5_uncompressed_write.at:365 Write 2D 8-bit integer array
 691: mat5_uncompressed_write.at:407 Write 2D 8-bit unsigned integer array
 692: mat5_uncompressed_write.at:449 Write 2D double-precision complex array
 693: mat5_uncompressed_write.at:491 Write 2D single-precision complex array
 694: mat5_uncompressed_write.at:533 Write 2D 64-bit integer complex array
 695: mat5_uncompressed_write.at:576 Write 2D 64-bit unsigned integer complex array
 696: mat5_uncompressed_write.at:619 Write 2D 32-bit integer complex array
 697: mat5_uncompressed_write.at:661 Write 2D 32-bit unsigned integer complex array
 698: mat5_uncompressed_write.at:703 Write 2D 16-bit integer complex array
 699: mat5_uncompressed_write.at:745 Write 2D 16-bit unsigned integer complex array
 700: mat5_uncompressed_write.at:787 Write 2D 8-bit integer complex array
 701: mat5_uncompressed_write.at:829 Write 2D 8-bit unsigned integer complex array
 702: mat5_uncompressed_write.at:871 Write 2D logical array
 703: mat5_uncompressed_write.at:960 Write 2D sparse double-precision array
 704: mat5_uncompressed_write.at:1026 Write 2D sparse complex double-precision array
 705: mat5_uncompressed_write.at:1092 Write 2D empty array
 706: mat5_uncompressed_write.at:1130 Write character array
 707: mat5_uncompressed_write.at:1171 Write empty structure array
 728: mat5_uncompressed_write.at:2935 Write structure array with 2D logical fields
 729: mat5_uncompressed_write.at:3020 Write empty cell array
 750: mat5_uncompressed_write.at:4623 Write cell array with 2D logical fields
 751: mat5_compressed_write.at:27 Write 2D double-precision array
 752: mat5_compressed_write.at:70 Write 2D single-precision array
 753: mat5_compressed_write.at:113 Write 2D 64-bit integer array
 754: mat5_compressed_write.at:157 Write 2D 64-bit unsigned integer array
 755: mat5_compressed_write.at:201 Write 2D 32-bit integer array
 756: mat5_compressed_write.at:244 Write 2D 32-bit unsigned integer array
 757: mat5_compressed_write.at:287 Write 2D 16-bit integer array
 758: mat5_compressed_write.at:330 Write 2D 16-bit unsigned integer array
 759: mat5_compressed_write.at:373 Write 2D 8-bit integer array
 760: mat5_compressed_write.at:416 Write 2D 8-bit unsigned integer array
 771: mat5_compressed_write.at:891 Write 2D logical array
 772: mat5_compressed_write.at:981 Write 2D sparse double-precision array
 774: mat5_compressed_write.at:1115 Write 2D empty array
 775: mat5_compressed_write.at:1154 Write character array
 776: mat5_compressed_write.at:1196 Write empty structure array
 797: mat5_compressed_write.at:2981 Write structure array with 2D logical fields
 798: mat5_compressed_write.at:3067 Write empty cell array
 819: mat5_compressed_write.at:4691 Write cell array with 2D logical fields
 820: mat73_write.at:27  Write 2D double-precision array
 821: mat73_write.at:70  Write 2D single-precision array
 822: mat73_write.at:113 Write 2D 64-bit integer array
 823: mat73_write.at:157 Write 2D 64-bit unsigned integer array
 824: mat73_write.at:201 Write 2D 32-bit integer array
 825: mat73_write.at:244 Write 2D 32-bit unsigned integer array
 826: mat73_write.at:287 Write 2D 16-bit integer array
 827: mat73_write.at:330 Write 2D 16-bit unsigned integer array
 828: mat73_write.at:373 Write 2D 8-bit integer array
 829: mat73_write.at:416 Write 2D 8-bit unsigned integer array
 830: mat73_write.at:459 Write 2D double-precision complex array
 831: mat73_write.at:502 Write 2D single-precision complex array
 832: mat73_write.at:545 Write 2D 64-bit integer complex array
 833: mat73_write.at:589 Write 2D 64-bit unsigned integer complex array
 834: mat73_write.at:633 Write 2D 32-bit integer complex array
 835: mat73_write.at:676 Write 2D 32-bit unsigned integer complex array
 836: mat73_write.at:719 Write 2D 16-bit integer complex array
 837: mat73_write.at:762 Write 2D 16-bit unsigned integer complex array
 838: mat73_write.at:805 Write 2D 8-bit integer complex array
 839: mat73_write.at:848 Write 2D 8-bit unsigned integer complex array
 840: mat73_write.at:891 Write 2D logical array
 841: mat73_write.at:981 Write 2D sparse double-precision array
 842: mat73_write.at:1048 Write 2D sparse complex double-precision array
 843: mat73_write.at:1115 Write 2D empty array
 844: mat73_write.at:1152 Write character array
 845: mat73_write.at:1194 Write empty structure array
 846: mat73_write.at:1310 Write structure array with 2D double-precision fields
 847: mat73_write.at:1393 Write structure array with 2D single-precision fields
 848: mat73_write.at:1476 Write structure array with 2D 64-bit signed integer fields
 849: mat73_write.at:1560 Write structure array with 2D 64-bit unsigned integer fields
 850: mat73_write.at:1644 Write structure array with 2D 32-bit signed integer fields
 851: mat73_write.at:1727 Write structure array with 2D 32-bit unsigned integer fields
 852: mat73_write.at:1810 Write structure array with 2D 16-bit signed integer fields
 853: mat73_write.at:1893 Write structure array with 2D 16-bit unsigned integer fields
 854: mat73_write.at:1976 Write structure array with 2D 8-bit signed integer fields
 855: mat73_write.at:2059 Write structure array with 2D 8-bit unsigned integer fields
 856: mat73_write.at:2142 Write structure array with 2D double-precision complex fields
 857: mat73_write.at:2225 Write structure array with 2D single-precision complex fields
 858: mat73_write.at:2308 Write structure array with 2D 64-bit signed integer complex fields
 859: mat73_write.at:2392 Write structure array with 2D 64-bit unsigned integer complex fields
 860: mat73_write.at:2476 Write structure array with 2D 32-bit signed integer complex fields
 861: mat73_write.at:2559 Write structure array with 2D 32-bit unsigned integer complex fields
 862: mat73_write.at:2642 Write structure array with 2D 16-bit signed integer complex fields
 863: mat73_write.at:2725 Write structure array with 2D 16-bit unsigned integer complex fields
 864: mat73_write.at:2808 Write structure array with 2D 8-bit signed integer complex fields
 865: mat73_write.at:2891 Write structure array with 2D 8-bit unsigned integer complex fields
 866: mat73_write.at:2974 Write structure array with 2D logical fields
 867: mat73_write.at:3058 Write empty cell array
 868: mat73_write.at:3114 Write cell array with 2D double-precision fields
 869: mat73_write.at:3191 Write cell array with 2D single-precision fields
 870: mat73_write.at:3268 Write cell array with 2D 64-bit signed integer fields
 871: mat73_write.at:3346 Write cell array with 2D 64-bit unsigned integer fields
 872: mat73_write.at:3424 Write cell array with 2D 32-bit signed integer fields
 873: mat73_write.at:3501 Write cell array with 2D 32-bit unsigned integer fields
 874: mat73_write.at:3578 Write cell array with 2D 16-bit signed integer fields
 875: mat73_write.at:3655 Write cell array with 2D 16-bit unsigned integer fields
 876: mat73_write.at:3732 Write cell array with 2D 8-bit signed integer fields
 877: mat73_write.at:3809 Write cell array with 2D 8-bit unsigned integer fields
 878: mat73_write.at:3886 Write cell array with 2D double-precision complex fields
 879: mat73_write.at:3965 Write cell array with 2D single-precision complex fields
 880: mat73_write.at:4044 Write cell array with 2D 64-bit signed integer complex fields
 881: mat73_write.at:4124 Write cell array with 2D 64-bit unsigned integer complex fields
 882: mat73_write.at:4204 Write cell array with 2D 32-bit signed integer complex fields
 883: mat73_write.at:4283 Write cell array with 2D 32-bit unsigned integer complex fields
 884: mat73_write.at:4362 Write cell array with 2D 16-bit signed integer complex fields
 885: mat73_write.at:4441 Write cell array with 2D 16-bit unsigned integer complex fields
 886: mat73_write.at:4520 Write cell array with 2D 8-bit signed integer complex fields
 887: mat73_write.at:4599 Write cell array with 2D 8-bit unsigned integer complex fields
 888: mat73_write.at:4678 Write cell array with 2D logical fields
 889: mat73_compressed_write.at:27 Write 2D double-precision array
 890: mat73_compressed_write.at:71 Write 2D single-precision array
 891: mat73_compressed_write.at:115 Write 2D 64-bit integer array
 892: mat73_compressed_write.at:160 Write 2D 64-bit unsigned integer array
 893: mat73_compressed_write.at:205 Write 2D 32-bit integer array
 894: mat73_compressed_write.at:249 Write 2D 32-bit unsigned integer array
 895: mat73_compressed_write.at:293 Write 2D 16-bit integer array
 896: mat73_compressed_write.at:337 Write 2D 16-bit unsigned integer array
 897: mat73_compressed_write.at:381 Write 2D 8-bit integer array
 898: mat73_compressed_write.at:425 Write 2D 8-bit unsigned integer array
 899: mat73_compressed_write.at:469 Write 2D double-precision complex array
 900: mat73_compressed_write.at:513 Write 2D single-precision complex array
 901: mat73_compressed_write.at:557 Write 2D 64-bit integer complex array
 902: mat73_compressed_write.at:602 Write 2D 64-bit unsigned integer complex array
 903: mat73_compressed_write.at:647 Write 2D 32-bit integer complex array
 904: mat73_compressed_write.at:691 Write 2D 32-bit unsigned integer complex array
 905: mat73_compressed_write.at:735 Write 2D 16-bit integer complex array
 906: mat73_compressed_write.at:779 Write 2D 16-bit unsigned integer complex array
 907: mat73_compressed_write.at:823 Write 2D 8-bit integer complex array
 908: mat73_compressed_write.at:867 Write 2D 8-bit unsigned integer complex array
 909: mat73_compressed_write.at:911 Write 2D logical array
 910: mat73_compressed_write.at:1002 Write 2D sparse double-precision array
 911: mat73_compressed_write.at:1070 Write 2D sparse complex double-precision array
 912: mat73_compressed_write.at:1138 Write 2D empty array
 913: mat73_compressed_write.at:1176 Write character array
 914: mat73_compressed_write.at:1219 Write empty structure array
 915: mat73_compressed_write.at:1336 Write structure array with 2D double-precision fields
 916: mat73_compressed_write.at:1420 Write structure array with 2D single-precision fields
 917: mat73_compressed_write.at:1504 Write structure array with 2D 64-bit signed integer fields
 918: mat73_compressed_write.at:1589 Write structure array with 2D 64-bit unsigned integer fields
 919: mat73_compressed_write.at:1674 Write structure array with 2D 32-bit signed integer fields
 920: mat73_compressed_write.at:1758 Write structure array with 2D 32-bit unsigned integer fields
 921: mat73_compressed_write.at:1842 Write structure array with 2D 16-bit signed integer fields
 922: mat73_compressed_write.at:1926 Write structure array with 2D 16-bit unsigned integer fields
 923: mat73_compressed_write.at:2010 Write structure array with 2D 8-bit signed integer fields
 924: mat73_compressed_write.at:2094 Write structure array with 2D 8-bit unsigned integer fields
 925: mat73_compressed_write.at:2178 Write structure array with 2D double-precision complex fields
 926: mat73_compressed_write.at:2262 Write structure array with 2D single-precision complex fields
 927: mat73_compressed_write.at:2346 Write structure array with 2D 64-bit signed integer complex fields
 928: mat73_compressed_write.at:2431 Write structure array with 2D 64-bit unsigned integer complex fields
 929: mat73_compressed_write.at:2516 Write structure array with 2D 32-bit signed integer complex fields
 930: mat73_compressed_write.at:2600 Write structure array with 2D 32-bit unsigned integer complex fields
 931: mat73_compressed_write.at:2684 Write structure array with 2D 16-bit signed integer complex fields
 932: mat73_compressed_write.at:2768 Write structure array with 2D 16-bit unsigned integer complex fields
 933: mat73_compressed_write.at:2852 Write structure array with 2D 8-bit signed integer complex fields
 934: mat73_compressed_write.at:2936 Write structure array with 2D 8-bit unsigned integer complex fields
 935: mat73_compressed_write.at:3020 Write structure array with 2D logical fields
 936: mat73_compressed_write.at:3105 Write empty cell array
 937: mat73_compressed_write.at:3162 Write cell array with 2D double-precision fields
 938: mat73_compressed_write.at:3240 Write cell array with 2D single-precision fields
 939: mat73_compressed_write.at:3318 Write cell array with 2D 64-bit signed integer fields
 940: mat73_compressed_write.at:3397 Write cell array with 2D 64-bit unsigned integer fields
 941: mat73_compressed_write.at:3476 Write cell array with 2D 32-bit signed integer fields
 942: mat73_compressed_write.at:3554 Write cell array with 2D 32-bit unsigned integer fields
 943: mat73_compressed_write.at:3632 Write cell array with 2D 16-bit signed integer fields
 944: mat73_compressed_write.at:3710 Write cell array with 2D 16-bit unsigned integer fields
 945: mat73_compressed_write.at:3788 Write cell array with 2D 8-bit signed integer fields
 946: mat73_compressed_write.at:3866 Write cell array with 2D 8-bit unsigned integer fields
 947: mat73_compressed_write.at:3944 Write cell array with 2D double-precision complex fields
 948: mat73_compressed_write.at:4024 Write cell array with 2D single-precision complex fields
 949: mat73_compressed_write.at:4104 Write cell array with 2D 64-bit signed integer complex fields
 950: mat73_compressed_write.at:4185 Write cell array with 2D 64-bit unsigned integer complex fields
 951: mat73_compressed_write.at:4266 Write cell array with 2D 32-bit signed integer complex fields
 952: mat73_compressed_write.at:4346 Write cell array with 2D 32-bit unsigned integer complex fields
 953: mat73_compressed_write.at:4426 Write cell array with 2D 16-bit signed integer complex fields
 954: mat73_compressed_write.at:4506 Write cell array with 2D 16-bit unsigned integer complex fields
 955: mat73_compressed_write.at:4586 Write cell array with 2D 8-bit signed integer complex fields
 956: mat73_compressed_write.at:4666 Write cell array with 2D 8-bit unsigned integer complex fields
 957: mat73_compressed_write.at:4746 Write cell array with 2D logical fields
 994: mat73_uncompressed_extended_sparse.at:1 Write 2D sparse single-precision array
 995: mat73_uncompressed_extended_sparse.at:44 Write 2D sparse 64-bit integer array
 996: mat73_uncompressed_extended_sparse.at:88 Write 2D sparse 64-bit unsigned integer array
 997: mat73_uncompressed_extended_sparse.at:132 Write 2D sparse 32-bit integer array
 998: mat73_uncompressed_extended_sparse.at:175 Write 2D sparse 32-bit unsigned integer array
 999: mat73_uncompressed_extended_sparse.at:218 Write 2D sparse 16-bit integer array
 1000: mat73_uncompressed_extended_sparse.at:261 Write 2D sparse 16-bit unsigned integer array
 1001: mat73_uncompressed_extended_sparse.at:304 Write 2D sparse 8-bit integer array
 1002: mat73_uncompressed_extended_sparse.at:347 Write 2D sparse 8-bit unsigned integer array
 1003: mat73_uncompressed_extended_sparse.at:390 Write 2D sparse complex single-precision array
 1004: mat73_uncompressed_extended_sparse.at:433 Write 2D sparse complex 64-bit integer complex array
 1005: mat73_uncompressed_extended_sparse.at:477 Write 2D sparse complex 64-bit unsigned integer complex array
 1006: mat73_uncompressed_extended_sparse.at:521 Write 2D sparse complex 32-bit integer complex array
 1007: mat73_uncompressed_extended_sparse.at:564 Write 2D sparse complex 32-bit unsigned integer complex array
 1008: mat73_uncompressed_extended_sparse.at:607 Write 2D sparse complex 16-bit integer complex array
 1009: mat73_uncompressed_extended_sparse.at:650 Write 2D sparse complex 16-bit unsigned integer complex array
 1010: mat73_uncompressed_extended_sparse.at:693 Write 2D sparse complex 8-bit integer complex array
 1011: mat73_uncompressed_extended_sparse.at:736 Write 2D sparse complex 8-bit unsigned integer complex array
 1012: mat73_compressed_extended_sparse.at:1 Write 2D sparse single-precision array
 1013: mat73_compressed_extended_sparse.at:45 Write 2D sparse 64-bit integer array
 1014: mat73_compressed_extended_sparse.at:90 Write 2D sparse 64-bit unsigned integer array
 1015: mat73_compressed_extended_sparse.at:135 Write 2D sparse 32-bit integer array
 1016: mat73_compressed_extended_sparse.at:179 Write 2D sparse 32-bit unsigned integer array
 1017: mat73_compressed_extended_sparse.at:223 Write 2D sparse 16-bit integer array
 1018: mat73_compressed_extended_sparse.at:267 Write 2D sparse 16-bit unsigned integer array
 1019: mat73_compressed_extended_sparse.at:311 Write 2D sparse 8-bit integer array
 1020: mat73_compressed_extended_sparse.at:355 Write 2D sparse 8-bit unsigned integer array
 1021: mat73_compressed_extended_sparse.at:399 Write 2D sparse complex single-precision array
 1022: mat73_compressed_extended_sparse.at:443 Write 2D sparse complex 64-bit integer complex array
 1023: mat73_compressed_extended_sparse.at:488 Write 2D sparse complex 64-bit unsigned integer complex array
 1024: mat73_compressed_extended_sparse.at:533 Write 2D sparse complex 32-bit integer complex array
 1025: mat73_compressed_extended_sparse.at:577 Write 2D sparse complex 32-bit unsigned integer complex array
 1026: mat73_compressed_extended_sparse.at:621 Write 2D sparse complex 16-bit integer complex array
 1027: mat73_compressed_extended_sparse.at:665 Write 2D sparse complex 16-bit unsigned integer complex array
 1028: mat73_compressed_extended_sparse.at:709 Write 2D sparse complex 8-bit integer complex array
 1029: mat73_compressed_extended_sparse.at:753 Write 2D sparse complex 8-bit unsigned integer complex array

## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##

#                             -*- compilation -*-
708. mat5_uncompressed_write.at:1291: testing Write structure array with 2D double-precision fields ...
./mat5_uncompressed_write.at:1292: $builddir/test_mat -v 5 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1343: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:31.979247615 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/708/stdout	2016-01-14 06:21:31.991250408 +0100
@@ -20,9 +20,9 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 9.88131e-324 2.47033e-323 3.95253e-323 
+50 1.4822e-323 2.96439e-323 4.44659e-323 
+4.94066e-324 1.97626e-323 3.45846e-323 4.94066e-323 
 }
       Name: field2
       Rank: 2
708. mat5_uncompressed_write.at:1291: 708. Write structure array with 2D double-precision fields (mat5_uncompressed_write.at:1291): FAILED (mat5_uncompressed_write.at:1343)

#                             -*- compilation -*-
709. mat5_uncompressed_write.at:1373: testing Write structure array with 2D single-precision fields ...
./mat5_uncompressed_write.at:1374: $builddir/test_mat -v 5 -c single write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1425: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.019256719 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/709/stdout	2016-01-14 06:21:32.027258464 +0100
@@ -20,9 +20,9 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 4.2039e-45 8.40779e-45 
+50 1.4013e-45 5.60519e-45 9.80909e-45 
+0 2.8026e-45 7.00649e-45 1.12104e-44 
 }
       Name: field2
       Rank: 2
709. mat5_uncompressed_write.at:1373: 709. Write structure array with 2D single-precision fields (mat5_uncompressed_write.at:1373): FAILED (mat5_uncompressed_write.at:1425)

#                             -*- compilation -*-
710. mat5_uncompressed_write.at:1455: testing Write structure array with 2D 64-bit signed integer fields ...
./mat5_uncompressed_write.at:1457: $builddir/test_mat -v 5 -c int64 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1508: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.055264573 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/710/stdout	2016-01-14 06:21:32.067267191 +0100
@@ -20,9 +20,9 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 2 5 8 
+50 3 6 9 
+1 4 7 10 
 }
       Name: field2
       Rank: 2
710. mat5_uncompressed_write.at:1455: 710. Write structure array with 2D 64-bit signed integer fields (mat5_uncompressed_write.at:1455): FAILED (mat5_uncompressed_write.at:1508)

#                             -*- compilation -*-
711. mat5_uncompressed_write.at:1538: testing Write structure array with 2D 64-bit unsigned integer fields ...
./mat5_uncompressed_write.at:1540: $builddir/test_mat -v 5 -c uint64 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1591: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.091272427 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/711/stdout	2016-01-14 06:21:32.103275045 +0100
@@ -20,9 +20,9 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 1157159078456920585 2893323226570760737 6370168 
+50 1735880461161533969 3472044609275374121 578437695752307201 
+578437695752307201 2314601843866147353 6369841 1157159078456920585 
 }
       Name: field2
       Rank: 2
711. mat5_uncompressed_write.at:1538: 711. Write structure array with 2D 64-bit unsigned integer fields (mat5_uncompressed_write.at:1538): FAILED (mat5_uncompressed_write.at:1591)

#                             -*- compilation -*-
712. mat5_uncompressed_write.at:1621: testing Write structure array with 2D 32-bit signed integer fields ...
./mat5_uncompressed_write.at:1622: $builddir/test_mat -v 5 -c int32 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1673: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.127280281 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/712/stdout	2016-01-14 06:21:32.135282027 +0100
@@ -20,9 +20,9 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 3 6 
+50 1 4 7 
+3178496 2 5 8 
 }
       Name: field2
       Rank: 2
712. mat5_uncompressed_write.at:1621: 712. Write structure array with 2D 32-bit signed integer fields (mat5_uncompressed_write.at:1621): FAILED (mat5_uncompressed_write.at:1673)

#                             -*- compilation -*-
713. mat5_uncompressed_write.at:1703: testing Write structure array with 2D 32-bit unsigned integer fields ...
./mat5_uncompressed_write.at:1704: $builddir/test_mat -v 5 -c uint32 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1755: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.167289008 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/713/stdout	2016-01-14 06:21:32.175290753 +0100
@@ -20,9 +20,9 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 32639 0 1074266112 
+50 0 1073741824 0 
+4001571375 1072693248 0 1074790400 
 }
       Name: field2
       Rank: 2
713. mat5_uncompressed_write.at:1703: 713. Write structure array with 2D 32-bit unsigned integer fields (mat5_uncompressed_write.at:1703): FAILED (mat5_uncompressed_write.at:1755)

#                             -*- compilation -*-
714. mat5_uncompressed_write.at:1785: testing Write structure array with 2D 16-bit signed integer fields ...
./mat5_uncompressed_write.at:1786: $builddir/test_mat -v 5 -c int16 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1837: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.199295989 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/714/stdout	2016-01-14 06:21:32.207297735 +0100
@@ -20,9 +20,9 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 2 
+50 0 0 3 
+0 0 1 4 
 }
       Name: field2
       Rank: 2
714. mat5_uncompressed_write.at:1785: 714. Write structure array with 2D 16-bit signed integer fields (mat5_uncompressed_write.at:1785): FAILED (mat5_uncompressed_write.at:1837)

#                             -*- compilation -*-
715. mat5_uncompressed_write.at:1867: testing Write structure array with 2D 16-bit unsigned integer fields ...
./mat5_uncompressed_write.at:1868: $builddir/test_mat -v 5 -c uint16 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:1919: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.239304716 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/715/stdout	2016-01-14 06:21:32.247306462 +0100
@@ -20,9 +20,9 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 16256 
+50 0 0 0 
+0 0 0 16384 
 }
       Name: field2
       Rank: 2
715. mat5_uncompressed_write.at:1867: 715. Write structure array with 2D 16-bit unsigned integer fields (mat5_uncompressed_write.at:1867): FAILED (mat5_uncompressed_write.at:1919)

#                             -*- compilation -*-
716. mat5_uncompressed_write.at:1949: testing Write structure array with 2D 8-bit signed integer fields ...
./mat5_uncompressed_write.at:1950: $builddir/test_mat -v 5 -c int8 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2001: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.275312570 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/716/stdout	2016-01-14 06:21:32.283314316 +0100
@@ -20,9 +20,9 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 51 
+50 0 0 97 
+97 0 120 0 
 }
       Name: field2
       Rank: 2
716. mat5_uncompressed_write.at:1949: 716. Write structure array with 2D 8-bit signed integer fields (mat5_uncompressed_write.at:1949): FAILED (mat5_uncompressed_write.at:2001)

#                             -*- compilation -*-
717. mat5_uncompressed_write.at:2031: testing Write structure array with 2D 8-bit unsigned integer fields ...
./mat5_uncompressed_write.at:2032: $builddir/test_mat -v 5 -c uint8 write_struct_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2083: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.311320424 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/717/stdout	2016-01-14 06:21:32.319322170 +0100
@@ -20,9 +20,9 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 92 0 80 
+50 253 0 1 
+243 127 0 55 
 }
       Name: field2
       Rank: 2
717. mat5_uncompressed_write.at:2031: 717. Write structure array with 2D 8-bit unsigned integer fields (mat5_uncompressed_write.at:2031): FAILED (mat5_uncompressed_write.at:2083)

#                             -*- compilation -*-
718. mat5_uncompressed_write.at:2113: testing Write structure array with 2D double-precision complex fields ...
./mat5_uncompressed_write.at:2114: $builddir/test_mat -v 5 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2165: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.351329151 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/718/stdout	2016-01-14 06:21:32.359330897 +0100
@@ -10,9 +10,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+6.95288e-310 + 6.95288e-310i 1.38175e-316 + 1.38176e-316i 1.33505e-307 + 1.4463e-307i 2.2251e-307 + 2.44762e-307i 
+6.95288e-310 + 6.95288e-310i 0 + 0i 1.55756e-307 + 1.66882e-307i 2.67013e-307 + 2.89264e-307i 
+1.38163e-316 + 1.38164e-316i 1.11254e-307 + 1.22379e-307i 1.78008e-307 + 2.00259e-307i 3.11515e-307 + 3.33766e-307i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+6.95288e-310 + 6.95288e-310i 1.38176e-316 + 0i 1.4463e-307 + 1.55756e-307i 2.44762e-307 + 2.67013e-307i 
+6.95288e-310 + 1.38163e-316i 0 + 1.11254e-307i 1.66882e-307 + 1.78008e-307i 2.89264e-307 + 3.11515e-307i 
+1.38164e-316 + 1.38175e-316i 1.22379e-307 + 1.33505e-307i 2.00259e-307 + 2.2251e-307i 3.33766e-307 + 3.56022e-307i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+6.95288e-310 + 6.95288e-310i 0 + 0i 1.55756e-307 + 1.66882e-307i 2.67013e-307 + 2.89264e-307i 
+1.38163e-316 + 1.38164e-316i 1.11254e-307 + 1.22379e-307i 1.78008e-307 + 2.00259e-307i 3.11515e-307 + 3.33766e-307i 
+1.38175e-316 + 1.38176e-316i 1.33505e-307 + 1.4463e-307i 2.2251e-307 + 2.44762e-307i 3.56022e-307 + 4.00524e-307i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+6.95288e-310 + 1.38163e-316i 0 + 1.11254e-307i 1.66882e-307 + 1.78008e-307i 2.89264e-307 + 3.11515e-307i 
+1.38164e-316 + 1.38175e-316i 1.22379e-307 + 1.33505e-307i 2.00259e-307 + 2.2251e-307i 3.33766e-307 + 3.56022e-307i 
+1.38176e-316 + 0i 1.4463e-307 + 1.55756e-307i 2.44762e-307 + 2.67013e-307i 4.00524e-307 + 4.45026e-307i 
 }
 }
718. mat5_uncompressed_write.at:2113: 718. Write structure array with 2D double-precision complex fields (mat5_uncompressed_write.at:2113): FAILED (mat5_uncompressed_write.at:2165)

#                             -*- compilation -*-
719. mat5_uncompressed_write.at:2195: testing Write structure array with 2D single-precision complex fields ...
./mat5_uncompressed_write.at:2196: $builddir/test_mat -v 5 -c single write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2247: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.387337005 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/719/stdout	2016-01-14 06:21:32.395338751 +0100
@@ -10,9 +10,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+-2.82825e+06 + 4.59135e-41i -2.82832e+06 + 4.59135e-41i 1.63416e-37 + 0i 0 + 0i 
+-2.82828e+06 + 4.59135e-41i 1.63388e-37 + 0i 1.63418e-37 + 0i 4.68361e-39 + 4.77545e-39i 
+-2.8283e+06 + 4.59135e-41i 1.63391e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+-2.82828e+06 + 4.59135e-41i 1.63388e-37 + 0i 1.63418e-37 + 0i 4.68361e-39 + 4.77545e-39i 
+-2.8283e+06 + 4.59135e-41i 1.63391e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
+-2.82832e+06 + 4.59135e-41i 1.63416e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+-2.8283e+06 + 4.59135e-41i 1.63391e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
+-2.82832e+06 + 4.59135e-41i 1.63416e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
+1.63388e-37 + 0i 1.63418e-37 + 0i 4.68361e-39 + 4.77545e-39i 5.23463e-39 + 5.32647e-39i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+-2.82832e+06 + 4.59135e-41i 1.63416e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
+1.63388e-37 + 0i 1.63418e-37 + 0i 4.68361e-39 + 4.77545e-39i 5.23463e-39 + 5.32647e-39i 
+1.63391e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 5.41831e-39 + 5.51014e-39i 
 }
 }
719. mat5_uncompressed_write.at:2195: 719. Write structure array with 2D single-precision complex fields (mat5_uncompressed_write.at:2195): FAILED (mat5_uncompressed_write.at:2247)

#                             -*- compilation -*-
720. mat5_uncompressed_write.at:2277: testing Write structure array with 2D 64-bit signed integer complex fields ...
./mat5_uncompressed_write.at:2279: $builddir/test_mat -v 5 -c int64 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2330: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.423344859 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/720/stdout	2016-01-14 06:21:32.431346605 +0100
@@ -10,9 +10,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+140722066065600 + 140722066065792i 28954128 + 28954368i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 
+140722066065984 + 140722066066176i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+28951696 + 28951936i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+140722066065792 + 140722066065984i 28954368 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 
+140722066066176 + 28951696i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+28951936 + 28954128i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+140722066065984 + 140722066066176i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+28951696 + 28951936i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
+28954128 + 28954368i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 22518126991048733 + 23081085534535711i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+140722066066176 + 28951696i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+28951936 + 28954128i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
+28954368 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 23081085534535711 + 23644044078022689i 
 }
 }
720. mat5_uncompressed_write.at:2277: 720. Write structure array with 2D 64-bit signed integer complex fields (mat5_uncompressed_write.at:2277): FAILED (mat5_uncompressed_write.at:2330)

#                             -*- compilation -*-
721. mat5_uncompressed_write.at:2360: testing Write structure array with 2D 64-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:2362: $builddir/test_mat -v 5 -c uint64 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2413: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.459352714 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/721/stdout	2016-01-14 06:21:32.471355332 +0100
@@ -10,9 +10,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+140737196874832 + 140737196875024i 36044304 + 36044544i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 
+140737196875216 + 140737196875408i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+36041872 + 36042112i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+140737196875024 + 140737196875216i 36044544 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 
+140737196875408 + 36041872i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+36042112 + 36044304i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+140737196875216 + 140737196875408i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+36041872 + 36042112i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
+36044304 + 36044544i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 22518126991048733 + 23081085534535711i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+140737196875408 + 36041872i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+36042112 + 36044304i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
+36044544 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 23081085534535711 + 23644044078022689i 
 }
 }
721. mat5_uncompressed_write.at:2360: 721. Write structure array with 2D 64-bit unsigned integer complex fields (mat5_uncompressed_write.at:2360): FAILED (mat5_uncompressed_write.at:2413)

#                             -*- compilation -*-
722. mat5_uncompressed_write.at:2443: testing Write structure array with 2D 32-bit signed integer complex fields ...
./mat5_uncompressed_write.at:2444: $builddir/test_mat -v 5 -c int32 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2495: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.499361440 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/722/stdout	2016-01-14 06:21:32.507363186 +0100
@@ -10,9 +10,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+936969920 + 32765i 936970208 + 32765i 30187024 + 0i 0 + 0i 
+936970016 + 32765i 30184592 + 0i 30187264 + 0i 3342337 + 3407874i 
+936970112 + 32765i 30184832 + 0i 0 + 0i 3473411 + 3538948i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+936970016 + 32765i 30184592 + 0i 30187264 + 0i 3342337 + 3407874i 
+936970112 + 32765i 30184832 + 0i 0 + 0i 3473411 + 3538948i 
+936970208 + 32765i 30187024 + 0i 0 + 0i 3604485 + 3670022i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+936970112 + 32765i 30184832 + 0i 0 + 0i 3473411 + 3538948i 
+936970208 + 32765i 30187024 + 0i 0 + 0i 3604485 + 3670022i 
+30184592 + 0i 30187264 + 0i 3342337 + 3407874i 3735559 + 3801096i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+936970208 + 32765i 30187024 + 0i 0 + 0i 3604485 + 3670022i 
+30184592 + 0i 30187264 + 0i 3342337 + 3407874i 3735559 + 3801096i 
+30184832 + 0i 0 + 0i 3473411 + 3538948i 3866633 + 3932170i 
 }
 }
722. mat5_uncompressed_write.at:2443: 722. Write structure array with 2D 32-bit signed integer complex fields (mat5_uncompressed_write.at:2443): FAILED (mat5_uncompressed_write.at:2495)

#                             -*- compilation -*-
723. mat5_uncompressed_write.at:2525: testing Write structure array with 2D 32-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:2526: $builddir/test_mat -v 5 -c uint32 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2577: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.535369294 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/723/stdout	2016-01-14 06:21:32.547371912 +0100
@@ -10,9 +10,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+2389925760 + 32764i 2389926048 + 32764i 25816592 + 0i 0 + 0i 
+2389925856 + 32764i 25814160 + 0i 25816832 + 0i 3342337 + 3407874i 
+2389925952 + 32764i 25814400 + 0i 0 + 0i 3473411 + 3538948i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+2389925856 + 32764i 25814160 + 0i 25816832 + 0i 3342337 + 3407874i 
+2389925952 + 32764i 25814400 + 0i 0 + 0i 3473411 + 3538948i 
+2389926048 + 32764i 25816592 + 0i 0 + 0i 3604485 + 3670022i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+2389925952 + 32764i 25814400 + 0i 0 + 0i 3473411 + 3538948i 
+2389926048 + 32764i 25816592 + 0i 0 + 0i 3604485 + 3670022i 
+25814160 + 0i 25816832 + 0i 3342337 + 3407874i 3735559 + 3801096i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+2389926048 + 32764i 25816592 + 0i 0 + 0i 3604485 + 3670022i 
+25814160 + 0i 25816832 + 0i 3342337 + 3407874i 3735559 + 3801096i 
+25814400 + 0i 0 + 0i 3473411 + 3538948i 3866633 + 3932170i 
 }
 }
723. mat5_uncompressed_write.at:2525: 723. Write structure array with 2D 32-bit unsigned integer complex fields (mat5_uncompressed_write.at:2525): FAILED (mat5_uncompressed_write.at:2577)

#                             -*- compilation -*-
724. mat5_uncompressed_write.at:2607: testing Write structure array with 2D 16-bit signed integer complex fields ...
./mat5_uncompressed_write.at:2608: $builddir/test_mat -v 5 -c int16 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2659: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.579378894 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/724/stdout	2016-01-14 06:21:32.587380639 +0100
@@ -10,9 +10,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+-30832 + 32248i 32764 + 0i -30688 + 32248i 0 + 0i 
+32764 + 0i -30736 + 32248i 32764 + 0i -27264 + 598i 
+-30784 + 32248i 32764 + 0i -27504 + 598i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+-30784 + 32248i 32764 + 0i -27504 + 598i 0 + 0i 
+32764 + 0i -30688 + 32248i 0 + 0i -25072 + 598i 
+-30736 + 32248i 32764 + 0i -27264 + 598i 0 + 0i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+-30736 + 32248i 32764 + 0i -27264 + 598i 0 + 0i 
+32764 + 0i -27504 + 598i 0 + 0i -24832 + 598i 
+-30688 + 32248i 0 + 0i -25072 + 598i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+-30688 + 32248i 0 + 0i -25072 + 598i 0 + 0i 
+32764 + 0i -27264 + 598i 0 + 0i 0 + 0i 
+-27504 + 598i 0 + 0i -24832 + 598i 0 + 0i 
 }
 }
724. mat5_uncompressed_write.at:2607: 724. Write structure array with 2D 16-bit signed integer complex fields (mat5_uncompressed_write.at:2607): FAILED (mat5_uncompressed_write.at:2659)

#                             -*- compilation -*-
725. mat5_uncompressed_write.at:2689: testing Write structure array with 2D 16-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:2690: $builddir/test_mat -v 5 -c uint16 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2741: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.615386748 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/725/stdout	2016-01-14 06:21:32.623388493 +0100
@@ -10,9 +10,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+53344 + 55492i 32764 + 0i 53488 + 55492i 0 + 0i 
+32764 + 0i 53440 + 55492i 32764 + 0i 62848 + 155i 
+53392 + 55492i 32764 + 0i 62608 + 155i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+53392 + 55492i 32764 + 0i 62608 + 155i 0 + 0i 
+32764 + 0i 53488 + 55492i 0 + 0i 65040 + 155i 
+53440 + 55492i 32764 + 0i 62848 + 155i 0 + 0i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+53440 + 55492i 32764 + 0i 62848 + 155i 0 + 0i 
+32764 + 0i 62608 + 155i 0 + 0i 65280 + 155i 
+53488 + 55492i 0 + 0i 65040 + 155i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+53488 + 55492i 0 + 0i 65040 + 155i 0 + 0i 
+32764 + 0i 62848 + 155i 0 + 0i 0 + 0i 
+62608 + 155i 0 + 0i 65280 + 155i 0 + 0i 
 }
 }
725. mat5_uncompressed_write.at:2689: 725. Write structure array with 2D 16-bit unsigned integer complex fields (mat5_uncompressed_write.at:2689): FAILED (mat5_uncompressed_write.at:2741)

#                             -*- compilation -*-
726. mat5_uncompressed_write.at:2771: testing Write structure array with 2D 8-bit signed integer complex fields ...
./mat5_uncompressed_write.at:2772: $builddir/test_mat -v 5 -c int8 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2823: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.651394602 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/726/stdout	2016-01-14 06:21:32.663397220 +0100
@@ -10,9 +10,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+96 + -117i 0 + 0i -3 + 127i -120 + 2i 
+-120 + 2i 120 + -117i 0 + 0i -3 + 127i 
+-3 + 127i -120 + 2i -112 + -117i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+120 + -117i 0 + 0i -3 + 127i -120 + 2i 
+-120 + 2i -112 + -117i 0 + 0i -3 + 127i 
+-3 + 127i -120 + 2i -88 + -117i 0 + 0i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+-112 + -117i 0 + 0i -3 + 127i 45 + 1i 
+-120 + 2i -88 + -117i 0 + 0i 0 + 0i 
+-3 + 127i -120 + 2i -112 + 116i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+-88 + -117i 0 + 0i 0 + 0i 45 + 1i 
+-120 + 2i -112 + 116i 0 + 0i 0 + 0i 
+-3 + 127i 45 + 1i -128 + 117i 0 + 0i 
 }
 }
726. mat5_uncompressed_write.at:2771: 726. Write structure array with 2D 8-bit signed integer complex fields (mat5_uncompressed_write.at:2771): FAILED (mat5_uncompressed_write.at:2823)

#                             -*- compilation -*-
727. mat5_uncompressed_write.at:2853: testing Write structure array with 2D 8-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:2854: $builddir/test_mat -v 5 -c uint8 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:2905: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.691403329 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/727/stdout	2016-01-14 06:21:32.699405074 +0100
@@ -10,9 +10,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+144 + 142i 0 + 0i 255 + 127i 33 + 51i 
+33 + 51i 168 + 142i 0 + 0i 255 + 127i 
+255 + 127i 33 + 51i 192 + 142i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+168 + 142i 0 + 0i 255 + 127i 33 + 51i 
+33 + 51i 192 + 142i 0 + 0i 255 + 127i 
+255 + 127i 33 + 51i 216 + 142i 0 + 0i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+192 + 142i 0 + 0i 255 + 127i 165 + 1i 
+33 + 51i 216 + 142i 0 + 0i 0 + 0i 
+255 + 127i 33 + 51i 144 + 84i 0 + 0i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+216 + 142i 0 + 0i 0 + 0i 165 + 1i 
+33 + 51i 144 + 84i 0 + 0i 0 + 0i 
+255 + 127i 165 + 1i 128 + 85i 0 + 0i 
 }
 }
727. mat5_uncompressed_write.at:2853: 727. Write structure array with 2D 8-bit unsigned integer complex fields (mat5_uncompressed_write.at:2853): FAILED (mat5_uncompressed_write.at:2905)

#                             -*- compilation -*-
730. mat5_uncompressed_write.at:3079: testing Write cell array with 2D double-precision fields ...
./mat5_uncompressed_write.at:3080: $builddir/test_mat -v 5 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3127: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.819431255 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/730/stdout	2016-01-14 06:21:32.827433000 +0100
@@ -18,26 +18,26 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 9.88131e-324 2.47033e-323 3.95253e-323 
+50 1.4822e-323 2.96439e-323 4.44659e-323 
+4.94066e-324 1.97626e-323 3.45846e-323 4.94066e-323 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+1.13635e-322 1.28457e-322 1.43279e-322 1.58101e-322 
+1.18576e-322 1.33398e-322 1.4822e-322 1.63042e-322 
+1.23516e-322 1.38338e-322 1.5316e-322 1.67982e-322 
 }
 }
730. mat5_uncompressed_write.at:3079: 730. Write cell array with 2D double-precision fields (mat5_uncompressed_write.at:3079): FAILED (mat5_uncompressed_write.at:3127)

#                             -*- compilation -*-
731. mat5_uncompressed_write.at:3155: testing Write cell array with 2D single-precision fields ...
./mat5_uncompressed_write.at:3156: $builddir/test_mat -v 5 -c single write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3203: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.859439981 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/731/stdout	2016-01-14 06:21:32.867441727 +0100
@@ -18,26 +18,26 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 4.2039e-45 8.40779e-45 
+50 1.4013e-45 5.60519e-45 9.80909e-45 
+0 2.8026e-45 7.00649e-45 1.12104e-44 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+2.94273e-44 3.36312e-44 3.78351e-44 4.2039e-44 
+3.08286e-44 3.50325e-44 3.92364e-44 4.34403e-44 
+3.22299e-44 3.64338e-44 4.06377e-44 4.48416e-44 
 }
 }
731. mat5_uncompressed_write.at:3155: 731. Write cell array with 2D single-precision fields (mat5_uncompressed_write.at:3155): FAILED (mat5_uncompressed_write.at:3203)

#                             -*- compilation -*-
732. mat5_uncompressed_write.at:3231: testing Write cell array with 2D 64-bit signed integer fields ...
./mat5_uncompressed_write.at:3233: $builddir/test_mat -v 5 -c int64 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3280: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.895447835 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/732/stdout	2016-01-14 06:21:32.903449581 +0100
@@ -18,26 +18,26 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 2 5 8 
+50 3 6 9 
+1 4 7 10 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+23 26 29 32 
+24 27 30 33 
+25 28 31 34 
 }
 }
732. mat5_uncompressed_write.at:3231: 732. Write cell array with 2D 64-bit signed integer fields (mat5_uncompressed_write.at:3231): FAILED (mat5_uncompressed_write.at:3280)

#                             -*- compilation -*-
733. mat5_uncompressed_write.at:3308: testing Write cell array with 2D 64-bit unsigned integer fields ...
./mat5_uncompressed_write.at:3310: $builddir/test_mat -v 5 -c uint64 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3357: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.935456562 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/733/stdout	2016-01-14 06:21:32.943458308 +0100
@@ -18,26 +18,26 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 1157159078456920585 2893323226570760737 6370168 
+50 1735880461161533969 3472044609275374121 578437695752307201 
+578437695752307201 2314601843866147353 6369841 1157159078456920585 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+140607208155848 64424509440 4260944 140607199718856 
+140607205957516 140607208155848 4260226 140607208155848 
+6 140608639336447 870 140731195748264 
 }
 }
733. mat5_uncompressed_write.at:3308: 733. Write cell array with 2D 64-bit unsigned integer fields (mat5_uncompressed_write.at:3308): FAILED (mat5_uncompressed_write.at:3357)

#                             -*- compilation -*-
734. mat5_uncompressed_write.at:3385: testing Write cell array with 2D 32-bit signed integer fields ...
./mat5_uncompressed_write.at:3386: $builddir/test_mat -v 5 -c int32 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3433: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:32.979466162 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/734/stdout	2016-01-14 06:21:32.987467907 +0100
@@ -18,26 +18,26 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 3 6 
+50 1 4 7 
+3178496 2 5 8 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+21 24 27 30 
+22 25 28 31 
+23 26 29 32 
 }
 }
734. mat5_uncompressed_write.at:3385: 734. Write cell array with 2D 32-bit signed integer fields (mat5_uncompressed_write.at:3385): FAILED (mat5_uncompressed_write.at:3433)

#                             -*- compilation -*-
735. mat5_uncompressed_write.at:3461: testing Write cell array with 2D 32-bit unsigned integer fields ...
./mat5_uncompressed_write.at:3462: $builddir/test_mat -v 5 -c uint32 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3509: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.015473863 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/735/stdout	2016-01-14 06:21:33.023475499 +0100
@@ -18,26 +18,26 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 32630 0 1074266112 
+50 0 1073741824 0 
+2075132463 1072693248 0 1074790400 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+0 1076363264 0 1076756480 
+1076232192 0 1076625408 0 
+0 1076494336 0 1076887552 
 }
 }
735. mat5_uncompressed_write.at:3461: 735. Write cell array with 2D 32-bit unsigned integer fields (mat5_uncompressed_write.at:3461): FAILED (mat5_uncompressed_write.at:3509)

#                             -*- compilation -*-
736. mat5_uncompressed_write.at:3537: testing Write cell array with 2D 16-bit signed integer fields ...
./mat5_uncompressed_write.at:3538: $builddir/test_mat -v 5 -c int16 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3585: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.051481223 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/736/stdout	2016-01-14 06:21:33.059482859 +0100
@@ -18,26 +18,26 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 2 
+50 0 0 3 
+0 0 1 4 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+17 20 23 26 
+18 21 24 27 
+19 22 25 28 
 }
 }
736. mat5_uncompressed_write.at:3537: 736. Write cell array with 2D 16-bit signed integer fields (mat5_uncompressed_write.at:3537): FAILED (mat5_uncompressed_write.at:3585)

#                             -*- compilation -*-
737. mat5_uncompressed_write.at:3613: testing Write cell array with 2D 16-bit unsigned integer fields ...
./mat5_uncompressed_write.at:3614: $builddir/test_mat -v 5 -c uint16 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3661: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.087488582 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/737/stdout	2016-01-14 06:21:33.095490218 +0100
@@ -18,26 +18,26 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 16256 
+50 0 0 0 
+0 0 0 16384 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+0 16672 0 16720 
+16656 0 16704 0 
+0 16688 0 16736 
 }
 }
737. mat5_uncompressed_write.at:3613: 737. Write cell array with 2D 16-bit unsigned integer fields (mat5_uncompressed_write.at:3613): FAILED (mat5_uncompressed_write.at:3661)

#                             -*- compilation -*-
738. mat5_uncompressed_write.at:3689: testing Write cell array with 2D 8-bit signed integer fields ...
./mat5_uncompressed_write.at:3690: $builddir/test_mat -v 5 -c int8 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3737: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.119495124 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/738/stdout	2016-01-14 06:21:33.131497577 +0100
@@ -18,26 +18,26 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 51 
+50 0 0 97 
+97 0 120 0 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+9 12 15 18 
+10 13 16 19 
+11 14 17 20 
 }
 }
738. mat5_uncompressed_write.at:3689: 738. Write cell array with 2D 8-bit signed integer fields (mat5_uncompressed_write.at:3689): FAILED (mat5_uncompressed_write.at:3737)

#                             -*- compilation -*-
739. mat5_uncompressed_write.at:3765: testing Write cell array with 2D 8-bit unsigned integer fields ...
./mat5_uncompressed_write.at:3766: $builddir/test_mat -v 5 -c uint8 write_cell_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3813: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.159503301 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/739/stdout	2016-01-14 06:21:33.171505754 +0100
@@ -18,26 +18,26 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 225 0 111 
+50 255 0 232 
+231 127 0 144 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+145 0 0 0 
+171 0 0 0 
+64 0 3 0 
 }
 }
739. mat5_uncompressed_write.at:3765: 739. Write cell array with 2D 8-bit unsigned integer fields (mat5_uncompressed_write.at:3765): FAILED (mat5_uncompressed_write.at:3813)

#                             -*- compilation -*-
740. mat5_uncompressed_write.at:3841: testing Write cell array with 2D double-precision complex fields ...
./mat5_uncompressed_write.at:3842: $builddir/test_mat -v 5 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3889: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.195510660 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/740/stdout	2016-01-14 06:21:33.203512295 +0100
@@ -9,35 +9,35 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+6.95289e-310 + 6.95289e-310i 1.3516e-316 + 1.35161e-316i 1.33505e-307 + 1.4463e-307i 2.2251e-307 + 2.44762e-307i 
+6.95289e-310 + 6.95289e-310i 0 + 0i 1.55756e-307 + 1.66882e-307i 2.67013e-307 + 2.89264e-307i 
+1.35148e-316 + 1.35149e-316i 1.11254e-307 + 1.22379e-307i 1.78008e-307 + 2.00259e-307i 3.11515e-307 + 3.33766e-307i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+6.95289e-310 + 6.95289e-310i 1.35161e-316 + 0i 1.4463e-307 + 1.55756e-307i 2.44762e-307 + 2.67013e-307i 
+6.95289e-310 + 1.35148e-316i 0 + 1.11254e-307i 1.66882e-307 + 1.78008e-307i 2.89264e-307 + 3.11515e-307i 
+1.35149e-316 + 1.3516e-316i 1.22379e-307 + 1.33505e-307i 2.00259e-307 + 2.2251e-307i 3.33766e-307 + 3.56022e-307i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+6.95289e-310 + 6.95289e-310i 0 + 0i 1.55756e-307 + 1.66882e-307i 2.67013e-307 + 2.89264e-307i 
+1.35148e-316 + 1.35149e-316i 1.11254e-307 + 1.22379e-307i 1.78008e-307 + 2.00259e-307i 3.11515e-307 + 3.33766e-307i 
+1.3516e-316 + 1.35161e-316i 1.33505e-307 + 1.4463e-307i 2.2251e-307 + 2.44762e-307i 3.56022e-307 + 4.00524e-307i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+6.95289e-310 + 1.35148e-316i 0 + 1.11254e-307i 1.66882e-307 + 1.78008e-307i 2.89264e-307 + 3.11515e-307i 
+1.35149e-316 + 1.3516e-316i 1.22379e-307 + 1.33505e-307i 2.00259e-307 + 2.2251e-307i 3.33766e-307 + 3.56022e-307i 
+1.35161e-316 + 0i 1.4463e-307 + 1.55756e-307i 2.44762e-307 + 2.67013e-307i 4.00524e-307 + 4.45026e-307i 
 }
 }
740. mat5_uncompressed_write.at:3841: 740. Write cell array with 2D double-precision complex fields (mat5_uncompressed_write.at:3841): FAILED (mat5_uncompressed_write.at:3889)

#                             -*- compilation -*-
741. mat5_uncompressed_write.at:3919: testing Write cell array with 2D single-precision complex fields ...
./mat5_uncompressed_write.at:3920: $builddir/test_mat -v 5 -c single write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:3967: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.235518836 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/741/stdout	2016-01-14 06:21:33.243520472 +0100
@@ -9,35 +9,35 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+-1.95728e-22 + 4.59135e-41i -1.95732e-22 + 4.59135e-41i 1.0037e-37 + 0i 0 + 0i 
+-1.9573e-22 + 4.59135e-41i 1.00343e-37 + 0i 1.00372e-37 + 0i 4.68361e-39 + 4.77545e-39i 
+-1.95731e-22 + 4.59135e-41i 1.00346e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+-1.9573e-22 + 4.59135e-41i 1.00343e-37 + 0i 1.00372e-37 + 0i 4.68361e-39 + 4.77545e-39i 
+-1.95731e-22 + 4.59135e-41i 1.00346e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
+-1.95732e-22 + 4.59135e-41i 1.0037e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+-1.95731e-22 + 4.59135e-41i 1.00346e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 
+-1.95732e-22 + 4.59135e-41i 1.0037e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
+1.00343e-37 + 0i 1.00372e-37 + 0i 4.68361e-39 + 4.77545e-39i 5.23463e-39 + 5.32647e-39i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+-1.95732e-22 + 4.59135e-41i 1.0037e-37 + 0i 0 + 0i 5.05096e-39 + 5.1428e-39i 
+1.00343e-37 + 0i 1.00372e-37 + 0i 4.68361e-39 + 4.77545e-39i 5.23463e-39 + 5.32647e-39i 
+1.00346e-37 + 0i 0 + 0i 4.86729e-39 + 4.95912e-39i 5.41831e-39 + 5.51014e-39i 
 }
 }
741. mat5_uncompressed_write.at:3919: 741. Write cell array with 2D single-precision complex fields (mat5_uncompressed_write.at:3919): FAILED (mat5_uncompressed_write.at:3967)

#                             -*- compilation -*-
742. mat5_uncompressed_write.at:3997: testing Write cell array with 2D 64-bit signed integer complex fields ...
./mat5_uncompressed_write.at:3999: $builddir/test_mat -v 5 -c int64 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4046: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.271526196 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/742/stdout	2016-01-14 06:21:33.279527831 +0100
@@ -9,35 +9,35 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+140721772959616 + 140721772959808i 24337856 + 24338064i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 
+140721772960000 + 140721772960192i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+24335488 + 24335696i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+140721772959808 + 140721772960000i 24338064 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 
+140721772960192 + 24335488i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+24335696 + 24337856i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+140721772960000 + 140721772960192i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+24335488 + 24335696i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
+24337856 + 24338064i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 22518126991048733 + 23081085534535711i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+140721772960192 + 24335488i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+24335696 + 24337856i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
+24338064 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 23081085534535711 + 23644044078022689i 
 }
 }
742. mat5_uncompressed_write.at:3997: 742. Write cell array with 2D 64-bit signed integer complex fields (mat5_uncompressed_write.at:3997): FAILED (mat5_uncompressed_write.at:4046)

#                             -*- compilation -*-
743. mat5_uncompressed_write.at:4076: testing Write cell array with 2D 64-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:4078: $builddir/test_mat -v 5 -c uint64 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4125: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.311534372 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/743/stdout	2016-01-14 06:21:33.319536008 +0100
@@ -9,35 +9,35 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+140726717801888 + 140726717802080i 9649600 + 9649808i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 
+140726717802272 + 140726717802464i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+9647232 + 9647440i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+140726717802080 + 140726717802272i 9649808 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 
+140726717802464 + 9647232i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+9647440 + 9649600i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+140726717802272 + 140726717802464i 0 + 0i 16888541556178953 + 17451500099665931i 20266292817100821 + 20829251360587799i 
+9647232 + 9647440i 14636707382231041 + 15199665925718019i 18014458643152909 + 18577417186639887i 21392209904074777 + 21955168447561755i 
+9649600 + 9649808i 15762624469204997 + 16325583012691975i 19140375730126865 + 19703334273613843i 22518126991048733 + 23081085534535711i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+140726717802464 + 9647232i 0 + 14636707382231041i 17451500099665931 + 18014458643152909i 20829251360587799 + 21392209904074777i 
+9647440 + 9649600i 15199665925718019 + 15762624469204997i 18577417186639887 + 19140375730126865i 21955168447561755 + 22518126991048733i 
+9649808 + 0i 16325583012691975 + 16888541556178953i 19703334273613843 + 20266292817100821i 23081085534535711 + 23644044078022689i 
 }
 }
743. mat5_uncompressed_write.at:4076: 743. Write cell array with 2D 64-bit unsigned integer complex fields (mat5_uncompressed_write.at:4076): FAILED (mat5_uncompressed_write.at:4125)

#                             -*- compilation -*-
744. mat5_uncompressed_write.at:4155: testing Write cell array with 2D 32-bit signed integer complex fields ...
./mat5_uncompressed_write.at:4156: $builddir/test_mat -v 5 -c int32 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4203: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.347541731 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/744/stdout	2016-01-14 06:21:33.355543367 +0100
@@ -9,35 +9,35 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1015753664 + 32764i 1015753952 + 32764i 33447360 + 0i 0 + 0i 
+1015753760 + 32764i 33444992 + 0i 33447568 + 0i 3342337 + 3407874i 
+1015753856 + 32764i 33445200 + 0i 0 + 0i 3473411 + 3538948i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+1015753760 + 32764i 33444992 + 0i 33447568 + 0i 3342337 + 3407874i 
+1015753856 + 32764i 33445200 + 0i 0 + 0i 3473411 + 3538948i 
+1015753952 + 32764i 33447360 + 0i 0 + 0i 3604485 + 3670022i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+1015753856 + 32764i 33445200 + 0i 0 + 0i 3473411 + 3538948i 
+1015753952 + 32764i 33447360 + 0i 0 + 0i 3604485 + 3670022i 
+33444992 + 0i 33447568 + 0i 3342337 + 3407874i 3735559 + 3801096i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+1015753952 + 32764i 33447360 + 0i 0 + 0i 3604485 + 3670022i 
+33444992 + 0i 33447568 + 0i 3342337 + 3407874i 3735559 + 3801096i 
+33445200 + 0i 0 + 0i 3473411 + 3538948i 3866633 + 3932170i 
 }
 }
744. mat5_uncompressed_write.at:4155: 744. Write cell array with 2D 32-bit signed integer complex fields (mat5_uncompressed_write.at:4155): FAILED (mat5_uncompressed_write.at:4203)

#                             -*- compilation -*-
745. mat5_uncompressed_write.at:4233: testing Write cell array with 2D 32-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:4234: $builddir/test_mat -v 5 -c uint32 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4281: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.383549091 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/745/stdout	2016-01-14 06:21:33.391550726 +0100
@@ -9,35 +9,35 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+2491193456 + 32767i 2491193744 + 32767i 21347776 + 0i 0 + 0i 
+2491193552 + 32767i 21345408 + 0i 21347984 + 0i 3342337 + 3407874i 
+2491193648 + 32767i 21345616 + 0i 0 + 0i 3473411 + 3538948i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+2491193552 + 32767i 21345408 + 0i 21347984 + 0i 3342337 + 3407874i 
+2491193648 + 32767i 21345616 + 0i 0 + 0i 3473411 + 3538948i 
+2491193744 + 32767i 21347776 + 0i 0 + 0i 3604485 + 3670022i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+2491193648 + 32767i 21345616 + 0i 0 + 0i 3473411 + 3538948i 
+2491193744 + 32767i 21347776 + 0i 0 + 0i 3604485 + 3670022i 
+21345408 + 0i 21347984 + 0i 3342337 + 3407874i 3735559 + 3801096i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+2491193744 + 32767i 21347776 + 0i 0 + 0i 3604485 + 3670022i 
+21345408 + 0i 21347984 + 0i 3342337 + 3407874i 3735559 + 3801096i 
+21345616 + 0i 0 + 0i 3473411 + 3538948i 3866633 + 3932170i 
 }
 }
745. mat5_uncompressed_write.at:4233: 745. Write cell array with 2D 32-bit unsigned integer complex fields (mat5_uncompressed_write.at:4233): FAILED (mat5_uncompressed_write.at:4281)

#                             -*- compilation -*-
746. mat5_uncompressed_write.at:4311: testing Write cell array with 2D 16-bit signed integer complex fields ...
./mat5_uncompressed_write.at:4312: $builddir/test_mat -v 5 -c int16 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4359: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.423557267 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/746/stdout	2016-01-14 06:21:33.431558903 +0100
@@ -9,35 +9,35 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+14320 + -25819i 32767 + 0i 14464 + -25819i 0 + 0i 
+32767 + 0i 14416 + -25819i 32767 + 0i 21840 + 143i 
+14368 + -25819i 32767 + 0i 21632 + 143i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+14368 + -25819i 32767 + 0i 21632 + 143i 0 + 0i 
+32767 + 0i 14464 + -25819i 0 + 0i 24000 + 143i 
+14416 + -25819i 32767 + 0i 21840 + 143i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+14416 + -25819i 32767 + 0i 21840 + 143i 0 + 0i 
+32767 + 0i 21632 + 143i 0 + 0i 24208 + 143i 
+14464 + -25819i 0 + 0i 24000 + 143i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+14464 + -25819i 0 + 0i 24000 + 143i 0 + 0i 
+32767 + 0i 21840 + 143i 0 + 0i 0 + 0i 
+21632 + 143i 0 + 0i 24208 + 143i 0 + 0i 
 }
 }
746. mat5_uncompressed_write.at:4311: 746. Write cell array with 2D 16-bit signed integer complex fields (mat5_uncompressed_write.at:4311): FAILED (mat5_uncompressed_write.at:4359)

#                             -*- compilation -*-
747. mat5_uncompressed_write.at:4389: testing Write cell array with 2D 16-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:4390: $builddir/test_mat -v 5 -c uint16 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4437: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.459564626 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/747/stdout	2016-01-14 06:21:33.467566262 +0100
@@ -9,35 +9,35 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+52064 + 32197i 32764 + 0i 52208 + 32197i 0 + 0i 
+32764 + 0i 52160 + 32197i 32764 + 0i 25936 + 539i 
+52112 + 32197i 32764 + 0i 25728 + 539i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+52112 + 32197i 32764 + 0i 25728 + 539i 0 + 0i 
+32764 + 0i 52208 + 32197i 0 + 0i 28096 + 539i 
+52160 + 32197i 32764 + 0i 25936 + 539i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+52160 + 32197i 32764 + 0i 25936 + 539i 0 + 0i 
+32764 + 0i 25728 + 539i 0 + 0i 28304 + 539i 
+52208 + 32197i 0 + 0i 28096 + 539i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+52208 + 32197i 0 + 0i 28096 + 539i 0 + 0i 
+32764 + 0i 25936 + 539i 0 + 0i 0 + 0i 
+25728 + 539i 0 + 0i 28304 + 539i 0 + 0i 
 }
 }
747. mat5_uncompressed_write.at:4389: 747. Write cell array with 2D 16-bit unsigned integer complex fields (mat5_uncompressed_write.at:4389): FAILED (mat5_uncompressed_write.at:4437)

#                             -*- compilation -*-
748. mat5_uncompressed_write.at:4467: testing Write cell array with 2D 8-bit signed integer complex fields ...
./mat5_uncompressed_write.at:4468: $builddir/test_mat -v 5 -c int8 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4515: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.491571168 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/748/stdout	2016-01-14 06:21:33.503573621 +0100
@@ -9,35 +9,35 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+96 + -112i 0 + 0i -2 + 127i 84 + 93i 
+84 + 93i 120 + -112i 0 + 0i -2 + 127i 
+-2 + 127i 84 + 93i -112 + -112i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+120 + -112i 0 + 0i -2 + 127i 84 + 93i 
+84 + 93i -112 + -112i 0 + 0i -2 + 127i 
+-2 + 127i 84 + 93i -88 + -112i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+-112 + -112i 0 + 0i -2 + 127i -85 + 1i 
+84 + 93i -88 + -112i 0 + 0i 0 + 0i 
+-2 + 127i 84 + 93i -128 + 116i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+-88 + -112i 0 + 0i 0 + 0i -85 + 1i 
+84 + 93i -128 + 116i 0 + 0i 0 + 0i 
+-2 + 127i -85 + 1i 80 + 117i 0 + 0i 
 }
 }
748. mat5_uncompressed_write.at:4467: 748. Write cell array with 2D 8-bit signed integer complex fields (mat5_uncompressed_write.at:4467): FAILED (mat5_uncompressed_write.at:4515)

#                             -*- compilation -*-
749. mat5_uncompressed_write.at:4545: testing Write cell array with 2D 8-bit unsigned integer complex fields ...
./mat5_uncompressed_write.at:4546: $builddir/test_mat -v 5 -c uint8 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_uncompressed_write.at:4593: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:33.531579345 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/749/stdout	2016-01-14 06:21:33.539580980 +0100
@@ -9,35 +9,35 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+144 + 142i 0 + 0i 252 + 127i 155 + 133i 
+155 + 133i 168 + 142i 0 + 0i 252 + 127i 
+252 + 127i 155 + 133i 192 + 142i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+168 + 142i 0 + 0i 252 + 127i 155 + 133i 
+155 + 133i 192 + 142i 0 + 0i 252 + 127i 
+252 + 127i 155 + 133i 216 + 142i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+192 + 142i 0 + 0i 252 + 127i 82 + 1i 
+155 + 133i 216 + 142i 0 + 0i 0 + 0i 
+252 + 127i 155 + 133i 128 + 196i 0 + 0i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+216 + 142i 0 + 0i 0 + 0i 82 + 1i 
+155 + 133i 128 + 196i 0 + 0i 0 + 0i 
+252 + 127i 82 + 1i 80 + 197i 0 + 0i 
 }
 }
749. mat5_uncompressed_write.at:4545: 749. Write cell array with 2D 8-bit unsigned integer complex fields (mat5_uncompressed_write.at:4545): FAILED (mat5_uncompressed_write.at:4593)

#                             -*- compilation -*-
761. mat5_compressed_write.at:459: testing Write 2D double-precision complex array ...
./mat5_compressed_write.at:461: $builddir/test_mat -v 5 -z -c double write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/761/test-source: line 107: 24324 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c double write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:461: exit code was 139, expected 0
761. mat5_compressed_write.at:459: 761. Write 2D double-precision complex array (mat5_compressed_write.at:459): FAILED (mat5_compressed_write.at:461)

#                             -*- compilation -*-
762. mat5_compressed_write.at:502: testing Write 2D single-precision complex array ...
./mat5_compressed_write.at:504: $builddir/test_mat -v 5 -z -c single write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/762/test-source: line 107: 24350 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c single write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:504: exit code was 139, expected 0
762. mat5_compressed_write.at:502: 762. Write 2D single-precision complex array (mat5_compressed_write.at:502): FAILED (mat5_compressed_write.at:504)

#                             -*- compilation -*-
763. mat5_compressed_write.at:545: testing Write 2D 64-bit integer complex array ...
./mat5_compressed_write.at:548: $builddir/test_mat -v 5 -z -c int64 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/763/test-source: line 110: 24377 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int64 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:548: exit code was 139, expected 0
763. mat5_compressed_write.at:545: 763. Write 2D 64-bit integer complex array (mat5_compressed_write.at:545): FAILED (mat5_compressed_write.at:548)

#                             -*- compilation -*-
764. mat5_compressed_write.at:589: testing Write 2D 64-bit unsigned integer complex array ...
./mat5_compressed_write.at:592: $builddir/test_mat -v 5 -z -c uint64 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/764/test-source: line 110: 24404 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint64 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:592: exit code was 139, expected 0
764. mat5_compressed_write.at:589: 764. Write 2D 64-bit unsigned integer complex array (mat5_compressed_write.at:589): FAILED (mat5_compressed_write.at:592)

#                             -*- compilation -*-
765. mat5_compressed_write.at:633: testing Write 2D 32-bit integer complex array ...
./mat5_compressed_write.at:635: $builddir/test_mat -v 5 -z -c int32 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/765/test-source: line 107: 24430 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int32 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:635: exit code was 139, expected 0
765. mat5_compressed_write.at:633: 765. Write 2D 32-bit integer complex array (mat5_compressed_write.at:633): FAILED (mat5_compressed_write.at:635)

#                             -*- compilation -*-
766. mat5_compressed_write.at:676: testing Write 2D 32-bit unsigned integer complex array ...
./mat5_compressed_write.at:678: $builddir/test_mat -v 5 -z -c uint32 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/766/test-source: line 107: 24456 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint32 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:678: exit code was 139, expected 0
766. mat5_compressed_write.at:676: 766. Write 2D 32-bit unsigned integer complex array (mat5_compressed_write.at:676): FAILED (mat5_compressed_write.at:678)

#                             -*- compilation -*-
767. mat5_compressed_write.at:719: testing Write 2D 16-bit integer complex array ...
./mat5_compressed_write.at:721: $builddir/test_mat -v 5 -z -c int16 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/767/test-source: line 107: 24482 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int16 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:721: exit code was 139, expected 0
767. mat5_compressed_write.at:719: 767. Write 2D 16-bit integer complex array (mat5_compressed_write.at:719): FAILED (mat5_compressed_write.at:721)

#                             -*- compilation -*-
768. mat5_compressed_write.at:762: testing Write 2D 16-bit unsigned integer complex array ...
./mat5_compressed_write.at:764: $builddir/test_mat -v 5 -z -c uint16 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/768/test-source: line 107: 24508 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint16 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:764: exit code was 139, expected 0
768. mat5_compressed_write.at:762: 768. Write 2D 16-bit unsigned integer complex array (mat5_compressed_write.at:762): FAILED (mat5_compressed_write.at:764)

#                             -*- compilation -*-
769. mat5_compressed_write.at:805: testing Write 2D 8-bit integer complex array ...
./mat5_compressed_write.at:807: $builddir/test_mat -v 5 -z -c int8 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/769/test-source: line 107: 24534 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int8 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:807: exit code was 139, expected 0
769. mat5_compressed_write.at:805: 769. Write 2D 8-bit integer complex array (mat5_compressed_write.at:805): FAILED (mat5_compressed_write.at:807)

#                             -*- compilation -*-
770. mat5_compressed_write.at:848: testing Write 2D 8-bit unsigned integer complex array ...
./mat5_compressed_write.at:850: $builddir/test_mat -v 5 -z -c uint8 write_complex_2d_numeric
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/770/test-source: line 107: 24560 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint8 write_complex_2d_numeric
stdout:
./mat5_compressed_write.at:850: exit code was 139, expected 0
770. mat5_compressed_write.at:848: 770. Write 2D 8-bit unsigned integer complex array (mat5_compressed_write.at:848): FAILED (mat5_compressed_write.at:850)

#                             -*- compilation -*-
773. mat5_compressed_write.at:1048: testing Write 2D sparse complex double-precision array ...
./mat5_compressed_write.at:1050: $builddir/test_mat -v 5 -z -c double write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/773/test-source: line 131: 24714 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c double write_complex_sparse
stdout:
./mat5_compressed_write.at:1050: exit code was 139, expected 0
773. mat5_compressed_write.at:1048: 773. Write 2D sparse complex double-precision array (mat5_compressed_write.at:1048): FAILED (mat5_compressed_write.at:1050)

#                             -*- compilation -*-
777. mat5_compressed_write.at:1317: testing Write structure array with 2D double-precision fields ...
./mat5_compressed_write.at:1319: $builddir/test_mat -v 5 -z write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1370: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.587972518 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/777/stdout	2016-01-14 06:21:35.595973956 +0100
@@ -20,9 +20,9 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 9.88131e-324 2.47033e-323 3.95253e-323 
+50 1.4822e-323 2.96439e-323 4.44659e-323 
+4.94066e-324 1.97626e-323 3.45846e-323 4.94066e-323 
 }
       Name: field2
       Rank: 2
777. mat5_compressed_write.at:1317: 777. Write structure array with 2D double-precision fields (mat5_compressed_write.at:1317): FAILED (mat5_compressed_write.at:1370)

#                             -*- compilation -*-
778. mat5_compressed_write.at:1400: testing Write structure array with 2D single-precision fields ...
./mat5_compressed_write.at:1402: $builddir/test_mat -v 5 -z -c single write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1453: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.627979706 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/778/stdout	2016-01-14 06:21:35.635981144 +0100
@@ -20,9 +20,9 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 4.2039e-45 8.40779e-45 
+50 1.4013e-45 5.60519e-45 9.80909e-45 
+0 2.8026e-45 7.00649e-45 1.12104e-44 
 }
       Name: field2
       Rank: 2
778. mat5_compressed_write.at:1400: 778. Write structure array with 2D single-precision fields (mat5_compressed_write.at:1400): FAILED (mat5_compressed_write.at:1453)

#                             -*- compilation -*-
779. mat5_compressed_write.at:1483: testing Write structure array with 2D 64-bit signed integer fields ...
./mat5_compressed_write.at:1486: $builddir/test_mat -v 5 -z -c int64 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1537: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.683989769 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/779/stdout	2016-01-14 06:21:35.691991207 +0100
@@ -20,9 +20,9 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 2 5 8 
+50 3 6 9 
+1 4 7 10 
 }
       Name: field2
       Rank: 2
779. mat5_compressed_write.at:1483: 779. Write structure array with 2D 64-bit signed integer fields (mat5_compressed_write.at:1483): FAILED (mat5_compressed_write.at:1537)

#                             -*- compilation -*-
780. mat5_compressed_write.at:1567: testing Write structure array with 2D 64-bit unsigned integer fields ...
./mat5_compressed_write.at:1570: $builddir/test_mat -v 5 -z -c uint64 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1621: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.723996957 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/780/stdout	2016-01-14 06:21:35.731998395 +0100
@@ -20,9 +20,9 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 1157159078456920585 2893323226570760737 6370168 
+50 1735880461161533969 3472044609275374121 578437695752307201 
+578437695752307201 2314601843866147353 6369841 1157159078456920585 
 }
       Name: field2
       Rank: 2
780. mat5_compressed_write.at:1567: 780. Write structure array with 2D 64-bit unsigned integer fields (mat5_compressed_write.at:1567): FAILED (mat5_compressed_write.at:1621)

#                             -*- compilation -*-
781. mat5_compressed_write.at:1651: testing Write structure array with 2D 32-bit signed integer fields ...
./mat5_compressed_write.at:1653: $builddir/test_mat -v 5 -z -c int32 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1704: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.764004145 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/781/stdout	2016-01-14 06:21:35.772005583 +0100
@@ -20,9 +20,9 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 3 6 
+50 1 4 7 
+3178496 2 5 8 
 }
       Name: field2
       Rank: 2
781. mat5_compressed_write.at:1651: 781. Write structure array with 2D 32-bit signed integer fields (mat5_compressed_write.at:1651): FAILED (mat5_compressed_write.at:1704)

#                             -*- compilation -*-
782. mat5_compressed_write.at:1734: testing Write structure array with 2D 32-bit unsigned integer fields ...
./mat5_compressed_write.at:1736: $builddir/test_mat -v 5 -z -c uint32 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1787: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.800010615 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/782/stdout	2016-01-14 06:21:35.808012052 +0100
@@ -20,9 +20,9 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 32599 0 1074266112 
+50 0 1073741824 0 
+1459225135 1072693248 0 1074790400 
 }
       Name: field2
       Rank: 2
782. mat5_compressed_write.at:1734: 782. Write structure array with 2D 32-bit unsigned integer fields (mat5_compressed_write.at:1734): FAILED (mat5_compressed_write.at:1787)

#                             -*- compilation -*-
783. mat5_compressed_write.at:1817: testing Write structure array with 2D 16-bit signed integer fields ...
./mat5_compressed_write.at:1819: $builddir/test_mat -v 5 -z -c int16 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1870: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.840017803 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/783/stdout	2016-01-14 06:21:35.848019240 +0100
@@ -20,9 +20,9 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 2 
+50 0 0 3 
+0 0 1 4 
 }
       Name: field2
       Rank: 2
783. mat5_compressed_write.at:1817: 783. Write structure array with 2D 16-bit signed integer fields (mat5_compressed_write.at:1817): FAILED (mat5_compressed_write.at:1870)

#                             -*- compilation -*-
784. mat5_compressed_write.at:1900: testing Write structure array with 2D 16-bit unsigned integer fields ...
./mat5_compressed_write.at:1902: $builddir/test_mat -v 5 -z -c uint16 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:1953: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.876024272 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/784/stdout	2016-01-14 06:21:35.884025709 +0100
@@ -20,9 +20,9 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 16256 
+50 0 0 0 
+0 0 0 16384 
 }
       Name: field2
       Rank: 2
784. mat5_compressed_write.at:1900: 784. Write structure array with 2D 16-bit unsigned integer fields (mat5_compressed_write.at:1900): FAILED (mat5_compressed_write.at:1953)

#                             -*- compilation -*-
785. mat5_compressed_write.at:1983: testing Write structure array with 2D 8-bit signed integer fields ...
./mat5_compressed_write.at:1985: $builddir/test_mat -v 5 -z -c int8 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2036: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.912030741 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/785/stdout	2016-01-14 06:21:35.924032897 +0100
@@ -20,9 +20,9 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 51 
+50 0 0 97 
+97 0 120 0 
 }
       Name: field2
       Rank: 2
785. mat5_compressed_write.at:1983: 785. Write structure array with 2D 8-bit signed integer fields (mat5_compressed_write.at:1983): FAILED (mat5_compressed_write.at:2036)

#                             -*- compilation -*-
786. mat5_compressed_write.at:2066: testing Write structure array with 2D 8-bit unsigned integer fields ...
./mat5_compressed_write.at:2068: $builddir/test_mat -v 5 -z -c uint8 write_struct_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2119: $builddir/test_mat readvar test_write_struct_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.952037929 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/786/stdout	2016-01-14 06:21:35.964040085 +0100
@@ -20,9 +20,9 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 136 0 221 
+50 254 0 185 
+240 127 0 1 
 }
       Name: field2
       Rank: 2
786. mat5_compressed_write.at:2066: 786. Write structure array with 2D 8-bit unsigned integer fields (mat5_compressed_write.at:2066): FAILED (mat5_compressed_write.at:2119)

#                             -*- compilation -*-
787. mat5_compressed_write.at:2149: testing Write structure array with 2D double-precision complex fields ...
./mat5_compressed_write.at:2151: $builddir/test_mat -v 5 -z write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2202: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:35.992045117 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/787/stdout	2016-01-14 06:21:36.000046580 +0100
@@ -10,9 +10,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 4.74303e-322i 88 + 1.01185e-320i 40 + 1.94666e-316i 91 + 1.94665e-316i 
+87 + 1.9098e-313i 39 + 0i 90 + 6.95281e-310i 42 + 0i 
+38 + 1.2732e-313i 89 + 1.94666e-316i 41 + 4.94066e-324i 92 + 4.00193e-322i 
 }
 }
787. mat5_compressed_write.at:2149: 787. Write structure array with 2D double-precision complex fields (mat5_compressed_write.at:2149): FAILED (mat5_compressed_write.at:2202)

#                             -*- compilation -*-
788. mat5_compressed_write.at:2232: testing Write structure array with 2D single-precision complex fields ...
./mat5_compressed_write.at:2234: $builddir/test_mat -v 5 -z -c single write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2285: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.028051260 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/788/stdout	2016-01-14 06:21:36.040053282 +0100
@@ -10,9 +10,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 6.72623e-44i 88 + 9.80909e-45i 40 + 2.86986e-42i 91 + 0i 
+87 + 0i 39 + 5.60519e-45i 90 + 0i 42 + 1.43325e-37i 
+38 + 2.8026e-45i 89 + 9.80909e-45i 41 + 0i 92 + 0i 
 }
 }
788. mat5_compressed_write.at:2232: 788. Write structure array with 2D single-precision complex fields (mat5_compressed_write.at:2232): FAILED (mat5_compressed_write.at:2285)

#                             -*- compilation -*-
789. mat5_compressed_write.at:2315: testing Write structure array with 2D 64-bit signed integer complex fields ...
./mat5_compressed_write.at:2318: $builddir/test_mat -v 5 -z -c int64 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2369: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.068058003 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/789/stdout	2016-01-14 06:21:36.080060025 +0100
@@ -10,9 +10,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 96i 88 + 2048i 40 + 36472128i 91 + 36472048i 
+87 + 51539607554i 39 + 0i 90 + 140727479933808i 42 + 0i 
+38 + 60129542152i 89 + 36472160i 41 + 1i 92 + 81i 
 }
 }
789. mat5_compressed_write.at:2315: 789. Write structure array with 2D 64-bit signed integer complex fields (mat5_compressed_write.at:2315): FAILED (mat5_compressed_write.at:2369)

#                             -*- compilation -*-
790. mat5_compressed_write.at:2399: testing Write structure array with 2D 64-bit unsigned integer complex fields ...
./mat5_compressed_write.at:2402: $builddir/test_mat -v 5 -z -c uint64 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2453: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.108064746 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/790/stdout	2016-01-14 06:21:36.120066769 +0100
@@ -10,9 +10,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 96i 88 + 2048i 40 + 30762304i 91 + 30762224i 
+87 + 55834574850i 39 + 0i 90 + 140727836879808i 42 + 0i 
+38 + 64424509448i 89 + 30762336i 41 + 1i 92 + 81i 
 }
 }
790. mat5_compressed_write.at:2399: 790. Write structure array with 2D 64-bit unsigned integer complex fields (mat5_compressed_write.at:2399): FAILED (mat5_compressed_write.at:2453)

#                             -*- compilation -*-
791. mat5_compressed_write.at:2483: testing Write structure array with 2D 32-bit signed integer complex fields ...
./mat5_compressed_write.at:2485: $builddir/test_mat -v 5 -z -c int32 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2536: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.148071489 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/791/stdout	2016-01-14 06:21:36.156072837 +0100
@@ -10,9 +10,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 48i 88 + 5i 40 + 2048i 91 + 0i 
+87 + 0i 39 + 4i 90 + 0i 42 + 20202848i 
+38 + 2i 89 + 12i 41 + 0i 92 + 0i 
 }
 }
791. mat5_compressed_write.at:2483: 791. Write structure array with 2D 32-bit signed integer complex fields (mat5_compressed_write.at:2483): FAILED (mat5_compressed_write.at:2536)

#                             -*- compilation -*-
792. mat5_compressed_write.at:2566: testing Write structure array with 2D 32-bit unsigned integer complex fields ...
./mat5_compressed_write.at:2568: $builddir/test_mat -v 5 -z -c uint32 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2619: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.188078232 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/792/stdout	2016-01-14 06:21:36.196079580 +0100
@@ -10,9 +10,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 48i 88 + 6i 40 + 2048i 91 + 0i 
+87 + 0i 39 + 4i 90 + 0i 42 + 30872928i 
+38 + 2i 89 + 13i 41 + 0i 92 + 0i 
 }
 }
792. mat5_compressed_write.at:2566: 792. Write structure array with 2D 32-bit unsigned integer complex fields (mat5_compressed_write.at:2566): FAILED (mat5_compressed_write.at:2619)

#                             -*- compilation -*-
793. mat5_compressed_write.at:2649: testing Write structure array with 2D 16-bit signed integer complex fields ...
./mat5_compressed_write.at:2651: $builddir/test_mat -v 5 -z -c int16 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2702: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.228084975 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/793/stdout	2016-01-14 06:21:36.236086323 +0100
@@ -10,9 +10,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 24i 88 + 0i 40 + 3i 91 + 0i 
+87 + 0i 39 + 2i 90 + 0i 42 + 10i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
793. mat5_compressed_write.at:2649: 793. Write structure array with 2D 16-bit signed integer complex fields (mat5_compressed_write.at:2649): FAILED (mat5_compressed_write.at:2702)

#                             -*- compilation -*-
794. mat5_compressed_write.at:2732: testing Write structure array with 2D 16-bit unsigned integer complex fields ...
./mat5_compressed_write.at:2734: $builddir/test_mat -v 5 -z -c uint16 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2785: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.260090369 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/794/stdout	2016-01-14 06:21:36.268091718 +0100
@@ -10,9 +10,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 24i 88 + 0i 40 + 4i 91 + 0i 
+87 + 0i 39 + 2i 90 + 0i 42 + 11i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
794. mat5_compressed_write.at:2732: 794. Write structure array with 2D 16-bit unsigned integer complex fields (mat5_compressed_write.at:2732): FAILED (mat5_compressed_write.at:2785)

#                             -*- compilation -*-
795. mat5_compressed_write.at:2815: testing Write structure array with 2D 8-bit signed integer complex fields ...
./mat5_compressed_write.at:2817: $builddir/test_mat -v 5 -z -c int8 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2868: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.300097112 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/795/stdout	2016-01-14 06:21:36.308098461 +0100
@@ -10,9 +10,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 12i 88 + 0i 40 + 0i 91 + 0i 
+87 + 0i 39 + 0i 90 + 0i 42 + 0i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
795. mat5_compressed_write.at:2815: 795. Write structure array with 2D 8-bit signed integer complex fields (mat5_compressed_write.at:2815): FAILED (mat5_compressed_write.at:2868)

#                             -*- compilation -*-
796. mat5_compressed_write.at:2898: testing Write structure array with 2D 8-bit unsigned integer complex fields ...
./mat5_compressed_write.at:2900: $builddir/test_mat -v 5 -z -c uint8 write_struct_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:2951: $builddir/test_mat readvar test_write_struct_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.340103855 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/796/stdout	2016-01-14 06:21:36.348105204 +0100
@@ -10,9 +10,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Name: field2
       Rank: 2
@@ -20,9 +20,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Name: field1
       Rank: 2
@@ -30,9 +30,9 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Name: field2
       Rank: 2
@@ -40,8 +40,8 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 12i 88 + 0i 40 + 0i 91 + 0i 
+87 + 0i 39 + 0i 90 + 0i 42 + 0i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
796. mat5_compressed_write.at:2898: 796. Write structure array with 2D 8-bit unsigned integer complex fields (mat5_compressed_write.at:2898): FAILED (mat5_compressed_write.at:2951)

#                             -*- compilation -*-
799. mat5_compressed_write.at:3127: testing Write cell array with 2D double-precision fields ...
./mat5_compressed_write.at:3129: $builddir/test_mat -v 5 -z write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3176: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.472126108 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/799/stdout	2016-01-14 06:21:36.484128130 +0100
@@ -18,26 +18,26 @@
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 9.88131e-324 2.47033e-323 3.95253e-323 
+50 1.4822e-323 2.96439e-323 4.44659e-323 
+4.94066e-324 1.97626e-323 3.45846e-323 4.94066e-323 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array
  Data Type: IEEE 754 double-precision
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+1.13635e-322 1.28457e-322 1.43279e-322 1.58101e-322 
+1.18576e-322 1.33398e-322 1.4822e-322 1.63042e-322 
+1.23516e-322 1.38338e-322 1.5316e-322 1.67982e-322 
 }
 }
799. mat5_compressed_write.at:3127: 799. Write cell array with 2D double-precision fields (mat5_compressed_write.at:3127): FAILED (mat5_compressed_write.at:3176)

#                             -*- compilation -*-
800. mat5_compressed_write.at:3204: testing Write cell array with 2D single-precision fields ...
./mat5_compressed_write.at:3206: $builddir/test_mat -v 5 -z -c single write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3253: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.512132851 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/800/stdout	2016-01-14 06:21:36.520134199 +0100
@@ -18,26 +18,26 @@
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 4.2039e-45 8.40779e-45 
+50 1.4013e-45 5.60519e-45 9.80909e-45 
+0 2.8026e-45 7.00649e-45 1.12104e-44 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array
  Data Type: IEEE 754 single-precision
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+2.94273e-44 3.36312e-44 3.78351e-44 4.2039e-44 
+3.08286e-44 3.50325e-44 3.92364e-44 4.34403e-44 
+3.22299e-44 3.64338e-44 4.06377e-44 4.48416e-44 
 }
 }
800. mat5_compressed_write.at:3204: 800. Write cell array with 2D single-precision fields (mat5_compressed_write.at:3204): FAILED (mat5_compressed_write.at:3253)

#                             -*- compilation -*-
801. mat5_compressed_write.at:3281: testing Write cell array with 2D 64-bit signed integer fields ...
./mat5_compressed_write.at:3284: $builddir/test_mat -v 5 -z -c int64 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3331: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.548138919 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/801/stdout	2016-01-14 06:21:36.560140942 +0100
@@ -18,26 +18,26 @@
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 2 5 8 
+50 3 6 9 
+1 4 7 10 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array
  Data Type: 64-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+23 26 29 32 
+24 27 30 33 
+25 28 31 34 
 }
 }
801. mat5_compressed_write.at:3281: 801. Write cell array with 2D 64-bit signed integer fields (mat5_compressed_write.at:3281): FAILED (mat5_compressed_write.at:3331)

#                             -*- compilation -*-
802. mat5_compressed_write.at:3359: testing Write cell array with 2D 64-bit unsigned integer fields ...
./mat5_compressed_write.at:3362: $builddir/test_mat -v 5 -z -c uint64 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3409: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.588145662 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/802/stdout	2016-01-14 06:21:36.600147685 +0100
@@ -18,26 +18,26 @@
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 1157159078456920585 2893323226570760737 6370168 
+50 1735880461161533969 3472044609275374121 578437695752307201 
+578437695752307201 2314601843866147353 6369841 1157159078456920585 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array
  Data Type: 64-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+140093928864456 64424509440 4260944 140093920427464 
+140093926666124 140093928864456 4260226 140093928864456 
+7 140097538228223 870 140730661224568 
 }
 }
802. mat5_compressed_write.at:3359: 802. Write cell array with 2D 64-bit unsigned integer fields (mat5_compressed_write.at:3359): FAILED (mat5_compressed_write.at:3409)

#                             -*- compilation -*-
803. mat5_compressed_write.at:3437: testing Write cell array with 2D 32-bit signed integer fields ...
./mat5_compressed_write.at:3439: $builddir/test_mat -v 5 -z -c int32 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3486: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.628152405 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/803/stdout	2016-01-14 06:21:36.636153754 +0100
@@ -18,26 +18,26 @@
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 3 6 
+50 1 4 7 
+3178496 2 5 8 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array
  Data Type: 32-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+21 24 27 30 
+22 25 28 31 
+23 26 29 32 
 }
 }
803. mat5_compressed_write.at:3437: 803. Write cell array with 2D 32-bit signed integer fields (mat5_compressed_write.at:3437): FAILED (mat5_compressed_write.at:3486)

#                             -*- compilation -*-
804. mat5_compressed_write.at:3514: testing Write cell array with 2D 32-bit unsigned integer fields ...
./mat5_compressed_write.at:3516: $builddir/test_mat -v 5 -z -c uint32 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3563: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.668159149 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/804/stdout	2016-01-14 06:21:36.680161171 +0100
@@ -18,26 +18,26 @@
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 32685 0 1074266112 
+50 0 1073741824 0 
+828858927 1072693248 0 1074790400 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array
  Data Type: 32-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+0 1076363264 0 1076756480 
+1076232192 0 1076625408 0 
+0 1076494336 0 1076887552 
 }
 }
804. mat5_compressed_write.at:3514: 804. Write cell array with 2D 32-bit unsigned integer fields (mat5_compressed_write.at:3514): FAILED (mat5_compressed_write.at:3563)

#                             -*- compilation -*-
805. mat5_compressed_write.at:3591: testing Write cell array with 2D 16-bit signed integer fields ...
./mat5_compressed_write.at:3593: $builddir/test_mat -v 5 -z -c int16 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3640: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.708165892 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/805/stdout	2016-01-14 06:21:36.720167915 +0100
@@ -18,26 +18,26 @@
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 2 
+50 0 0 3 
+0 0 1 4 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array
  Data Type: 16-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+17 20 23 26 
+18 21 24 27 
+19 22 25 28 
 }
 }
805. mat5_compressed_write.at:3591: 805. Write cell array with 2D 16-bit signed integer fields (mat5_compressed_write.at:3591): FAILED (mat5_compressed_write.at:3640)

#                             -*- compilation -*-
806. mat5_compressed_write.at:3668: testing Write cell array with 2D 16-bit unsigned integer fields ...
./mat5_compressed_write.at:3670: $builddir/test_mat -v 5 -z -c uint16 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3717: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.752173309 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/806/stdout	2016-01-14 06:21:36.760174658 +0100
@@ -18,26 +18,26 @@
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 16256 
+50 0 0 0 
+0 0 0 16384 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array
  Data Type: 16-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+0 16672 0 16720 
+16656 0 16704 0 
+0 16688 0 16736 
 }
 }
806. mat5_compressed_write.at:3668: 806. Write cell array with 2D 16-bit unsigned integer fields (mat5_compressed_write.at:3668): FAILED (mat5_compressed_write.at:3717)

#                             -*- compilation -*-
807. mat5_compressed_write.at:3745: testing Write cell array with 2D 8-bit signed integer fields ...
./mat5_compressed_write.at:3747: $builddir/test_mat -v 5 -z -c int8 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3794: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.788179378 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/807/stdout	2016-01-14 06:21:36.796180726 +0100
@@ -18,26 +18,26 @@
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 0 0 51 
+50 0 0 97 
+97 0 120 0 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array
  Data Type: 8-bit, signed integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+9 12 15 18 
+10 13 16 19 
+11 14 17 20 
 }
 }
807. mat5_compressed_write.at:3745: 807. Write cell array with 2D 8-bit signed integer fields (mat5_compressed_write.at:3745): FAILED (mat5_compressed_write.at:3794)

#                             -*- compilation -*-
808. mat5_compressed_write.at:3822: testing Write cell array with 2D 8-bit unsigned integer fields ...
./mat5_compressed_write.at:3824: $builddir/test_mat -v 5 -z -c uint8 write_cell_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3871: $builddir/test_mat readvar test_write_cell_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.824185446 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/808/stdout	2016-01-14 06:21:36.836187469 +0100
@@ -18,26 +18,26 @@
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-13 16 19 22 
-14 17 20 23 
-15 18 21 24 
+25 28 31 34 
+26 29 32 35 
+27 30 33 36 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-25 28 31 34 
-26 29 32 35 
-27 30 33 36 
+49 201 0 118 
+50 252 0 215 
+60 127 0 114 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array
  Data Type: 8-bit, unsigned integer
 {
-37 40 43 46 
-38 41 44 47 
-39 42 45 48 
+145 0 0 0 
+171 0 0 0 
+64 0 3 0 
 }
 }
808. mat5_compressed_write.at:3822: 808. Write cell array with 2D 8-bit unsigned integer fields (mat5_compressed_write.at:3822): FAILED (mat5_compressed_write.at:3871)

#                             -*- compilation -*-
809. mat5_compressed_write.at:3899: testing Write cell array with 2D double-precision complex fields ...
./mat5_compressed_write.at:3901: $builddir/test_mat -v 5 -z write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:3948: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.864192190 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/809/stdout	2016-01-14 06:21:36.872193538 +0100
@@ -9,35 +9,35 @@
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Double Precision Array (complex)
  Data Type: IEEE 754 double-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 4.74303e-322i 88 + 1.01185e-320i 40 + 0i 91 + 8.34835e-317i 
+87 + 1.9098e-313i 39 + 0i 90 + 6.95284e-310i 42 + 0i 
+38 + 1.2732e-313i 89 + 8.34839e-317i 41 + 4.94066e-324i 92 + 4.00193e-322i 
 }
 }
809. mat5_compressed_write.at:3899: 809. Write cell array with 2D double-precision complex fields (mat5_compressed_write.at:3899): FAILED (mat5_compressed_write.at:3948)

#                             -*- compilation -*-
810. mat5_compressed_write.at:3978: testing Write cell array with 2D single-precision complex fields ...
./mat5_compressed_write.at:3980: $builddir/test_mat -v 5 -z -c single write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4027: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.904198933 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/810/stdout	2016-01-14 06:21:36.916200956 +0100
@@ -9,35 +9,35 @@
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: Single Precision Array (complex)
  Data Type: IEEE 754 single-precision
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 6.72623e-44i 88 + 9.80909e-45i 40 + 2.86986e-42i 91 + 0i 
+87 + 0i 39 + 5.60519e-45i 90 + 0i 42 + 1.85125e-38i 
+38 + 2.8026e-45i 89 + 9.80909e-45i 41 + 0i 92 + 0i 
 }
 }
810. mat5_compressed_write.at:3978: 810. Write cell array with 2D single-precision complex fields (mat5_compressed_write.at:3978): FAILED (mat5_compressed_write.at:4027)

#                             -*- compilation -*-
811. mat5_compressed_write.at:4057: testing Write cell array with 2D 64-bit signed integer complex fields ...
./mat5_compressed_write.at:4060: $builddir/test_mat -v 5 -z -c int64 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4107: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.944205676 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/811/stdout	2016-01-14 06:21:36.952207024 +0100
@@ -9,35 +9,35 @@
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, signed integer array (complex)
  Data Type: 64-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 96i 88 + 2048i 40 + 0i 91 + 22578400i 
+87 + 51539607554i 39 + 0i 90 + 140731264781008i 42 + 0i 
+38 + 60129542152i 89 + 22578480i 41 + 1i 92 + 81i 
 }
 }
811. mat5_compressed_write.at:4057: 811. Write cell array with 2D 64-bit signed integer complex fields (mat5_compressed_write.at:4057): FAILED (mat5_compressed_write.at:4107)

#                             -*- compilation -*-
812. mat5_compressed_write.at:4137: testing Write cell array with 2D 64-bit unsigned integer complex fields ...
./mat5_compressed_write.at:4140: $builddir/test_mat -v 5 -z -c uint64 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4187: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:36.984212419 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/812/stdout	2016-01-14 06:21:36.992213767 +0100
@@ -9,35 +9,35 @@
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 64-bit, unsigned integer array (complex)
  Data Type: 64-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 96i 88 + 2048i 40 + 0i 91 + 14357728i 
+87 + 55834574850i 39 + 0i 90 + 140720872149984i 42 + 0i 
+38 + 64424509448i 89 + 14357808i 41 + 1i 92 + 81i 
 }
 }
812. mat5_compressed_write.at:4137: 812. Write cell array with 2D 64-bit unsigned integer complex fields (mat5_compressed_write.at:4137): FAILED (mat5_compressed_write.at:4187)

#                             -*- compilation -*-
813. mat5_compressed_write.at:4217: testing Write cell array with 2D 32-bit signed integer complex fields ...
./mat5_compressed_write.at:4219: $builddir/test_mat -v 5 -z -c int32 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4266: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.020218252 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/813/stdout	2016-01-14 06:21:37.028219515 +0100
@@ -9,35 +9,35 @@
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, signed integer array (complex)
  Data Type: 32-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 48i 88 + 5i 40 + 2048i 91 + 0i 
+87 + 0i 39 + 4i 90 + 0i 42 + 11576624i 
+38 + 2i 89 + 12i 41 + 0i 92 + 0i 
 }
 }
813. mat5_compressed_write.at:4217: 813. Write cell array with 2D 32-bit signed integer complex fields (mat5_compressed_write.at:4217): FAILED (mat5_compressed_write.at:4266)

#                             -*- compilation -*-
814. mat5_compressed_write.at:4296: testing Write cell array with 2D 32-bit unsigned integer complex fields ...
./mat5_compressed_write.at:4298: $builddir/test_mat -v 5 -z -c uint32 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4345: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.060224568 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/814/stdout	2016-01-14 06:21:37.068225832 +0100
@@ -9,35 +9,35 @@
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 32-bit, unsigned integer array (complex)
  Data Type: 32-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 48i 88 + 6i 40 + 2048i 91 + 0i 
+87 + 0i 39 + 4i 90 + 0i 42 + 23483696i 
+38 + 2i 89 + 13i 41 + 0i 92 + 0i 
 }
 }
814. mat5_compressed_write.at:4296: 814. Write cell array with 2D 32-bit unsigned integer complex fields (mat5_compressed_write.at:4296): FAILED (mat5_compressed_write.at:4345)

#                             -*- compilation -*-
815. mat5_compressed_write.at:4375: testing Write cell array with 2D 16-bit signed integer complex fields ...
./mat5_compressed_write.at:4377: $builddir/test_mat -v 5 -z -c int16 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4424: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.096230253 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/815/stdout	2016-01-14 06:21:37.104231517 +0100
@@ -9,35 +9,35 @@
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, signed integer array (complex)
  Data Type: 16-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 24i 88 + 0i 40 + 3i 91 + 0i 
+87 + 0i 39 + 2i 90 + 0i 42 + 10i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
815. mat5_compressed_write.at:4375: 815. Write cell array with 2D 16-bit signed integer complex fields (mat5_compressed_write.at:4375): FAILED (mat5_compressed_write.at:4424)

#                             -*- compilation -*-
816. mat5_compressed_write.at:4454: testing Write cell array with 2D 16-bit unsigned integer complex fields ...
./mat5_compressed_write.at:4456: $builddir/test_mat -v 5 -z -c uint16 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4503: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.136236570 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/816/stdout	2016-01-14 06:21:37.148238465 +0100
@@ -9,35 +9,35 @@
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 16-bit, unsigned integer array (complex)
  Data Type: 16-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 24i 88 + 0i 40 + 4i 91 + 0i 
+87 + 0i 39 + 2i 90 + 0i 42 + 11i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
816. mat5_compressed_write.at:4454: 816. Write cell array with 2D 16-bit unsigned integer complex fields (mat5_compressed_write.at:4454): FAILED (mat5_compressed_write.at:4503)

#                             -*- compilation -*-
817. mat5_compressed_write.at:4533: testing Write cell array with 2D 8-bit signed integer complex fields ...
./mat5_compressed_write.at:4535: $builddir/test_mat -v 5 -z -c int8 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4582: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.176242887 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/817/stdout	2016-01-14 06:21:37.184244150 +0100
@@ -9,35 +9,35 @@
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, signed integer array (complex)
  Data Type: 8-bit, signed integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 12i 88 + 0i 40 + 0i 91 + 0i 
+87 + 0i 39 + 0i 90 + 0i 42 + 0i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
817. mat5_compressed_write.at:4533: 817. Write cell array with 2D 8-bit signed integer complex fields (mat5_compressed_write.at:4533): FAILED (mat5_compressed_write.at:4582)

#                             -*- compilation -*-
818. mat5_compressed_write.at:4612: testing Write cell array with 2D 8-bit unsigned integer complex fields ...
./mat5_compressed_write.at:4614: $builddir/test_mat -v 5 -z -c uint8 write_cell_complex_2d_numeric
stderr:
stdout:
./mat5_compressed_write.at:4661: $builddir/test_mat readvar test_write_cell_complex_2d_numeric.mat a
stderr:
--- expout	2016-01-14 06:21:37.212248572 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/818/stdout	2016-01-14 06:21:37.220249835 +0100
@@ -9,35 +9,35 @@
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-1 + 51i 4 + 54i 7 + 57i 10 + 60i 
-2 + 52i 5 + 55i 8 + 58i 11 + 61i 
-3 + 53i 6 + 56i 9 + 59i 12 + 62i 
+1 + 13i 52 + 64i 4 + 16i 55 + 67i 
+51 + 63i 3 + 15i 54 + 66i 6 + 18i 
+2 + 14i 53 + 65i 5 + 17i 56 + 68i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-13 + 63i 16 + 66i 19 + 69i 22 + 72i 
-14 + 64i 17 + 67i 20 + 70i 23 + 73i 
-15 + 65i 18 + 68i 21 + 71i 24 + 74i 
+13 + 25i 64 + 76i 16 + 28i 67 + 79i 
+63 + 75i 15 + 27i 66 + 78i 18 + 30i 
+14 + 26i 65 + 77i 17 + 29i 68 + 80i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-25 + 75i 28 + 78i 31 + 81i 34 + 84i 
-26 + 76i 29 + 79i 32 + 82i 35 + 85i 
-27 + 77i 30 + 80i 33 + 83i 36 + 86i 
+25 + 37i 76 + 88i 28 + 40i 79 + 91i 
+75 + 87i 27 + 39i 78 + 90i 30 + 42i 
+26 + 38i 77 + 89i 29 + 41i 80 + 92i 
 }
       Rank: 2
 Dimensions: 3 x 4
 Class Type: 8-bit, unsigned integer array (complex)
  Data Type: 8-bit, unsigned integer
 {
-37 + 87i 40 + 90i 43 + 93i 46 + 96i 
-38 + 88i 41 + 91i 44 + 94i 47 + 97i 
-39 + 89i 42 + 92i 45 + 95i 48 + 98i 
+37 + 12i 88 + 0i 40 + 0i 91 + 0i 
+87 + 0i 39 + 0i 90 + 0i 42 + 0i 
+38 + 0i 89 + 0i 41 + 2i 92 + 0i 
 }
 }
818. mat5_compressed_write.at:4612: 818. Write cell array with 2D 8-bit unsigned integer complex fields (mat5_compressed_write.at:4612): FAILED (mat5_compressed_write.at:4661)

#                             -*- compilation -*-
985. mat5_compressed_extended_sparse.at:390: testing Write 2D sparse complex single-precision array ...
./mat5_compressed_extended_sparse.at:393: $builddir/test_mat -v 5 -z -c single write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/985/test-source: line 93: 29464 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c single write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:393: exit code was 139, expected 0
985. mat5_compressed_extended_sparse.at:390: 985. Write 2D sparse complex single-precision array (mat5_compressed_extended_sparse.at:390): FAILED (mat5_compressed_extended_sparse.at:393)

#                             -*- compilation -*-
986. mat5_compressed_extended_sparse.at:433: testing Write 2D sparse complex 64-bit integer complex array ...
./mat5_compressed_extended_sparse.at:437: $builddir/test_mat -v 5 -z -c int64 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/986/test-source: line 96: 29492 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int64 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:437: exit code was 139, expected 0
986. mat5_compressed_extended_sparse.at:433: 986. Write 2D sparse complex 64-bit integer complex array (mat5_compressed_extended_sparse.at:433): FAILED (mat5_compressed_extended_sparse.at:437)

#                             -*- compilation -*-
987. mat5_compressed_extended_sparse.at:477: testing Write 2D sparse complex 64-bit unsigned integer complex array ...
./mat5_compressed_extended_sparse.at:481: $builddir/test_mat -v 5 -z -c uint64 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/987/test-source: line 96: 29520 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint64 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:481: exit code was 139, expected 0
987. mat5_compressed_extended_sparse.at:477: 987. Write 2D sparse complex 64-bit unsigned integer complex array (mat5_compressed_extended_sparse.at:477): FAILED (mat5_compressed_extended_sparse.at:481)

#                             -*- compilation -*-
988. mat5_compressed_extended_sparse.at:521: testing Write 2D sparse complex 32-bit integer complex array ...
./mat5_compressed_extended_sparse.at:524: $builddir/test_mat -v 5 -z -c int32 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/988/test-source: line 93: 29547 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int32 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:524: exit code was 139, expected 0
988. mat5_compressed_extended_sparse.at:521: 988. Write 2D sparse complex 32-bit integer complex array (mat5_compressed_extended_sparse.at:521): FAILED (mat5_compressed_extended_sparse.at:524)

#                             -*- compilation -*-
989. mat5_compressed_extended_sparse.at:564: testing Write 2D sparse complex 32-bit unsigned integer complex array ...
./mat5_compressed_extended_sparse.at:567: $builddir/test_mat -v 5 -z -c uint32 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/989/test-source: line 93: 29574 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint32 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:567: exit code was 139, expected 0
989. mat5_compressed_extended_sparse.at:564: 989. Write 2D sparse complex 32-bit unsigned integer complex array (mat5_compressed_extended_sparse.at:564): FAILED (mat5_compressed_extended_sparse.at:567)

#                             -*- compilation -*-
990. mat5_compressed_extended_sparse.at:607: testing Write 2D sparse complex 16-bit integer complex array ...
./mat5_compressed_extended_sparse.at:610: $builddir/test_mat -v 5 -z -c int16 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/990/test-source: line 93: 29601 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int16 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:610: exit code was 139, expected 0
990. mat5_compressed_extended_sparse.at:607: 990. Write 2D sparse complex 16-bit integer complex array (mat5_compressed_extended_sparse.at:607): FAILED (mat5_compressed_extended_sparse.at:610)

#                             -*- compilation -*-
991. mat5_compressed_extended_sparse.at:650: testing Write 2D sparse complex 16-bit unsigned integer complex array ...
./mat5_compressed_extended_sparse.at:653: $builddir/test_mat -v 5 -z -c uint16 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/991/test-source: line 93: 29628 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint16 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:653: exit code was 139, expected 0
991. mat5_compressed_extended_sparse.at:650: 991. Write 2D sparse complex 16-bit unsigned integer complex array (mat5_compressed_extended_sparse.at:650): FAILED (mat5_compressed_extended_sparse.at:653)

#                             -*- compilation -*-
992. mat5_compressed_extended_sparse.at:693: testing Write 2D sparse complex 8-bit integer complex array ...
./mat5_compressed_extended_sparse.at:696: $builddir/test_mat -v 5 -z -c int8 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/992/test-source: line 93: 29655 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c int8 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:696: exit code was 139, expected 0
992. mat5_compressed_extended_sparse.at:693: 992. Write 2D sparse complex 8-bit integer complex array (mat5_compressed_extended_sparse.at:693): FAILED (mat5_compressed_extended_sparse.at:696)

#                             -*- compilation -*-
993. mat5_compressed_extended_sparse.at:736: testing Write 2D sparse complex 8-bit unsigned integer complex array ...
./mat5_compressed_extended_sparse.at:739: $builddir/test_mat -v 5 -z -c uint8 write_complex_sparse
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/993/test-source: line 93: 29682 Segmentation fault      (core dumped) $builddir/test_mat -v 5 -z -c uint8 write_complex_sparse
stdout:
./mat5_compressed_extended_sparse.at:739: exit code was 139, expected 0
993. mat5_compressed_extended_sparse.at:736: 993. Write 2D sparse complex 8-bit unsigned integer complex array (mat5_compressed_extended_sparse.at:736): FAILED (mat5_compressed_extended_sparse.at:739)

#                             -*- compilation -*-
1034. struct_api.at:223: testing Linearly index a structure ...
./struct_api.at:488: $builddir/test_mat struct_api_getlinear
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/1034/test-source: line 304: 30224 Segmentation fault      (core dumped) $builddir/test_mat struct_api_getlinear
--- expout	2016-01-14 06:21:43.321061149 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/1034/stdout	2016-01-14 06:21:43.321061149 +0100
@@ -1,261 +0,0 @@
-      Name: a
-      Rank: 2
-Dimensions: 4 x 1
-Class Type: Structure
- Data Type: Structure
-Fields[12] {
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-1 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-13 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-1 + 13i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-4 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-16 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-4 + 16i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-7 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-19 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-7 + 19i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-10 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-22 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-10 + 22i 
-}
-}
-      Name: a
-      Rank: 2
-Dimensions: 3 x 1
-Class Type: Structure
- Data Type: Structure
-Fields[9] {
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-0 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-12 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-0 + 12i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-1 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-13 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-1 + 13i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-2 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-14 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-2 + 14i 
-}
-}
-      Name: a
-      Rank: 2
-Dimensions: 3 x 1
-Class Type: Structure
- Data Type: Structure
-Fields[9] {
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-0 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-12 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-0 + 12i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-4 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-16 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-4 + 16i 
-}
-      Name: r
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-8 
-}
-      Name: c
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-20 
-}
-      Name: z
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-8 + 20i 
-}
-}
./struct_api.at:488: exit code was 139, expected 0
1034. struct_api.at:223: 1034. Linearly index a structure (struct_api.at:223): FAILED (struct_api.at:488)

#                             -*- compilation -*-
1037. cell_api.at:132: testing Linearly index cell array ...
./cell_api.at:262: $builddir/test_mat  cell_api_getlinear
stderr:
/home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/1037/test-source: line 169: 30306 Segmentation fault      (core dumped) $builddir/test_mat cell_api_getlinear
--- expout	2016-01-14 06:21:43.521082597 +0100
+++ /home/marten/Projects/matio-matio/test//testsuite.dir/at-groups/1037/stdout	2016-01-14 06:21:43.521082597 +0100
@@ -1,126 +0,0 @@
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-0 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-1 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-2 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-3 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-4 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-5 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-6 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-7 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-0 + 4i 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-1 + 5i 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-2 + 6i 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-3 + 7i 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-1 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-5 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-1 + 5i 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-2 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array
- Data Type: IEEE 754 double-precision
-{
-6 
-}
-      Rank: 2
-Dimensions: 1 x 1
-Class Type: Double Precision Array (complex)
- Data Type: IEEE 754 double-precision
-{
-2 + 6i 
-}
./cell_api.at:262: exit code was 139, expected 0
1037. cell_api.at:132: 1037. Linearly index cell array (cell_api.at:132): FAILED (cell_api.at:262)


## ------------- ##
## ../config.log ##
## ------------- ##
| This file contains any messages produced by compilers while
| running configure, to aid debugging if configure makes a mistake.
| 
| It was created by MATIO configure 1.5.2, which was
| generated by GNU Autoconf 2.69.  Invocation command line was
| 
|   $ ./configure CPPFLAGS=-DDEBUG CFLAGS=-g -O0
| 
| ## --------- ##
| ## Platform. ##
| ## --------- ##
| 
| hostname = marten-asus
| uname -m = x86_64
| uname -r = 4.2.0-22-generic
| uname -s = Linux
| uname -v = #27-Ubuntu SMP Thu Dec 17 22:57:08 UTC 2015
| 
| /usr/bin/uname -p = unknown
| /bin/uname -X     = unknown
| 
| /bin/arch              = unknown
| /usr/bin/arch -k       = unknown
| /usr/convex/getsysinfo = unknown
| /usr/bin/hostinfo      = unknown
| /bin/machine           = unknown
| /usr/bin/oslevel       = unknown
| /bin/universe          = unknown
| 
| PATH: /usr/local/sbin
| PATH: /usr/local/bin
| PATH: /usr/sbin
| PATH: /usr/bin
| PATH: /sbin
| PATH: /bin
| PATH: /usr/games
| PATH: /usr/local/games
| 
| 
| ## ----------- ##
| ## Core tests. ##
| ## ----------- ##
| 
| configure:2488: checking for a BSD-compatible install
| configure:2556: result: /usr/bin/install -c
| configure:2567: checking whether build environment is sane
| configure:2622: result: yes
| configure:2660: WARNING: 'missing' script is too old or missing
| configure:2773: checking for a thread-safe mkdir -p
| configure:2812: result: /bin/mkdir -p
| configure:2819: checking for gawk
| configure:2835: found /usr/bin/gawk
| configure:2846: result: gawk
| configure:2857: checking whether make sets $(MAKE)
| configure:2879: result: yes
| configure:2908: checking whether make supports nested variables
| configure:2925: result: yes
| configure:3062: checking whether make supports nested variables
| configure:3079: result: yes
| configure:3091: checking whether to enable maintainer-specific portions of Makefiles
| configure:3100: result: no
| configure:3118: checking build system type
| configure:3132: result: x86_64-unknown-linux-gnu
| configure:3152: checking host system type
| configure:3165: result: x86_64-unknown-linux-gnu
| configure:3276: checking for pgcc
| configure:3306: result: no
| configure:3276: checking for icc
| configure:3306: result: no
| configure:3276: checking for gcc
| configure:3292: found /usr/bin/gcc
| configure:3303: result: gcc
| configure:3334: checking for C compiler version
| configure:3343: gcc --version >&5
| gcc (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010
| Copyright (C) 2015 Free Software Foundation, Inc.
| This is free software; see the source for copying conditions.  There is NO
| warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
| 
| configure:3354: $? = 0
| configure:3343: gcc -v >&5
| Using built-in specs.
| COLLECT_GCC=gcc
| COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper
| Target: x86_64-linux-gnu
| Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.2.1-22ubuntu2' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
| Thread model: posix
| gcc version 5.2.1 20151010 (Ubuntu 5.2.1-22ubuntu2) 
| configure:3354: $? = 0
| configure:3343: gcc -V >&5
| gcc: error: unrecognized command line option '-V'
| gcc: fatal error: no input files
| compilation terminated.
| configure:3354: $? = 1
| configure:3343: gcc -qversion >&5
| gcc: error: unrecognized command line option '-qversion'
| gcc: fatal error: no input files
| compilation terminated.
| configure:3354: $? = 1
| configure:3374: checking whether the C compiler works
| configure:3396: gcc -g -O0 -DDEBUG  conftest.c  >&5
| configure:3400: $? = 0
| configure:3448: result: yes
| configure:3451: checking for C compiler default output file name
| configure:3453: result: a.out
| configure:3459: checking for suffix of executables
| configure:3466: gcc -o conftest -g -O0 -DDEBUG  conftest.c  >&5
| configure:3470: $? = 0
| configure:3492: result: 
| configure:3514: checking whether we are cross compiling
| configure:3522: gcc -o conftest -g -O0 -DDEBUG  conftest.c  >&5
| configure:3526: $? = 0
| configure:3533: ./conftest
| configure:3537: $? = 0
| configure:3552: result: no
| configure:3557: checking for suffix of object files
| configure:3579: gcc -c -g -O0 -DDEBUG conftest.c >&5
| configure:3583: $? = 0
| configure:3604: result: o
| configure:3608: checking whether we are using the GNU C compiler
| configure:3627: gcc -c -g -O0 -DDEBUG conftest.c >&5
| configure:3627: $? = 0
| configure:3636: result: yes
| configure:3645: checking whether gcc accepts -g
| configure:3665: gcc -c -g -DDEBUG conftest.c >&5
| configure:3665: $? = 0
| configure:3706: result: yes
| configure:3723: checking for gcc option to accept ISO C89
| configure:3786: gcc  -c -g -O0 -DDEBUG conftest.c >&5
| configure:3786: $? = 0
| configure:3799: result: none needed
| configure:3824: checking whether gcc understands -c and -o together
| configure:3846: gcc -c conftest.c -o conftest2.o
| configure:3849: $? = 0
| configure:3846: gcc -c conftest.c -o conftest2.o
| configure:3849: $? = 0
| configure:3861: result: yes
| configure:3886: checking debug mode
| configure:3890: result: no
| configure:3915: checking profile mode
| configure:3919: result: no
| configure:4073: checking how to print strings
| configure:4100: result: printf
| configure:4121: checking for a sed that does not truncate output
| configure:4185: result: /bin/sed
| configure:4203: checking for grep that handles long lines and -e
| configure:4261: result: /bin/grep
| configure:4266: checking for egrep
| configure:4328: result: /bin/grep -E
| configure:4333: checking for fgrep
| configure:4395: result: /bin/grep -F
| configure:4430: checking for ld used by gcc
| configure:4497: result: /usr/bin/ld
| configure:4504: checking if the linker (/usr/bin/ld) is GNU ld
| configure:4519: result: yes
| configure:4531: checking for BSD- or MS-compatible name lister (nm)
| configure:4580: result: /usr/bin/nm -B
| configure:4710: checking the name lister (/usr/bin/nm -B) interface
| configure:4717: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:4720: /usr/bin/nm -B "conftest.o"
| configure:4723: output
| 0000000000000000 B some_variable
| configure:4730: result: BSD nm
| configure:4733: checking whether ln -s works
| configure:4737: result: yes
| configure:4745: checking the maximum length of command line arguments
| configure:4876: result: 1572864
| configure:4893: checking whether the shell understands some XSI constructs
| configure:4903: result: yes
| configure:4907: checking whether the shell understands "+="
| configure:4913: result: yes
| configure:4948: checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format
| configure:4988: result: func_convert_file_noop
| configure:4995: checking how to convert x86_64-unknown-linux-gnu file names to toolchain format
| configure:5015: result: func_convert_file_noop
| configure:5022: checking for /usr/bin/ld option to reload object files
| configure:5029: result: -r
| configure:5103: checking for objdump
| configure:5119: found /usr/bin/objdump
| configure:5130: result: objdump
| configure:5162: checking how to recognize dependent libraries
| configure:5360: result: pass_all
| configure:5445: checking for dlltool
| configure:5475: result: no
| configure:5505: checking how to associate runtime and link libraries
| configure:5532: result: printf %s\n
| configure:5593: checking for ar
| configure:5609: found /usr/bin/ar
| configure:5620: result: ar
| configure:5657: checking for archiver @FILE support
| configure:5674: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:5674: $? = 0
| configure:5677: ar cru libconftest.a @conftest.lst >&5
| ar: `u' modifier ignored since `D' is the default (see `U')
| configure:5680: $? = 0
| configure:5685: ar cru libconftest.a @conftest.lst >&5
| ar: `u' modifier ignored since `D' is the default (see `U')
| ar: conftest.o: No such file or directory
| configure:5688: $? = 1
| configure:5700: result: @
| configure:5758: checking for strip
| configure:5774: found /usr/bin/strip
| configure:5785: result: strip
| configure:5857: checking for ranlib
| configure:5873: found /usr/bin/ranlib
| configure:5884: result: ranlib
| configure:5986: checking command to parse /usr/bin/nm -B output from gcc object
| configure:6106: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:6109: $? = 0
| configure:6113: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
| configure:6116: $? = 0
| configure:6182: gcc -o conftest  -g -O0 -DDEBUG  conftest.c conftstm.o >&5
| configure:6185: $? = 0
| configure:6223: result: ok
| configure:6260: checking for sysroot
| configure:6290: result: no
| configure:6367: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:6370: $? = 0
| configure:6559: checking for mt
| configure:6575: found /bin/mt
| configure:6586: result: mt
| configure:6609: checking if mt is a manifest tool
| configure:6615: mt '-?'
| configure:6623: result: no
| configure:7265: checking how to run the C preprocessor
| configure:7296: gcc -E -DDEBUG conftest.c
| configure:7296: $? = 0
| configure:7310: gcc -E -DDEBUG conftest.c
| conftest.c:19:28: fatal error: ac_nonexistent.h: No such file or directory
| compilation terminated.
| configure:7310: $? = 1
| configure: failed program was:
| | /* confdefs.h */
| | #define PACKAGE_NAME "MATIO"
| | #define PACKAGE_TARNAME "matio"
| | #define PACKAGE_VERSION "1.5.2"
| | #define PACKAGE_STRING "MATIO 1.5.2"
| | #define PACKAGE_BUGREPORT "chulbe2lsu@users.sourceforge.net"
| | #define PACKAGE_URL "http://sourceforge.net/projects/matio"
| | #define PACKAGE "matio"
| | #define VERSION "1.5.2"
| | #define MATIO_PLATFORM "x86_64-unknown-linux-gnu"
| | #define MATIO_MAJOR_VERSION 1
| | #define MATIO_MINOR_VERSION 5
| | #define MATIO_RELEASE_LEVEL 2
| | #define MATIO_VERSION 152
| | #define MATIO_VERSION_STR "1.5.2"
| | #define NODEBUG /**/
| | #define NODEBUG /**/
| | /* end confdefs.h.  */
| | #include <ac_nonexistent.h>
| configure:7335: result: gcc -E
| configure:7355: gcc -E -DDEBUG conftest.c
| configure:7355: $? = 0
| configure:7369: gcc -E -DDEBUG conftest.c
| conftest.c:19:28: fatal error: ac_nonexistent.h: No such file or directory
| compilation terminated.
| configure:7369: $? = 1
| configure: failed program was:
| | /* confdefs.h */
| | #define PACKAGE_NAME "MATIO"
| | #define PACKAGE_TARNAME "matio"
| | #define PACKAGE_VERSION "1.5.2"
| | #define PACKAGE_STRING "MATIO 1.5.2"
| | #define PACKAGE_BUGREPORT "chulbe2lsu@users.sourceforge.net"
| | #define PACKAGE_URL "http://sourceforge.net/projects/matio"
| | #define PACKAGE "matio"
| | #define VERSION "1.5.2"
| | #define MATIO_PLATFORM "x86_64-unknown-linux-gnu"
| | #define MATIO_MAJOR_VERSION 1
| | #define MATIO_MINOR_VERSION 5
| | #define MATIO_RELEASE_LEVEL 2
| | #define MATIO_VERSION 152
| | #define MATIO_VERSION_STR "1.5.2"
| | #define NODEBUG /**/
| | #define NODEBUG /**/
| | /* end confdefs.h.  */
| | #include <ac_nonexistent.h>
| configure:7398: checking for ANSI C header files
| configure:7418: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7418: $? = 0
| configure:7491: gcc -o conftest  -g -O0 -DDEBUG  conftest.c  >&5
| configure:7491: $? = 0
| configure:7491: ./conftest
| configure:7491: $? = 0
| configure:7502: result: yes
| configure:7515: checking for sys/types.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for sys/stat.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for stdlib.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for string.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for memory.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for strings.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for inttypes.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for stdint.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7515: checking for unistd.h
| configure:7515: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7515: $? = 0
| configure:7515: result: yes
| configure:7529: checking for dlfcn.h
| configure:7529: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:7529: $? = 0
| configure:7529: result: yes
| configure:7675: checking for objdir
| configure:7690: result: .libs
| configure:7961: checking if gcc supports -fno-rtti -fno-exceptions
| configure:7979: gcc -c  -g -O0 -DDEBUG -fno-rtti -fno-exceptions conftest.c >&5
| cc1: warning: command line option '-fno-rtti' is valid for C++/ObjC++ but not for C
| configure:7983: $? = 0
| configure:7996: result: no
| configure:8323: checking for gcc option to produce PIC
| configure:8330: result: -fPIC -DPIC
| configure:8338: checking if gcc PIC flag -fPIC -DPIC works
| configure:8356: gcc -c  -g -O0 -DDEBUG -fPIC -DPIC -DPIC conftest.c >&5
| configure:8360: $? = 0
| configure:8373: result: yes
| configure:8402: checking if gcc static flag -static works
| configure:8430: result: yes
| configure:8445: checking if gcc supports -c -o file.o
| configure:8466: gcc -c  -g -O0 -DDEBUG -o out/conftest2.o conftest.c >&5
| configure:8470: $? = 0
| configure:8492: result: yes
| configure:8500: checking if gcc supports -c -o file.o
| configure:8547: result: yes
| configure:8580: checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries
| configure:9737: result: yes
| configure:9774: checking whether -lc should be explicitly linked in
| configure:9782: gcc -c  -g -O0 -DDEBUG conftest.c >&5
| configure:9785: $? = 0
| configure:9800: gcc -shared  -fPIC -DPIC conftest.o  -v -Wl,-soname -Wl,conftest -o conftest 2\>\&1 \| /bin/grep  -lc  \>/dev/null 2\>\&1
| configure:9803: $? = 0
| configure:9817: result: no
| configure:9977: checking dynamic linker characteristics
| configure:10477: gcc -o conftest  -g -O0 -DDEBUG  -Wl,-rpath -Wl,/foo conftest.c  >&5
| configure:10477: $? = 0
| configure:10711: result: GNU/Linux ld.so
| configure:10818: checking how to hardcode library paths into programs
| configure:10843: result: immediate
| configure:11383: checking whether stripping libraries is possible
| configure:11388: result: yes
| configure:11423: checking if libtool supports shared libraries
| configure:11425: result: yes
| configure:11428: checking whether to build shared libraries
| configure:11449: result: yes
| configure:11452: checking whether to build static libraries
| configure:11456: result: yes
| configure:11494: checking whether make sets $(MAKE)
| configure:11516: result: yes
| configure:11527: checking for grep that handles long lines and -e
| configure:11585: result: /bin/grep
| configure:11592: checking for pow in -lm
| configure:11617: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm   >&5
| conftest.c:38:6: warning: conflicting types for built-in function 'pow'
|  char pow ();
|       ^
| configure:11617: $? = 0
| configure:11626: result: yes
| configure:11641: checking for ANSI C header files
| configure:11745: result: yes
| configure:11753: checking for inttypes.h
| configure:11753: result: yes
| configure:11763: checking for stdint.h
| configure:11763: result: yes
| configure:11773: checking for strings.h
| configure:11773: result: yes
| configure:11783: checking for unistd.h
| configure:11783: result: yes
| configure:11796: checking for getopt_long
| configure:11817: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| conftest.c: In function 'main':
| conftest.c:48:1: error: 'opt' undeclared (first use in this function)
|  opt = getopt_long(0,NULL,NULL,NULL,NULL);
|  ^
| conftest.c:48:1: note: each undeclared identifier is reported only once for each function it appears in
| configure:11817: $? = 1
| configure: failed program was:
| | /* confdefs.h */
| | #define PACKAGE_NAME "MATIO"
| | #define PACKAGE_TARNAME "matio"
| | #define PACKAGE_VERSION "1.5.2"
| | #define PACKAGE_STRING "MATIO 1.5.2"
| | #define PACKAGE_BUGREPORT "chulbe2lsu@users.sourceforge.net"
| | #define PACKAGE_URL "http://sourceforge.net/projects/matio"
| | #define PACKAGE "matio"
| | #define VERSION "1.5.2"
| | #define MATIO_PLATFORM "x86_64-unknown-linux-gnu"
| | #define MATIO_MAJOR_VERSION 1
| | #define MATIO_MINOR_VERSION 5
| | #define MATIO_RELEASE_LEVEL 2
| | #define MATIO_VERSION 152
| | #define MATIO_VERSION_STR "1.5.2"
| | #define NODEBUG /**/
| | #define NODEBUG /**/
| | #define STDC_HEADERS 1
| | #define HAVE_SYS_TYPES_H 1
| | #define HAVE_SYS_STAT_H 1
| | #define HAVE_STDLIB_H 1
| | #define HAVE_STRING_H 1
| | #define HAVE_MEMORY_H 1
| | #define HAVE_STRINGS_H 1
| | #define HAVE_INTTYPES_H 1
| | #define HAVE_STDINT_H 1
| | #define HAVE_UNISTD_H 1
| | #define HAVE_DLFCN_H 1
| | #define LT_OBJDIR ".libs/"
| | #define HAVE_LIBM 1
| | #define STDC_HEADERS 1
| | #define MATIO_HAVE_INTTYPES_H 1
| | #define MATIO_HAVE_STDINT_H 1
| | #define HAVE_STRINGS_H 1
| | #define HAVE_UNISTD_H 1
| | /* end confdefs.h.  */
| | #include <stdio.h>
| |  #include <stdlib.h>
| |  #ifdef HAVE_UNISTD_H
| |  #include <unistd.h>
| |  #endif
| |  #define _GNU_SOURCE /* For getopt_long on GNU systems */
| |  #include <getopt.h>
| | 
| | int
| | main ()
| | {
| | opt = getopt_long(0,NULL,NULL,NULL,NULL);
| |   ;
| |   return 0;
| | }
| configure:11830: result: internal
| configure:11847: checking size of double
| configure:11852: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:11852: $? = 0
| configure:11852: ./conftest
| configure:11852: $? = 0
| configure:11866: result: 8
| configure:11880: checking size of float
| configure:11885: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:11885: $? = 0
| configure:11885: ./conftest
| configure:11885: $? = 0
| configure:11899: result: 4
| configure:11913: checking size of long long
| configure:11918: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:11918: $? = 0
| configure:11918: ./conftest
| configure:11918: $? = 0
| configure:11932: result: 8
| configure:11946: checking size of long
| configure:11951: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:11951: $? = 0
| configure:11951: ./conftest
| configure:11951: $? = 0
| configure:11965: result: 8
| configure:11979: checking size of int
| configure:11984: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:11984: $? = 0
| configure:11984: ./conftest
| configure:11984: $? = 0
| configure:11998: result: 4
| configure:12012: checking size of short
| configure:12017: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12017: $? = 0
| configure:12017: ./conftest
| configure:12017: $? = 0
| configure:12031: result: 2
| configure:12045: checking size of char
| configure:12050: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12050: $? = 0
| configure:12050: ./conftest
| configure:12050: $? = 0
| configure:12064: result: 1
| configure:12078: checking size of void *
| configure:12083: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12083: $? = 0
| configure:12083: ./conftest
| configure:12083: $? = 0
| configure:12097: result: 8
| configure:12111: checking size of size_t
| configure:12116: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12116: $? = 0
| configure:12116: ./conftest
| configure:12116: $? = 0
| configure:12130: result: 8
| configure:12149: checking for mat_int64_t
| configure:12171: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12171: $? = 0
| configure:12192: result: int64_t
| configure:12447: checking for mat_uint64_t
| configure:12469: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12469: $? = 0
| configure:12490: result: uint64_t
| configure:12745: checking for mat_int32_t
| configure:12767: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:12767: $? = 0
| configure:12788: result: int32_t
| configure:13043: checking for mat_uint32_t
| configure:13065: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:13065: $? = 0
| configure:13086: result: uint32_t
| configure:13341: checking for mat_int16_t
| configure:13363: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:13363: $? = 0
| configure:13384: result: int16_t
| configure:13639: checking for mat_uint16_t
| configure:13661: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:13661: $? = 0
| configure:13682: result: uint16_t
| configure:13937: checking for mat_int8_t
| configure:13959: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:13959: $? = 0
| configure:13980: result: int8_t
| configure:14235: checking for mat_uint8_t
| configure:14257: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:14257: $? = 0
| configure:14278: result: uint8_t
| configure:14547: checking for va_copy()
| configure:14570: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| conftest.c: In function 'f':
| conftest.c:69:4: warning: implicit declaration of function 'exit' [-Wimplicit-function-declaration]
|     exit (1);
|     ^
| conftest.c:69:4: warning: incompatible implicit declaration of built-in function 'exit'
| conftest.c:69:4: note: include '<stdlib.h>' or provide a declaration of 'exit'
| configure:14570: $? = 0
| configure:14579: result: yes
| configure:14632: checking for vsnprintf()
| configure:14650: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:14650: $? = 0
| configure:14659: result: yes
| configure:14662: checking for snprintf()
| configure:14679: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| configure:14679: $? = 0
| configure:14688: result: yes
| configure:14691: checking for vasprintf()
| configure:14709: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| conftest.c: In function 'main':
| conftest.c:69:11: warning: implicit declaration of function 'vasprintf' [-Wimplicit-function-declaration]
|            vasprintf(NULL,"%d",ap);
|            ^
| configure:14709: $? = 0
| configure:14718: result: yes
| configure:14721: checking for asprintf()
| configure:14738: gcc -o conftest  -g -O0 -DDEBUG  conftest.c -lm  >&5
| conftest.c: In function 'main':
| conftest.c:68:11: warning: implicit declaration of function 'asprintf' [-Wimplicit-function-declaration]
|            asprintf(NULL,0,"%d",0);
|            ^
| configure:14738: $? = 0
| configure:14747: result: yes
| configure:14800: checking for matlab
| configure:14833: result: no
| configure:14846: result: no
| configure:14864: checking for zlib Library
| configure:14894: gcc -o conftest  -g -O0  -DDEBUG  conftest.c -lm  -lz >&5
| configure:14894: $? = 0
| configure:14951: result: -lz
| configure:14983: checking for HDF5 software
| configure:15020: gcc -o conftest   -g -O0 -DDEBUG  conftest.c -lhdf5 -lz -lm  >&5
| conftest.c:70:35: fatal error: hdf5.h: No such file or directory
| compilation terminated.
| configure:15020: $? = 1
| configure: failed program was:
| | /* confdefs.h */
| | #define PACKAGE_NAME "MATIO"
| | #define PACKAGE_TARNAME "matio"
| | #define PACKAGE_VERSION "1.5.2"
| | #define PACKAGE_STRING "MATIO 1.5.2"
| | #define PACKAGE_BUGREPORT "chulbe2lsu@users.sourceforge.net"
| | #define PACKAGE_URL "http://sourceforge.net/projects/matio"
| | #define PACKAGE "matio"
| | #define VERSION "1.5.2"
| | #define MATIO_PLATFORM "x86_64-unknown-linux-gnu"
| | #define MATIO_MAJOR_VERSION 1
| | #define MATIO_MINOR_VERSION 5
| | #define MATIO_RELEASE_LEVEL 2
| | #define MATIO_VERSION 152
| | #define MATIO_VERSION_STR "1.5.2"
| | #define NODEBUG /**/
| | #define NODEBUG /**/
| | #define STDC_HEADERS 1
| | #define HAVE_SYS_TYPES_H 1
| | #define HAVE_SYS_STAT_H 1
| | #define HAVE_STDLIB_H 1
| | #define HAVE_STRING_H 1
| | #define HAVE_MEMORY_H 1
| | #define HAVE_STRINGS_H 1
| | #define HAVE_INTTYPES_H 1
| | #define HAVE_STDINT_H 1
| | #define HAVE_UNISTD_H 1
| | #define HAVE_DLFCN_H 1
| | #define LT_OBJDIR ".libs/"
| | #define HAVE_LIBM 1
| | #define STDC_HEADERS 1
| | #define MATIO_HAVE_INTTYPES_H 1
| | #define MATIO_HAVE_STDINT_H 1
| | #define HAVE_STRINGS_H 1
| | #define HAVE_UNISTD_H 1
| | #define SIZEOF_DOUBLE 8
| | #define SIZEOF_FLOAT 4
| | #define SIZEOF_LONG_LONG 8
| | #define SIZEOF_LONG 8
| | #define SIZEOF_INT 4
| | #define SIZEOF_SHORT 2
| | #define SIZEOF_CHAR 1
| | #define SIZEOF_VOID_P 8
| | #define SIZEOF_SIZE_T 8
| | #define HAVE_MAT_INT64_T /**/
| | #define _mat_int64_t int64_t
| | #define HAVE_MAT_UINT64_T /**/
| | #define _mat_uint64_t uint64_t
| | #define HAVE_MAT_INT32_T /**/
| | #define _mat_int32_t int32_t
| | #define HAVE_MAT_UINT32_T /**/
| | #define _mat_uint32_t uint32_t
| | #define HAVE_MAT_INT16_T /**/
| | #define _mat_int16_t int16_t
| | #define HAVE_MAT_UINT16_T /**/
| | #define _mat_uint16_t uint16_t
| | #define HAVE_MAT_INT8_T /**/
| | #define _mat_int8_t int8_t
| | #define HAVE_MAT_UINT8_T /**/
| | #define _mat_uint8_t uint8_t
| | #define HAVE_VA_COPY /**/
| | #define HAVE_VSNPRINTF /**/
| | #define HAVE_SNPRINTF /**/
| | #define HAVE_VASPRINTF /**/
| | #define HAVE_ASPRINTF /**/
| | #define HAVE_ZLIB 1
| | /* end confdefs.h.  */
| | #include<stdio.h>
| |                  #include <stdlib.h>
| |                  #include <hdf5.h>
| | int
| | main ()
| | {
| | H5open()
| |   ;
| |   return 0;
| | }
| configure:15038: result: no
| configure:15117: checking enable enable MAT v7.3 file support
| configure:15121: result: no
| configure:15152: checking for default MAT file version
| configure:15172: result: MAT_FT_MAT5
| configure:15186: checking enable extended sparse types
| configure:15195: result: yes
| configure:15397: checking that generated files are newer than configure
| configure:15403: result: done
| configure:15454: creating ./config.status
| 
| ## ---------------------- ##
| ## Running config.status. ##
| ## ---------------------- ##
| 
| This file was extended by MATIO config.status 1.5.2, which was
| generated by GNU Autoconf 2.69.  Invocation command line was
| 
|   CONFIG_FILES    = 
|   CONFIG_HEADERS  = 
|   CONFIG_LINKS    = 
|   CONFIG_COMMANDS = 
|   $ ./config.status 
| 
| on marten-asus
| 
| config.status:1161: creating Makefile
| config.status:1161: creating matio.pc
| config.status:1161: creating src/Makefile
| config.status:1161: creating getopt/Makefile
| config.status:1161: creating tools/Makefile
| config.status:1161: creating test/Makefile
| config.status:1161: creating documentation/Makefile
| config.status:1161: creating src/matioConfig.h
| config.status:1342: src/matioConfig.h is unchanged
| config.status:1161: creating src/matio_pubconf.h
| config.status:1342: src/matio_pubconf.h is unchanged
| config.status:1390: executing libtool commands
| config.status:1390: executing test/atconfig commands
| configure:17617: result: 
| configure:17619: result:    MATIO Configuration Summary       
| configure:17621: result: ==============================================================
| configure:17623: result:            C Compiler: gcc
| configure:17625: result:                CFLAGS:  -g -O0
| configure:17627: result:      Shared Libraries: yes
| configure:17629: result:      Static Libraries: yes
| configure:17631: result:   default MAT version: MAT_FT_MAT5
| configure:17633: result: 
| configure:17635: result: Features --------------------------------------------
| configure:17637: result:   MAT v7.3 file support: no
| configure:17639: result: Extended sparse support: yes
| configure:17641: result: 
| configure:17643: result: Packages --------------------------------------------
| configure:17645: result:                  zlib: -lz
| configure:17647: result:                  hdf5: 
| configure:17649: result:                MATLAB: 
| configure:17651: result: 
| configure:17653: result: 
| 
| ## ---------------- ##
| ## Cache variables. ##
| ## ---------------- ##
| 
| ac_cv_build=x86_64-unknown-linux-gnu
| ac_cv_c_compiler_gnu=yes
| ac_cv_env_CC_set=
| ac_cv_env_CC_value=
| ac_cv_env_CFLAGS_set=set
| ac_cv_env_CFLAGS_value='-g -O0'
| ac_cv_env_CPPFLAGS_set=set
| ac_cv_env_CPPFLAGS_value=-DDEBUG
| ac_cv_env_CPP_set=
| ac_cv_env_CPP_value=
| ac_cv_env_FCLDFLAGS_set=
| ac_cv_env_FCLDFLAGS_value=
| ac_cv_env_LDFLAGS_set=
| ac_cv_env_LDFLAGS_value=
| ac_cv_env_LIBS_set=
| ac_cv_env_LIBS_value=
| ac_cv_env_LT_CFLAGS_set=
| ac_cv_env_LT_CFLAGS_value=
| ac_cv_env_LT_LDFLAGS_set=
| ac_cv_env_LT_LDFLAGS_value=
| ac_cv_env_build_alias_set=
| ac_cv_env_build_alias_value=
| ac_cv_env_host_alias_set=
| ac_cv_env_host_alias_value=
| ac_cv_env_target_alias_set=
| ac_cv_env_target_alias_value=
| ac_cv_header_dlfcn_h=yes
| ac_cv_header_inttypes_h=yes
| ac_cv_header_memory_h=yes
| ac_cv_header_stdc=yes
| ac_cv_header_stdint_h=yes
| ac_cv_header_stdlib_h=yes
| ac_cv_header_string_h=yes
| ac_cv_header_strings_h=yes
| ac_cv_header_sys_stat_h=yes
| ac_cv_header_sys_types_h=yes
| ac_cv_header_unistd_h=yes
| ac_cv_host=x86_64-unknown-linux-gnu
| ac_cv_lib_m_pow=yes
| ac_cv_objext=o
| ac_cv_path_EGREP='/bin/grep -E'
| ac_cv_path_FGREP='/bin/grep -F'
| ac_cv_path_GREP=/bin/grep
| ac_cv_path_SED=/bin/sed
| ac_cv_path_install='/usr/bin/install -c'
| ac_cv_path_mkdir=/bin/mkdir
| ac_cv_prog_AWK=gawk
| ac_cv_prog_CPP='gcc -E'
| ac_cv_prog_ac_ct_AR=ar
| ac_cv_prog_ac_ct_CC=gcc
| ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
| ac_cv_prog_ac_ct_OBJDUMP=objdump
| ac_cv_prog_ac_ct_RANLIB=ranlib
| ac_cv_prog_ac_ct_STRIP=strip
| ac_cv_prog_cc_c89=
| ac_cv_prog_cc_g=yes
| ac_cv_prog_make_make_set=yes
| ac_cv_sizeof_char=1
| ac_cv_sizeof_double=8
| ac_cv_sizeof_float=4
| ac_cv_sizeof_int=4
| ac_cv_sizeof_long=8
| ac_cv_sizeof_long_long=8
| ac_cv_sizeof_short=2
| ac_cv_sizeof_size_t=8
| ac_cv_sizeof_void_p=8
| am_cv_make_support_nested_variables=yes
| am_cv_prog_cc_c_o=yes
| lt_cv_ar_at_file=@
| lt_cv_archive_cmds_need_lc=no
| lt_cv_deplibs_check_method=pass_all
| lt_cv_file_magic_cmd='$MAGIC_CMD'
| lt_cv_file_magic_test_file=
| lt_cv_ld_reload_flag=-r
| lt_cv_nm_interface='BSD nm'
| lt_cv_objdir=.libs
| lt_cv_path_LD=/usr/bin/ld
| lt_cv_path_NM='/usr/bin/nm -B'
| lt_cv_path_mainfest_tool=no
| lt_cv_prog_compiler_c_o=yes
| lt_cv_prog_compiler_pic='-fPIC -DPIC'
| lt_cv_prog_compiler_pic_works=yes
| lt_cv_prog_compiler_rtti_exceptions=no
| lt_cv_prog_compiler_static_works=yes
| lt_cv_prog_gnu_ld=yes
| lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
| lt_cv_shlibpath_overrides_runpath=no
| lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
| lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
| lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
| lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
| lt_cv_sys_max_cmd_len=1572864
| lt_cv_to_host_file_cmd=func_convert_file_noop
| lt_cv_to_tool_file_cmd=func_convert_file_noop
| matio_cv_have_asprintf=yes
| matio_cv_have_matlab=no
| matio_cv_have_snprintf=yes
| matio_cv_have_va_copy=yes
| matio_cv_have_vasprintf=yes
| matio_cv_have_vsnprintf=yes
| 
| ## ----------------- ##
| ## Output variables. ##
| ## ----------------- ##
| 
| ACLOCAL='aclocal-1.15'
| AMTAR='$${TAR-tar}'
| AM_BACKSLASH='\'
| AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
| AM_DEFAULT_VERBOSITY='1'
| AM_V='$(V)'
| AR='ar'
| AUTOCONF='autoconf'
| AUTOHEADER='autoheader'
| AUTOM4TE='autom4te'
| AUTOMAKE='automake-1.15'
| AUTOTEST='$(AUTOM4TE) --language=Autotest'
| AWK='gawk'
| CC='gcc'
| CFLAGS=' -g -O0'
| CPP='gcc -E'
| CPPFLAGS='-DDEBUG'
| CYGPATH_W='echo'
| DEFS='-DHAVE_CONFIG_H'
| DLLTOOL='false'
| DSYMUTIL=''
| DUMPBIN=''
| ECHO_C=''
| ECHO_N='-n'
| ECHO_T=''
| EGREP='/bin/grep -E'
| EXEEXT=''
| EXTENDED_SPARSE_FALSE='#'
| EXTENDED_SPARSE_TRUE=''
| FCLDFLAGS=''
| FGREP='/bin/grep -F'
| GREP='/bin/grep'
| HAVE_HDF5_FALSE=''
| HAVE_HDF5_TRUE='#'
| HAVE_INT64='1'
| HAVE_UINT64='1'
| HAVE_ZLIB_FALSE='#'
| HAVE_ZLIB_TRUE=''
| HDF5_CFLAGS=''
| HDF5_LIBS=''
| INSTALL_DATA='${INSTALL} -m 644'
| INSTALL_PROGRAM='${INSTALL}'
| INSTALL_SCRIPT='${INSTALL}'
| INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
| LD='/usr/bin/ld -m elf_x86_64'
| LDFLAGS=''
| LIBOBJS=''
| LIBS='-lm '
| LIBTOOL='$(SHELL) $(top_builddir)/libtool'
| LINUX_FALSE='#'
| LINUX_TRUE=''
| LIPO=''
| LN_S='ln -s'
| LTLIBOBJS=''
| LT_CFLAGS=''
| LT_LDFLAGS=''
| MAINT='#'
| MAINTAINER_MODE_FALSE=''
| MAINTAINER_MODE_TRUE='#'
| MAKEINFO='makeinfo'
| MANIFEST_TOOL=':'
| MAT73_FALSE=''
| MAT73_TRUE='#'
| MATLABEXE=''
| MKDIR_P='/bin/mkdir -p'
| NEED_GETOPT_FALSE='#'
| NEED_GETOPT_TRUE=''
| NM='/usr/bin/nm -B'
| NMEDIT=''
| OBJDUMP='objdump'
| OBJEXT='o'
| OTOOL64=''
| OTOOL=''
| PACKAGE='matio'
| PACKAGE_BUGREPORT='chulbe2lsu@users.sourceforge.net'
| PACKAGE_NAME='MATIO'
| PACKAGE_RELEASE_DATE='31 July 2013'
| PACKAGE_STRING='MATIO 1.5.2'
| PACKAGE_TARNAME='matio'
| PACKAGE_URL='http://sourceforge.net/projects/matio'
| PACKAGE_VERSION='1.5.2'
| PATH_SEPARATOR=':'
| RANLIB='ranlib'
| SED='/bin/sed'
| SET_MAKE=''
| SHELL='/bin/bash'
| SIZEOF_INT='4'
| SIZEOF_SIZE_T='8'
| SIZEOF_VOID_P='8'
| STRIP='strip'
| SUN_FALSE=''
| SUN_TRUE='#'
| VERSION='1.5.2'
| WINNT_FALSE=''
| WINNT_TRUE='#'
| ZLIB_CFLAGS=''
| ZLIB_LIBS='-lz'
| ac_ct_AR='ar'
| ac_ct_CC='gcc'
| ac_ct_DUMPBIN=''
| am__EXEEXT_FALSE=''
| am__EXEEXT_TRUE='#'
| am__isrc=''
| am__leading_dot='.'
| am__tar='$${TAR-tar} chof - "$$tardir"'
| am__untar='$${TAR-tar} xf -'
| bindir='${exec_prefix}/bin'
| build='x86_64-unknown-linux-gnu'
| build_alias=''
| build_cpu='x86_64'
| build_os='linux-gnu'
| build_vendor='unknown'
| datadir='${datarootdir}'
| datarootdir='${prefix}/share'
| docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
| dvidir='${docdir}'
| exec_prefix='${prefix}'
| host='x86_64-unknown-linux-gnu'
| host_alias=''
| host_cpu='x86_64'
| host_os='linux-gnu'
| host_vendor='unknown'
| htmldir='${docdir}'
| includedir='${prefix}/include'
| infodir='${datarootdir}/info'
| install_sh='${SHELL} /home/marten/Projects/matio-matio/config/install-sh'
| libdir='${exec_prefix}/lib'
| libexecdir='${exec_prefix}/libexec'
| localedir='${datarootdir}/locale'
| localstatedir='${prefix}/var'
| mandir='${datarootdir}/man'
| mkdir_p='$(MKDIR_P)'
| oldincludedir='/usr/include'
| pdfdir='${docdir}'
| prefix='/usr/local'
| program_transform_name='s,x,x,'
| psdir='${docdir}'
| sbindir='${exec_prefix}/sbin'
| sharedstatedir='${prefix}/com'
| sysconfdir='${prefix}/etc'
| target_alias=''
| 
| ## ----------- ##
| ## confdefs.h. ##
| ## ----------- ##
| 
| /* confdefs.h */
| #define PACKAGE_NAME "MATIO"
| #define PACKAGE_TARNAME "matio"
| #define PACKAGE_VERSION "1.5.2"
| #define PACKAGE_STRING "MATIO 1.5.2"
| #define PACKAGE_BUGREPORT "chulbe2lsu@users.sourceforge.net"
| #define PACKAGE_URL "http://sourceforge.net/projects/matio"
| #define PACKAGE "matio"
| #define VERSION "1.5.2"
| #define MATIO_PLATFORM "x86_64-unknown-linux-gnu"
| #define MATIO_MAJOR_VERSION 1
| #define MATIO_MINOR_VERSION 5
| #define MATIO_RELEASE_LEVEL 2
| #define MATIO_VERSION 152
| #define MATIO_VERSION_STR "1.5.2"
| #define NODEBUG /**/
| #define NODEBUG /**/
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBM 1
| #define STDC_HEADERS 1
| #define MATIO_HAVE_INTTYPES_H 1
| #define MATIO_HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_UNISTD_H 1
| #define SIZEOF_DOUBLE 8
| #define SIZEOF_FLOAT 4
| #define SIZEOF_LONG_LONG 8
| #define SIZEOF_LONG 8
| #define SIZEOF_INT 4
| #define SIZEOF_SHORT 2
| #define SIZEOF_CHAR 1
| #define SIZEOF_VOID_P 8
| #define SIZEOF_SIZE_T 8
| #define HAVE_MAT_INT64_T /**/
| #define _mat_int64_t int64_t
| #define HAVE_MAT_UINT64_T /**/
| #define _mat_uint64_t uint64_t
| #define HAVE_MAT_INT32_T /**/
| #define _mat_int32_t int32_t
| #define HAVE_MAT_UINT32_T /**/
| #define _mat_uint32_t uint32_t
| #define HAVE_MAT_INT16_T /**/
| #define _mat_int16_t int16_t
| #define HAVE_MAT_UINT16_T /**/
| #define _mat_uint16_t uint16_t
| #define HAVE_MAT_INT8_T /**/
| #define _mat_int8_t int8_t
| #define HAVE_MAT_UINT8_T /**/
| #define _mat_uint8_t uint8_t
| #define HAVE_VA_COPY /**/
| #define HAVE_VSNPRINTF /**/
| #define HAVE_SNPRINTF /**/
| #define HAVE_VASPRINTF /**/
| #define HAVE_ASPRINTF /**/
| #define HAVE_ZLIB 1
| #define MAT_FT_DEFAULT MAT_FT_MAT5
| #define EXTENDED_SPARSE /**/
| #define LINUX /**/
| 
| configure: exit 0

